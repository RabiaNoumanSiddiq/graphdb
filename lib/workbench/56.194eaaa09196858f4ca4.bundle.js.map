{"version":3,"sources":["webpack:///./src/js/angular/graphexplore/controllers/dependencies-chord.controller.js"],"names":["allGraphs","contextID","type","value","uri","humanize","number","exp","Math","floor","log","result","pow","toFixed","DependenciesChordCtrl","$scope","$rootScope","$repositories","toastr","$timeout","GraphDataRestService","UiScrollService","ModalService","LocalStorageAdapter","RDF4JRepositoriesRestService","timer","status","getActiveRepository","STATUS","WAIT","NO_REPO","selectedGraph","initView","resolveGraphs","success","graphsInRepo","results","bindings","setSelectedGraphFromCache","isSystemRepository","getRelationshipsStatus","error","data","repositoryError","getError","selGraphFromCache","get","some","graph","set","getRelationshipsData","selectedClasses","d3","select","html","direction","matrixData","dependenciesData","matrix","right","nodes","left","hasLinks","_","sum","map","arr","READY","force","IN_PROGRESS","cancel","getRelationshipsClasses","classesData","allClasses","items","filter","classFilterFunc","allNotFilteredClasses","undefined","angular","isUndefined","slice","warning","indexOf","ERROR","substring","length","datasource","position","current","c","name","toLowerCase","classQuery","query","key","index","count","initLazyList","$watch","each","item","revision","adapterContainer","adapter","remain","reload","isActiveRepoFedXType","$on","isLoading","confirmCalculateDependencies","openSimpleModal","title","message","then","calculateDependencies","calculateRelationships","addClass","clazz","push","removeClass","remove","showClass","classToShow","isClassByNameShown","find","addClassByName","removeClassByName","removeAllClasses","repoIsSetListener","window","addEventListener","removeRepoIsSetListener","removeEventListener","selectGraph","getSelectedGraphValue","isAllGraphsSelected","Object","defineProperty","global","module","controller","config","$tooltipProvider","options","appendToBody","$inject"],"mappings":"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","file":"56.194eaaa09196858f4ca4.bundle.js","sourcesContent":["const STATUS = {\n    'WAIT': 'WAIT',\n    'NO_REPO': 'NO_REPO',\n    'READY': 'READY',\n    'IN_PROGRESS': 'IN_PROGRESS',\n    'ERROR': 'ERROR'\n};\n\nconst modules = [\n    'ui.scroll.jqlite',\n    'ui.scroll',\n    'toastr',\n    'ui.bootstrap',\n    'graphdb.framework.core.services.repositories',\n    'graphdb.framework.utils.localstorageadapter'\n];\nconst allGraphs = {\n    contextID: {\n        type: \"all\",\n        value: \"All graphs\",\n        uri: \"\"\n    }\n};\nObject.defineProperty(global, 'allGraphs', {\n    get: () => {return allGraphs;}\n});\n\nangular\n    .module('graphdb.framework.graphexplore.controllers.dependencies', modules)\n    .controller('DependenciesChordCtrl', DependenciesChordCtrl)\n    .config(['$tooltipProvider', function ($tooltipProvider) {\n        $tooltipProvider.options({appendToBody: true});\n    }])\n    .filter('humanize', function () {\n        return humanize;\n    });\n\nfunction humanize(number) {\n    if (number < 1000) {\n        return number;\n    }\n    const si = ['K', 'M', 'G', 'T', 'P', 'H'];\n    const exp = Math.floor(Math.log(number) / Math.log(1000));\n    let result = number / Math.pow(1000, exp);\n    result = (result % 1 > (1 / Math.pow(1000, exp - 1))) ? result.toFixed(2) : result.toFixed(0);\n    return result + si[exp - 1];\n}\n\nDependenciesChordCtrl.$inject = ['$scope', '$rootScope', '$repositories', 'toastr', '$timeout', 'GraphDataRestService', 'UiScrollService', 'ModalService', 'LocalStorageAdapter', 'RDF4JRepositoriesRestService'];\n\nfunction DependenciesChordCtrl($scope, $rootScope, $repositories, toastr, $timeout, GraphDataRestService, UiScrollService, ModalService, LocalStorageAdapter, RDF4JRepositoriesRestService) {\n\n    let timer = null;\n\n    $scope.status = !$repositories.getActiveRepository() ? STATUS.NO_REPO : STATUS.WAIT;\n\n    let selectedGraph = allGraphs;\n\n    const initView = function () {\n        RDF4JRepositoriesRestService.resolveGraphs()\n            .success(function (graphsInRepo) {\n                $scope.graphsInRepo = graphsInRepo.results.bindings;\n                setSelectedGraphFromCache();\n                if (!$scope.isSystemRepository()) {\n                    $scope.status = 'WAIT';\n                    getRelationshipsStatus(true);\n                } else if ($scope.status !== \"READY\") {\n                    getRelationshipsStatus();\n                }\n            }).error(function (data) {\n            $scope.repositoryError = getError(data);\n            toastr.error(getError(data), 'Error getting graphs');\n        });\n    };\n\n    const setSelectedGraphFromCache = function () {\n        const selGraphFromCache = LocalStorageAdapter.get(`dependencies-selectedGraph-${$repositories.getActiveRepository()}`);\n        if (selGraphFromCache !== null && $scope.graphsInRepo.some(graph => graph.contextID.uri === selGraphFromCache.contextID.uri)) {\n            selectedGraph = selGraphFromCache;\n        } else {\n            LocalStorageAdapter.set(`dependencies-selectedGraph-${$repositories.getActiveRepository()}`, selectedGraph);\n        }\n    };\n\n    const getRelationshipsData = function (selectedClasses) {\n        d3.select('#dependencies-chord').html('');\n\n        $scope.status = STATUS.WAIT;\n\n        GraphDataRestService.getRelationshipsData(selectedClasses, $scope.direction, selectedGraph.contextID.uri)\n            .success(function (matrixData) {\n                // Check classes empty\n                $scope.dependenciesData = {\n                    matrix: matrixData.right,\n                    nodes: matrixData.left,\n                    hasLinks: _.sum(_.map(matrixData.right, function (arr) {\n                        return _.sum(arr);\n                    })) > 0,\n                    direction: $scope.direction\n                };\n                $scope.status = STATUS.READY;\n            }).error(function (data) {\n            $scope.status = STATUS.READY;\n            toastr.error(getError(data), 'Could not get dependencies count');\n        });\n    };\n\n    const getRelationshipsClasses = function () {\n        GraphDataRestService.getRelationshipsClasses($scope.direction, selectedGraph.contextID.uri)\n            .success(function (classesData, status) {\n                $scope.allClasses.items = _.filter(classesData, classFilterFunc);\n                $scope.allNotFilteredClasses = classesData;\n                $scope.selectedClasses = undefined;\n                if (angular.isUndefined($scope.selectedClasses)) {\n                    $scope.selectedClasses = classesData.slice(0, 10);\n                }\n                getRelationshipsData($scope.selectedClasses);\n                if (status === 207) {\n                    toastr.warning('You can update the diagram by pressing the reload button.', 'Repository data has changed');\n                }\n            });\n    };\n\n    const getRelationshipsStatus = function (force) {\n        if ($scope.status === STATUS.READY && !force) {\n            return;\n        }\n        $scope.status = STATUS.WAIT;\n        GraphDataRestService.getRelationshipsStatus(selectedGraph.contextID.uri)\n            .success(function (data) {\n                $scope.status = data;\n                if ($scope.status === STATUS.IN_PROGRESS) {\n                    if (timer !== null) {\n                        return;\n                    } else {\n                        timer = $timeout(getRelationshipsStatus, 2000);\n                    }\n                }\n                if ($scope.status === STATUS.READY) {\n                    if (timer !== null) {\n                        $timeout.cancel(timer);\n                        timer = null;\n                    }\n                    getRelationshipsClasses();\n                }\n                if ($scope.status.indexOf('ERROR;') === 0) {\n                    $scope.status = STATUS.ERROR;\n                    toastr.error('There was an error while calculating dependencies: ' + $scope.status.substring('ERROR;'.length));\n                }\n            })\n            .error(function (data) {\n                $scope.status = STATUS.ERROR;\n                toastr.error(getError(data), 'Could not get dependencies count status!');\n            });\n    };\n\n    $scope.allClasses = {};\n    $scope.allClasses.items = [];\n    $scope.allNotFilteredClasses = [];\n    $scope.direction = 'all';\n\n    const datasource = {};\n    let position = 0;\n    let current = 0;\n    $rootScope.key = '';\n\n    datasource.get = function (index, count, success) {\n        return UiScrollService.initLazyList(index, count, success, position, $scope.allClasses.items);\n    };\n\n    $rootScope.$watch(function () {\n        return $rootScope.key;\n    }, function () {\n        position = 0;\n        _.each($scope.allClasses.items, function (item) {\n            if ($rootScope.key > item) position++;\n        });\n        current++;\n    });\n\n    datasource.revision = function () {\n        return current;\n    };\n\n    $scope.datasource = datasource;\n\n    // adapter implementation for ui-scroll directive\n    // reload\n    $scope.adapterContainer = {adapter: {remain: true}};\n\n    $scope.classQuery = {};\n    $scope.classQuery.query = '';\n    $scope.classFilterFunc = classFilterFunc;\n\n    function classFilterFunc(c) {\n        return c.name\n            .toLowerCase()\n            .indexOf($scope.classQuery.query.toLowerCase()) !== -1;\n    }\n\n    $scope.$watch('allClasses.items', function () {\n        if ($scope.allClasses.items.length > 0) {\n            $timeout(function () {\n                $scope.adapterContainer.adapter.reload();\n            }, 30);\n        }\n    });\n\n    $scope.$watch('direction', function () {\n        if (!$repositories.getActiveRepository() ||\n                $scope.isSystemRepository() || $repositories.isActiveRepoFedXType()) {\n            return;\n        }\n        initView();\n    });\n\n    $scope.$on('$destroy', function () {\n        $timeout.cancel(timer);\n    });\n\n    $scope.isLoading = function () {\n        return $scope.status === STATUS.IN_PROGRESS || $scope.status === STATUS.WAIT;\n    };\n\n    $scope.confirmCalculateDependencies = function () {\n        ModalService.openSimpleModal({\n            title: 'Confirm operation',\n            message: 'Calculating relationships data may take some time. Are you sure?',\n            warning: true\n        }).result\n            .then(function () {\n                $scope.calculateDependencies();\n            });\n    };\n\n    $scope.calculateDependencies = function () {\n        $scope.status = STATUS.WAIT;\n        $scope.selectedClasses = undefined;\n        GraphDataRestService.calculateRelationships(selectedGraph.contextID.uri)\n            .success(function (data) {\n                if (data.indexOf('ERROR;') === 0) {\n                    toastr.error('There was an error while calculating dependencies: ' + data.substring('ERROR;'.length));\n                } else {\n                    getRelationshipsStatus();\n                }\n            })\n            .error(function (data) {\n                toastr.error('Could not force dependencies count' + getError(data));\n            });\n    };\n\n    $scope.addClass = function (clazz) {\n        $scope.selectedClasses.push(clazz);\n        getRelationshipsData($scope.selectedClasses);\n    };\n\n    $scope.removeClass = function (clazz) {\n        _.remove($scope.selectedClasses, function (c) {\n            return c.name === clazz.name;\n        });\n        getRelationshipsData($scope.selectedClasses);\n    };\n\n    $scope.showClass = function (clazz) {\n        $scope.classToShow = clazz;\n    };\n\n    $scope.isClassByNameShown = function (name) {\n        return _.find($scope.selectedClasses, {name: name}) !== undefined;\n    };\n\n    $scope.addClassByName = function (name) {\n        $scope.selectedClasses.push(_.find($scope.allClasses.items, {name: name}));\n        getRelationshipsData($scope.selectedClasses);\n    };\n\n    $scope.removeClassByName = function (name) {\n        _.remove($scope.selectedClasses, function (c) {\n            return c.name === name;\n        });\n        getRelationshipsData($scope.selectedClasses);\n    };\n\n\n    $scope.removeAllClasses = function () {\n        $scope.selectedClasses = [];\n        getRelationshipsData($scope.selectedClasses);\n    };\n\n    $scope.isSystemRepository = function () {\n        return $repositories.getActiveRepository() === 'SYSTEM';\n    };\n\n    function onRepositoryIsSet() {\n        // clear class search on changing the repository\n        $scope.classQuery = {};\n        $scope.classQuery.query = '';\n        $scope.repositoryError = null;\n        selectedGraph = allGraphs;\n        if (!$repositories.getActiveRepository() || $repositories.isActiveRepoFedXType()) {\n            $scope.status = STATUS.NO_REPO;\n            return;\n        }\n        initView();\n    }\n\n    const repoIsSetListener = $scope.$on('repositoryIsSet', onRepositoryIsSet);\n\n    window.addEventListener('beforeunload', removeRepoIsSetListener);\n\n    function removeRepoIsSetListener() {\n        repoIsSetListener();\n        window.removeEventListener('beforeunload', removeRepoIsSetListener);\n    }\n\n    $scope.selectGraph = function (graph) {\n        selectedGraph = graph;\n        getRelationshipsStatus(true);\n        LocalStorageAdapter.set(`dependencies-selectedGraph-${$repositories.getActiveRepository()}`, selectedGraph);\n    };\n\n    $scope.getSelectedGraphValue = function () {\n        return selectedGraph.contextID.value;\n    };\n\n    $scope.isAllGraphsSelected = function () {\n        return $scope.getSelectedGraphValue() === 'All graphs'\n    }\n}\n"],"sourceRoot":""}