(window.webpackJsonp=window.webpackJsonp||[]).push([[5,81],{41:function(e,t,o){"use strict";o.r(t),o.d(t,"getFileName",(function(){return r}));var i=o(72);const r=function(e){let t=e.lastIndexOf("/");-1===t&&(t=e.lastIndexOf("\\"));let o=e;return-1!==t&&(o=o.substring(t+1)),o},n=function(e){e&&(e.queryTimeout&&(e.queryTimeout.value=parseInt(e.queryTimeout.value)),e.queryLimitResults&&e.validationResultsLimitTotal&&e.validationResultsLimitPerConstraint?(e.queryLimitResults.value=parseInt(e.queryLimitResults.value),e.validationResultsLimitTotal.value=parseInt(e.validationResultsLimitTotal.value),e.validationResultsLimitPerConstraint.value=parseInt(e.validationResultsLimitPerConstraint.value)):e.leftJoinWorkerThreads&&e.boundJoinBlockSize&&e.joinWorkerThreads&&e.unionWorkerThreads&&(e.leftJoinWorkerThreads.value=parseInt(e.leftJoinWorkerThreads.value),e.boundJoinBlockSize.value=parseInt(e.boundJoinBlockSize.value),e.joinWorkerThreads.value=parseInt(e.joinWorkerThreads.value),e.unionWorkerThreads.value=parseInt(e.unionWorkerThreads.value)))},a=function(e){e&&e.member&&(e.member.value=[])},s=function(){const e=document.getElementById("shaclOptions");if(e){const t=e.getAttribute("aria-expanded");if(t&&"true"===t)return"fa fa-angle-down"}return"fa fa-angle-right"},l=function(e,t){e.queryTimeout&&(t.isInvalidQueryTimeout=!i.NUMBER_PATTERN.test(e.queryTimeout.value)),e.validationResultsLimitTotal&&e.validationResultsLimitPerConstraint&&e.queryLimitResults?(t.isInvalidValidationResultsLimitTotal=!i.NUMBER_PATTERN.test(e.validationResultsLimitTotal.value),t.isInvalidValidationResultsLimitPerConstraint=!i.NUMBER_PATTERN.test(e.validationResultsLimitPerConstraint.value),t.isInvalidQueryLimit=!i.NUMBER_PATTERN.test(e.queryLimitResults.value)):e.leftJoinWorkerThreads&&e.boundJoinBlockSize&&e.joinWorkerThreads&&e.unionWorkerThreads&&(t.isInvalidLeftJoinWorkerThreads=!i.NUMBER_PATTERN.test(e.leftJoinWorkerThreads.value),t.isInvalidBoundJoinBlockSize=!i.NUMBER_PATTERN.test(e.boundJoinBlockSize.value),t.isInvalidJoinWorkerThreads=!i.NUMBER_PATTERN.test(e.joinWorkerThreads.value),t.isInvalidUnionWorkerThreads=!i.NUMBER_PATTERN.test(e.unionWorkerThreads.value))},d=function(e){let t=Object.keys(e),o=Object.values(e);for(let e=0;e<t.length;e++)if(o[e])return"isInvalidQueryLimit"===(i=t[e])?"Invalid parameter query limit":"isInvalidQueryTimeout"===i?"Invalid parameter query timeout":"isInvalidValidationResultsLimitTotal"===i?"Invalid parameter validation results limit total":"isInvalidValidationResultsLimitPerConstraint"===i?"Invalid parameter validation results limit per constraint":"isInvalidJoinWorkerThreads"===i?"Invalid parameter join worker threads":"isInvalidLeftJoinWorkerThreads"===i?"Invalid parameter left join worker threads":"isInvalidUnionWorkerThreads"===i?"Invalid parameter union worker threads":"isInvalidBoundJoinBlockSize"===i?"Invalid parameter bound join block size":void 0;var i;return""},c=function(e){return`https://graphdb.ontotext.com/documentation/${e.productShortVersion}/${e.productType}`};function u(e,t,o,r,n,a,s,l,d){e.loader=!0,e.isLocationInactive=function(t){return!t.active||!e.hasActiveLocation()},e.getLocations=function(){return r.getLocations()},e.hasActiveLocation=function(){return r.hasActiveLocation()},e.getActiveLocation=function(){return r.getActiveLocation()},e.getLocationError=function(){return r.getLocationError()},e.getDegradedReason=function(){return r.getDegradedReason()},e.getRepositories=function(){return r.getRepositories()},e.deleteLocation=function(t){n.openSimpleModal({title:"Confirm detach",message:"Are you sure you want to detach the location '"+t+"'?",warning:!0}).result.then((function(){e.loader=!0,r.deleteLocation(t)}))},e.addLocationHttp=function(t){e.loader=!0,s.addLocation(t).success((function(t){e.locations=t,r.init()})).error((function(t){const i=getError(t);o.error(i,"Error"),e.loader=!1}))},e.addLocation=function(){t.open({templateUrl:"js/angular/templates/modal/add-location.html",windowClass:"addLocationDialog",controller:"AddLocationCtrl"}).result.then((function(t){e.addLocationHttp(t)}))},e.editLocationHttp=function(t){e.loader=!0,s.editLocation(t).success((function(t){e.locations=t,r.init()})).error((function(t){const i=getError(t);o.error(i,"Error"),e.loader=!1}))},e.editLocation=function(o){t.open({templateUrl:"js/angular/templates/modal/edit-location.html",controller:"EditLocationCtrl",resolve:{location:function(){return o}}}).result.then((function(t){e.editLocationHttp(t)}),(function(){}))},e.activateLocationRequest=function(t){e.loader=!0;const i={uri:t.uri};s.enableLocation(i).success((function(){r.setRepository(""),r.init()})).error((function(e){const i=getError(e);o.error(i,"Error"),document.getElementById("switch-"+t.$$hashKey).checked=!1}))},e.activateLocation=function(t){e.hasActiveLocation()?n.openSimpleModal({title:"Confirm location change",message:"Are you sure you want to change the location?",warning:!0}).result.then((function(){e.activateLocationRequest(t)}),(function(){document.getElementById("switch-"+t.$$hashKey).checked=!1})):e.activateLocationRequest(t)},e.setRepository=function(e){r.setRepository(e)},e.deleteRepository=function(t){n.openSimpleModal({title:"Confirm delete",message:`<p>Are you sure you want to delete the repository <strong>${t}</strong>?</p>\n                      <p><span class="icon-2x icon-warning" style="color: #d54a33"/>\n                            All data in the repository will be lost.</p>`,warning:!0}).result.then((function(){e.loader=!0,r.deleteRepository(t),function(e){const t=`dependencies-selectedGraph-${e}`,o=`classHierarchy-selectedGraph-${e}`;angular.forEach(l.keys(),(function(e){(e.startsWith(o)||e.startsWith(t))&&l.remove(e)}))}(t)}))},e.restartRepository=function(t){n.openSimpleModal({title:"Confirm restart",message:`<p>Are you sure you want to restart the repository <strong>${t}</strong>?</p>\n                        <p><span class="icon-2x icon-warning" style="color: #d54a33"/>\n                            The repository will be shut down immediately and all running queries\n                            and updates will be cancelled.</p>`,warning:!0}).result.then((function(){e.loader=!0,r.restartRepository(t)}))},e.toggleDefaultRepository=function(t){e.getDefaultRepository()===t?r.setDefaultRepository(null):r.setDefaultRepository(t)},e.getDefaultRepository=function(){return r.getDefaultRepository()},e.getRepositoryDownloadLink=function(e){let t=`rest/repositories/${e.id}${e.type===i.REPOSITORY_TYPES.ontop?"/downloadZip":"/download"}`;const o=a.getAuthToken();return o&&(t=`${t}?authToken=${encodeURIComponent(o)}`),t},e.copyToClipboard=function(e){n.openCopyToClipboardModal(e)},e.fromFile=function(){t.open({templateUrl:"js/angular/templates/modal/upload-repository-config.html",controller:"UploadRepositoryConfigCtrl"}).result.then((function(){r.init()}))},e.openActiveLocationSettings=function(){t.open({templateUrl:"js/angular/settings/modal/location-settings.html",controller:"ActiveLocationSettingsCtrl"})};const c=d((function(){r.initQuick()}),5e3);e.$on("$destroy",(function(){d.cancel(c)}))}function p(e,t,o,i){e.upload=function(t){t&&t.length&&(e.uploadFile=t[0])},e.ok=function(){e.uploadFile&&(e.uploadFileLoader=!0,o.upload({url:"rest/repositories",method:"POST",data:{config:e.uploadFile}}).success((function(){e.uploadFileLoader=!1,t.close()})).error((function(t){const o=getError(t);i.error(o,"Error"),e.uploadFileLoader=!1})))},e.cancel=function(){t.dismiss("cancel")}}function f(e,t,o,i){e.newLocation={uri:"",authType:"none",username:"",password:"",active:!1},e.docBase=c(i),e.isValidLocation=function(){return(e.newLocation.uri.length<6||0===e.newLocation.uri.indexOf("http:")||0===e.newLocation.uri.indexOf("https:"))&&e.newLocation.uri.indexOf("/repositories")<=-1},e.ok=function(){e.newLocation?t.close(e.newLocation):o.error("Location cannot be empty")},e.cancel=function(){t.dismiss("cancel")}}function m(e,t,o,i){e.editedLocation=angular.copy(o),e.docBase=c(i),e.ok=function(){t.close(e.editedLocation)},e.cancel=function(){t.dismiss("cancel")}}function h(e,t,o,r){e.pageTitle="Select repository type",e.repositoryTypes=i.REPOSITORY_TYPES,e.isEnterprise=o,e.isFreeEdition=r,e.chooseRepositoryType=function(e){t.path(`${t.path()}/${e}`)}}function y(e,t,o,r,c,u,p,f,m,h){var y;e.rulesets=i.STATIC_RULESETS.slice(),e.repositoryTypes=i.REPOSITORY_TYPES,e.repoTooltips=i.REPO_TOOLTIPS,e.params=m,e.repositoryType=m.repositoryType,e.enable=!0,e.loader=!0,e.pageTitle="Create Repository",e.repositoryInfo={id:"",params:{},title:"",type:""},e.isEnterprise=p,e.isFreeEdition=f,e.invalidValues={isInvalidQueryTimeout:!1,isInvalidQueryLimit:!1,isInvalidLeftJoinWorkerThreads:!1,isInvalidBoundJoinBlockSize:!1,isInvalidJoinWorkerThreads:!1,isInvalidUnionWorkerThreads:!1,isInvalidValidationResultsLimitPerConstraint:!1,isInvalidValidationResultsLimitTotal:!1},e.getConfig=function(o){h.getRepositoryConfiguration(o).success((function(t){e.repositoryInfo.params=t.params,e.repositoryInfo.type=t.type,n(e.repositoryInfo.params),a(e.repositoryInfo.params),e.loader=!1,c((function(){angular.element(document).find("#id").focus()}),50)})).error((function(o){const i=getError(o);t.error(i,"Error"),e.loader=!1}))},e.repositoryType&&(function(t){return e.isEnterprise&&(t===i.REPOSITORY_TYPES.eeMaster||t===i.REPOSITORY_TYPES.eeWorker)}(y=e.repositoryType)||function(t){return!e.isFreeEdition&&!e.isEnterprise&&t===i.REPOSITORY_TYPES.se}(y)||function(t){return e.isFreeEdition&&t===i.REPOSITORY_TYPES.free}(y)||function(e){return e===i.REPOSITORY_TYPES.ontop}(y)||function(e){return e===i.REPOSITORY_TYPES.fedx}(y))?(e.repositoryInfo.type=e.repositoryType,e.getConfig(e.repositoryType),function(t){switch(t){case i.REPOSITORY_TYPES.free:e.pageTitle="Create GraphDB Free repository";break;case i.REPOSITORY_TYPES.eeWorker:e.pageTitle="Create GraphDB EE Worker repository";break;case i.REPOSITORY_TYPES.eeMaster:e.pageTitle="Create GraphDB EE Master repository";break;case i.REPOSITORY_TYPES.se:e.pageTitle="Create GraphDB SE repository";break;case i.REPOSITORY_TYPES.ontop:e.pageTitle="Create Ontop Virtual SPARQL repository";break;case i.REPOSITORY_TYPES.fedx:e.pageTitle="Create FedX Virtual SPARQL repository"}}(e.repositoryType)):r.path("/repository/create"),e.hasActiveLocation=function(){return o.hasActiveLocation()},e.activeLocation=function(){return o.getActiveLocation()};let v=!1;e.uploadRuleset=function(o){o&&o.length&&(e.uploadFile=o[0],e.uploadFileLoader=!0,u.upload({url:"rest/repositories/uploadRuleSet",data:{ruleset:e.uploadFile}}).progress((function(e){})).success((function(o){if(o.success){const t=e.uploadFile.name,i={id:o.fileLocation,name:"Custom: "+t};e.rulesetPie?e.rulesets[0]=i:e.rulesets.unshift(i),e.rulesetPie=o.fileLocation,e.rulesetPieFile=t,e.repositoryInfo.params.ruleset.value=e.rulesetPie}else t.error(o.errorMessage),v=!0;e.uploadFileLoader=!1})).error((function(o){const i=getError(o);t.error(i,"Error"),e.uploadFile="",e.uploadFileLoader=!1})))},e.noMembersError=function(){t.error("FedX repository should be created with at least one member!")},e.goBackToPreviousLocation=function(){angular.isDefined(m.previous)?(delete r.$$search.previous,r.path("/")):r.path("/repository")},e.createRepoHttp=function(){e.loader=!0,h.createRepository(e.repositoryInfo).success((function(){t.success("The repository "+e.repositoryInfo.id+" has been created."),o.init(e.goBackToPreviousLocation)})).error((function(o){const i=getError(o);t.error(i,"Error"),e.loader=!1}))},e.createRepo=function(){if(!e.repositoryInfo.id)return void t.error("Repository ID cannot be empty");e.isInvalidRepoName=!i.FILENAME_PATTERN.test(e.repositoryInfo.id),l(e.repositoryInfo.params,e.invalidValues);const o=d(e.invalidValues);v?t.error("Invalid rule-set file. Please upload a valid one."):e.isInvalidRepoName?t.error("Wrong repo name"):"fedx"===e.repositoryType&&0===e.repositoryInfo.params.member.value.length?e.noMembersError():o?t.error(o):e.createRepoHttp()},e.rulesetWarning=function(){const t=e.repositoryInfo.params;return void 0===t||void 0===t.ruleset||void 0===t.disableSameAs?"":0===t.ruleset.value.indexOf("owl")&&"true"===t.disableSameAs.value?i.REPO_TOOLTIPS.rulesetWarnings.needsSameAs:0===t.ruleset.value.indexOf("rdfs")&&"false"===t.disableSameAs.value?i.REPO_TOOLTIPS.rulesetWarnings.doesntNeedSameAs:t.ruleset.value===e.rulesetPie?i.REPO_TOOLTIPS.rulesetWarnings.customRuleset:""},e.validateNumberInput=function(){l(e.repositoryInfo.params,e.invalidValues)},e.getShaclOptionsClass=function(){return s()},e.autofocusId="autofocus"}function v(e,t,o,i,r){i&&o.getRepositoryFileContent(i).success((function(t){e.fileContent=t})).error((function(e){const t=getError(e);r.error(t,"Error")})),e.ok=function(){t.close({content:e.fileContent,fileLocation:i})},e.cancel=function(){t.dismiss("cancel")}}function R(e,t,o,a,c,u,p,f,m){e.rulesets=i.STATIC_RULESETS.slice(),e.repositoryTypes=i.REPOSITORY_TYPES,e.repoTooltips=i.REPO_TOOLTIPS,e.editRepoPage=!0,e.canEditRepoId=!1,e.params=t,e.loader=!0,e.isEnterprise=p,e.isFreeEdition=f,e.repositoryInfo={},e.repositoryInfo.id=e.params.repositoryId,e.repositoryInfo.restartRequested=!1,e.repositoryType="",e.saveRepoId=e.params.repositoryId,e.pageTitle="Edit Repository: "+e.params.repositoryId,e.invalidValues={isInvalidQueryTimeout:!1,isInvalidQueryLimit:!1,isInvalidLeftJoinWorkerThreads:!1,isInvalidBoundJoinBlockSize:!1,isInvalidJoinWorkerThreads:!1,isInvalidUnionWorkerThreads:!1,isInvalidValidationResultsLimitPerConstraint:!1,isInvalidValidationResultsLimitTotal:!1},e.hasActiveLocation=function(){return a.hasActiveLocation()},e.$watch(e.hasActiveLocation,(function(){e.hasActiveLocation&&m.getRepository(e.repositoryInfo.id).success((function(t){if(angular.isDefined(t.params.ruleset)){let o=!1;if(angular.forEach(e.rulesets,(function(e){e.id===t.params.ruleset.value&&(o=!0)})),t.params.ruleset&&!o){let o=r(t.params.ruleset.value);e.rulesets.unshift({id:t.params.ruleset.value,name:"Custom: "+o})}}e.repositoryInfo=t,e.setRepositoryType(t.type),n(e.repositoryInfo.params),e.repositoryInfo.saveId=e.saveRepoId,e.loader=!1})).error((function(i,r){if(404===r&&"system"!==t.repositoryId)o.error("Repo with name <b>"+t.repositoryId+"</b> doesn't exists","Error",{allowHtml:!0}),e.loader=!1,c.path("repository");else if(404===r&&"system"===t.repositoryId)o.error("<b>System</b> repository can't be edited","Error",{allowHtml:!0}),e.loader=!1,c.path("repository");else{const t=getError(i);o.error(t,"Error"),e.loader=!1}}))})),e.setRepositoryType=function(t){e.repositoryType=t},e.noMembersError=function(){o.error("FedX repository should be created with at least one member!")},e.editRepoHttp=function(){e.loader=!0,m.editRepository(e.repositoryInfo.saveId,e.repositoryInfo).success((function(){o.success("The repository "+e.repositoryInfo.saveId+" has been edited."),a.init(e.goBackToPreviousLocation),e.repositoryInfo.saveId===e.repositoryInfo.id&&e.repositoryInfo.restartRequested&&a.restartRepository(e.repositoryInfo.id)})).error((function(t){const i=getError(t);o.error(i,"Error"),e.loader=!1}))},e.editRepository=function(){e.isInvalidRepoName=!i.FILENAME_PATTERN.test(e.repositoryInfo.id),l(e.repositoryInfo.params,e.invalidValues);const t=d(e.invalidValues);let r=`Save changes to repository <strong>${e.repositoryInfo.id}</strong>?<br><br>`;e.repositoryInfo.saveId!==e.repositoryInfo.id?r+='<span class="icon-2x icon-warning" style="color: #d54a33"/>\n                        The repository will be stopped and renamed.':e.repositoryInfo.restartRequested?r+='<span class="icon-2x icon-warning" style="color: #d54a33"/>\n                        The repository will be restarted.':r+='<span class="icon-2x icon-warning" style="color: #d54a33"/>\n                        Repository restart required for changes to take effect.',e.isInvalidRepoName?o.error("Wrong repo name"):"fedx"===e.repositoryType&&0===e.repositoryInfo.params.member.value.length?e.noMembersError():t?o.error(t):u.openSimpleModal({title:"Confirm save",message:r,warning:!0}).result.then((function(){e.editRepoHttp()}))},e.editRepositoryId=function(){let t="<p>Changing the repository ID is a dangerous operation since it renames the repository folder and enforces repository shutdown.</p>";e.isEnterprise&&(t+="<p>If your repository is in a cluster, it is your responsibility to update the cluster after renaming.</p>"),u.openSimpleModal({title:"Confirm enable edit",message:t,warning:!0}).result.then((function(){e.canEditRepoId=!0}))},e.goBackToPreviousLocation=function(){angular.isDefined(t.previous)?(delete c.$$search.previous,c.path("/")):c.path("/repository")},e.validateNumberInput=function(){l(e.repositoryInfo.params,e.invalidValues)},e.getShaclOptionsClass=function(){return s()}}angular.module("graphdb.framework.repositories.controllers",["ngCookies","ui.bootstrap","graphdb.framework.core.services.repositories","graphdb.framework.utils.localstorageadapter","toastr","ngFileUpload"]).controller("LocationsAndRepositoriesCtrl",u).controller("AddLocationCtrl",f).controller("EditLocationCtrl",m).controller("ChooseRepositoryCtrl",h).controller("AddRepositoryCtrl",y).controller("EditRepositoryCtrl",R).controller("EditRepositoryFileCtrl",v).controller("UploadRepositoryConfigCtrl",p),u.$inject=["$scope","$modal","toastr","$repositories","ModalService","$jwtAuth","LocationsRestService","LocalStorageAdapter","$interval"],p.$inject=["$scope","$modalInstance","Upload","toastr"],f.$inject=["$scope","$modalInstance","toastr","productInfo"],m.$inject=["$scope","$modalInstance","location","productInfo"],h.$inject=["$scope","$location","isEnterprise","isFreeEdition"],y.$inject=["$scope","toastr","$repositories","$location","$timeout","Upload","isEnterprise","isFreeEdition","$routeParams","RepositoriesRestService"],v.$inject=["$scope","$modalInstance","RepositoriesRestService","file","toastr"],R.$inject=["$scope","$routeParams","toastr","$repositories","$location","ModalService","isEnterprise","isFreeEdition","RepositoriesRestService"]},72:function(e,t,o){"use strict";o.r(t),o.d(t,"STATIC_RULESETS",(function(){return i})),o.d(t,"REPOSITORY_TYPES",(function(){return r})),o.d(t,"FILENAME_PATTERN",(function(){return n})),o.d(t,"NUMBER_PATTERN",(function(){return a})),o.d(t,"REPO_TOOLTIPS",(function(){return s}));const i=[{id:"empty",name:"No inference"},{id:"rdfs-optimized",name:"RDFS (Optimized)"},{id:"rdfs",name:"RDFS"},{id:"rdfsplus-optimized",name:"RDFS-Plus (Optimized)"},{id:"owl-horst-optimized",name:"OWL-Horst (Optimized)"},{id:"owl-horst",name:"OWL-Horst"},{id:"owl2-ql-optimized",name:"OWL2-QL (Optimized)"},{id:"owl2-ql",name:"OWL2-QL"},{id:"owl-max-optimized",name:"OWL-Max (Optimized)"},{id:"owl-max",name:"OWL-Max"},{id:"owl2-rl-optimized",name:"OWL2-RL (Optimized)"},{id:"owl2-rl",name:"OWL2-RL"}],r={free:"free",eeWorker:"worker",eeMaster:"master",ontop:"ontop",se:"se",fedx:"fedx"},n=new RegExp("^[a-zA-Z0-9-_]+$"),a=new RegExp("[0-9]"),s={id:"Unique identifier for the repository. The ID must contain only letters (a-z, A-Z), numbers (0-9), '-' and '_'.",title:"Human readable description of the repository.",readOnly:"Protects the repository against any changes.",ruleset:"Sets of axiomatic triples, consistency checks and entailment rules, which determine the applied semantics with a PIE file.",rulesetWarnings:{needsSameAs:"Disabling owl:sameAs for this ruleset may cause incomplete inference with owl:sameAs statements.",doesntNeedSameAs:"This ruleset does not need owl:sameAs, consider disabling it.",customRuleset:"If the custom ruleset does not use owl:sameAs, consider disabling it. <br>If the ruleset uses owl:sameAs, disabling it may cause incomplete inference with owl:sameAs statements."},disableSameAs:"GraphDB uses a non-rule implementation of owl:sameAs, which can be enabled or disabled independently of the ruleset.",checkForInconsistencies:"Enables the consistency checks from the ruleset.",isShacl:"Enables support for SHACL validation.",shaclOptions:{cacheSelectNodes:"The SHACL implementation retrieves a lot of its relevant data through running SPARQL Select queries against the repository and against the changes in the transaction. This is usually good for performance, but while validating large amounts of data disabling this cache will use less memory.",undefinedTargetValidatesAllSubjects:"If no target is defined for a NodeShape, that NodeShape will be ignored. Enabling this will make such NodeShapes wildcard shapes and validate all subjects. Equivalent to setting sh:targetClass to owl:Thing or rdfs:Resource in an environment with a reasoner.",logValidationPlans:"Log (INFO) the executed validation plans as GraphViz DOT. It is recommended to disable parallel validation when this is enabled.",logValidationViolations:"Log (INFO) a list of violations and the triples that caused the violations. It is recommended to disable parallel validation when this is enabled.",parallelValidation:"Run SHACL validation in parallel.",globalLogValidationExecution:"Log (INFO) every execution step of the SHACL validation. This is fairly costly and should not be used in production. It is recommended to disable parallel validation when this is enabled.",performanceLogging:"Log (INFO) the execution time per shape. It is recommended to disable parallel validation and caching of select nodes when this is enabled.",eclipseRdf4jShaclExtensions:"Activates RDF4J's SHACL extensions that provide additional functionality (experimental).",dashDataShapes:"Activates DASH Data Shapes extensions that provide additional functionality (experimental)."},entityIdSize:"Defines the bit size of internal IDs used to index entities (URIs, blank nodes, literals, and RDF* embedded triples).<br>Use 40 bit ID only if you expect more than 2 billion unique RDF values.",enableContextIndex:"Builds an additional Context-Predicate-Subject-Object index to boost the SPARQL query performance of queries with GRAPH/FROM/FROM NAMED clauses.",enablePredicateList:"Enables the mappings from an entity (subject or object) to its predicates; enabling it can significantly speed up queries that use wildcard predicate patterns.",queryTimeout:"Sets the number of seconds after which the evaluation of a query will be terminated; values less than or equal to zero mean no limit.",throwQueryEvaluationExceptionOnTimeout:"Repository throws QueryEvaluationException when the duration of a query execution exceeds the timeout parameter.",queryLimitResults:"Sets the maximum number of results returned from a query after which the evaluation of a query will be terminated; values less than or equal to zero mean no limit.",nonInterpretablePredicates:"Semicolon-delimited list of predicates (full URIs) that GraphDB will not try to process with the registered GraphDB plugins.",ontop:{driverType:"Determines the type of SQL database to connect to.",propertiesFile:"Describes the JDBC configuration such as hostname and database name to connect to.",hostName:"The JDBC hostname to connect to.",port:"The JDBC port to connect to if different from the default for the chosen JDBC driver.",portIfRequired:"The JDBC port to connect to.",databaseName:"The database name to connect to.",userName:"The username to use for the JDBC connection.",password:"The password to use for the JDBC connection.",driverClass:"Classname of the chosen JDBC driver. It must be on the classpath (in the lib directory).",driverClassWarning:"JDBC driver not found in the classpath, please save it in the lib directory and restart GraphDB",url:"The JDBC URL that will be used. It is constructed using the supplied hostname, port and database name.",obdaFile:"Describes the mapping from SQL to RDF in either the OBDA or the R2RML format.",owlFile:"Specifies relations between the classes and properties in the cosntructed RDF graph. It can be in any supported RDF format.",constraintFile:"Specifies override of SQL primary and foreign keys.",testConn:"Attempts to establish a connection to the SQL database to test if the supplied configuration is correct."},fedx:{repositoryNotExistWarning:"The repository member has been removed from the local repositories",localReposInstructions:"Click on a repo to add a local repository as a member",withLogQueries:"Set whether to log queries",withDebugQueryPlan:"Whether to print the optimized query execution plan to stdout",enforceMaxQueryTime:"Max query time in seconds, 0 to disable",withIncludeInferredDefault:"Set whether to include inferred statements or not",withBoundJoinBlockSize:"Set the block size for bound joins",withJoinWorkerThreads:"Set the number of join worker threads for parallelization",withLeftJoinWorkerThreads:"Set the number of left join worker threads",unionWorkerThreads:"Set the number of union worker threads for parallelization",withLogQueryPlan:"Whether to log the query plan",withEnableServiceAsBoundJoin:"Whether external SERVICE clauses are evaluated using bound join",withSourceSelectionCacheSpec:"The cache specification for the SourceSelectionMemoryCache",removeMember:"Remove repository as a FedX member",editRepository:"Edit repository",setAsWritable:"Set repository as writable"}}}}]);
//# sourceMappingURL=5.ff72fb5966daca374950.bundle.js.map