{"version":3,"sources":["webpack:///./src/js/lib/common/d3-utils.js","webpack:///./src/js/lib/d3-tip/d3-tip-patch.js","webpack:///./src/js/angular/graphexplore/controllers/graphs-visualizations.controller.js"],"names":["D3","Text","calcFontSizeRaw","text","radius","minimumSize","isMultiline","textSize","substring","length","match","Math","round","calcFontSize","getTextWithElipsisIfNeeded","str","threshold","Transition","fadeIn","sel","duration","style","transition","fadeOut","Click","delayDblClick","event","d3","dispatch","rebind","selection","down","wait","on","mouse","document","body","Date","d","a","b","sqrt","pow","window","clearTimeout","dblclick","setTimeout","click","direction","offset","html","node","initNode","svg","point","target","customPosition","tip","vis","el","tagName","toLowerCase","ownerSVGElement","createSVGPoint","appendChild","show","args","Array","prototype","slice","call","arguments","SVGElement","pop","coords","content","apply","this","poffset","dir","nodel","getNodeEl","i","directions","scrollTop","documentElement","scrollLeft","customPos","opacity","classed","direction_callbacks","get","top","left","hide","attr","n","v","functor","destroy","remove","map","bbox","getScreenBBox","y","offsetHeight","x","offsetWidth","s","e","w","nw","ne","sw","se","keys","select","createElement","position","targetel","getScreenCTM","parentNode","matrix","tbbox","getBBox","width","height","matrixTransform","GraphsVisualizationsCtrl","$scope","$rootScope","$repositories","toastr","$timeout","$http","ClassInstanceDetailsService","AutocompleteRestService","$q","$location","$jwtAuth","UiScrollService","ModalService","$modal","$window","LocalStorageAdapter","LSKeys","SavedGraphsRestService","GraphConfigRestService","RDF4JRepositoriesRestService","languageChanged","propertiesObj","propertiesQueryObj","items","propertiesNotFiltered","searchVisible","nodeSelected","queryResultsMode","embedded","search","openedNodeInfoPanel","undefined","onopen","onclose","angular","noop","query","uri","config","saved","noGoHome","datasource","current","type2color","colorIndex","nodeLabelMinFontSize","panAndZoom","behavior","zoom","scaleExtent","transformValues","tipElement","copyToClipboard","openCopyToClipboardModal","initSettings","principal","settingsFromPrincipal","appSettings","defaultSettings","includeInferred","sameAsState","includeSchema","localStorageSettings","GRAPHS_VIZ","saveSettings","unique","copy","set","key","index","count","success","initLazyList","$watch","_","each","item","revision","adapterContainer","adapter","remain","propertiesSearchPlaceholder","propertiesFilterFunc","indexOf","resetState","configLoaded","lastSavedGraphName","lastSavedGraphId","shared","numberOfPinnedNodes","pushHistory","searchParams","state","goToHome","url","shouldShowSettings","id","defaultGraphConfig","shouldDisableSameAs","sameAsCheckbox","$","settings","prop","isDefined","reload","toggleMoreInfo","ev","element","currentTarget","parent","next","toggle","children","toggleClass","linksLimit","languages","showLinksText","preferredTypes","rejectedTypes","preferredPredicates","rejectedPredicates","preferredTypesOnly","preferredPredicatesOnly","getPrincipal","renderSettings","languagesMap","preferredTypesMap","rejectedTypesMap","preferredPredicatesMap","rejectedPredicatesMap","$on","resetSettings","changeLimit","delta","showSettings","showInfoPanel","showFilter","showNodeInfo","showPredicates","reExpandNode","rootNodeIri","$broadcast","loadGraphForQuery","queryString","sameAsParam","inferredParam","sendSameAs","sendInferred","loading","method","headers","data","then","response","initGraphFromResponse","error","getError","Graph","nodes","links","addNode","push","computeConnectedness","counts","seenLinks","link","i1","source","iri","i2","seenKey","min","max","connectedness","addAndMatchLinks","newLinks","find","o","predicates","matchLinksToNodes","countLinks","findLinksForNode","filter","l","linksTypes","linksForNode","types","uniq","flatten","linksPredicates","removeNode","reject","removeNodeLeafLinks","targetLinks","copyState","size","labels","rdfRank","fixed","scale","translate","restoreState","draw","updateSettings","t","sameAs","inference","startMode","loadGraphConfig","selectAll","graph","name","getGraphConfigs","graphCallback","graphConfigs","loadConfigForId","configId","successCallback","getConfig","findConfigById","grep","easyGraphSearch","openUri","startIRI","startGraphQuery","loadGraphForConfig","startQueryIncludeInferred","startQuerySameAs","deleteConfig","openSimpleModal","title","message","warning","result","deleteGraphConfig","refreshSavedGraphs","goToGraphConfig","onpopstate","savedGraph","loadSavedGraph","initGraphFromQueryParam","inputValue","params","rootNode","expandNode","catch","err","getSavedGraph","msg","loadGraphFromQueryParam","initForRepository","newRepo","getActiveRepository","hasInitedRepository","getNamespacesPromise","getNamespaces","nss","results","bindings","namespace","value","prefix","namespaces","sortBy","checkAutocompleteStatus","getAutocompletePromise","replaceIRIWithPrefix","namespacePrefix","findLast","addedTag","tag","test","uriParts","split","uriPart","localName","isUndefined","expandedUri","getNamespaceUriForPrefix","expandPrefix","pageslideExpanded","validateTag","category","wildcardOK","wildcardPos","getTagClass","tagText","endsWith","empty","multiClickDelay","nodeLabelRectScaleX","color1","linear","domain","range","interpolate","interpolateHslLong","color2","getColor","type","force","layout","gravity","append","showNodeTipAndIconsTimer","removeIconsTimer","loader","setLoadingState","getLoadingState","init","resetRootNode","container","stopPropagation","removeMenuIfVisible","stop","getBoundingClientRect","bottom","join","createTipText","p","getShortPredicate","numOfPredLeft","numberOfPredLeft","tipPredicateElement","tipPredicates","textWidth","ctx","getContext","font","measureText","calculateWidth","hideTipForNode","cancel","tipTimer","charge","linkDistance","span","splitedLink","predicateText","addClass","textLength","getPredicateTextLength","enter","absUrl","predicate","getPredicate","tipPredicateTimer","thisPredicateTipElement","showPredicateToolTip","openPredicates","mouseEventTimer","upEventLast","virtualClickEventTimer","moveEventCount","downEventHandler","button","timeStamp","preventDefault","upEventHandler","shiftKey","ctrlKey","metaKey","hideNode","nodeLabels","nodeTypes","nodeIri","encodedIri","encodeURI","rdfsLabel","label","rdfsComment","comment","expanded","dataNodeKeysQuery","mapKeys","forEach","nodeImage","imageVal","clickedNode","info","closeInfoPanel","showPinAnimation","startSize","endSize","startOpacity","endOpacity","animate","pin","innerD","drag","origin","sourceEvent","fixedBeforeDrag","isBeingDragged","beginDragging","px","py","pinWasFixed","resume","menuEvents","closeIcon","expandIcon","focusIcon","copyURIIcon","removeIcons","alpha","initIcons","expandNodeIcons","thisTipElement","showTipForNode","updateTipForNode","insert","fontSize","textContent","endlessLoopGuard","scrollHeight","clientHeight","scrollWidth","clientWidth","updateNodeLabels","geom","quadtree","linkedNodes","sourceNode","targetNode","p1","p2","atan2","PI","angleDeg","abs","findAngleBetweenNodes","twoWayLinkID","textNode","createTextNode","getElementById","lastChild","start","getPositionAndAngle","angle","cos","sin","collapseIcon","actionsTip","expandedState","right","isExpanded","getAttribute","animateMenu","delay","ease","initGraph","renderGraphFromResponse","isStartNode","linksFound","newLink","findIndex","existingLink","nodesFromLinks","union","existingNodes","newNodes","includes","promises","newNodesData","newNode","all","newNodeData","theta","expandIri","shortIRI","toggleSidePanel","splitPredicate","isLoadingLocation","hasActiveLocation","rotate","isLeft","pivotX","pivotY","noHistory","saveOrUpdateGraph","JSON","stringify","graphToSave","saveGraphModal","renameSavedGraph","graphToRename","editSavedGraphHttp","editSavedGraph","mode","graphExists","open","templateUrl","controller","resolve","restart","addNewSavedGraph","status","saveGraphHttp","getSavedGraphs","savedGraphs","graphToLoad","owner","parse","copyToClipboardSavedGraph","location","protocol","host","pathname","deleteSavedGraph","deleteSavedGraphHttp","openIRI","togglePinAllNodes","nodeName","keyCode","getLiteralFromPropValue","SaveGraphModalCtrl","$modalInstance","okButtonText","ok","form","$valid","close","saveNew","dismiss","module","$tooltipProvider","options","appendToBody","$inject"],"mappings":"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","file":"28.bbe49746541a2419b9a7.bundle.js","sourcesContent":["var D3 = D3 || {};\n\nD3.Text = function () {\n    function calcFontSizeRaw(text, radius, minimumSize, isMultiline) {\n        minimumSize = minimumSize || 10;\n\n        var textSize = radius / 3;\n        if (typeof text === \"string\") {\n            var len = text.substring(0, radius / 3).length + 1.5;\n            textSize *= 10 / len;\n            textSize += 1;\n            // experimental alternative method:\n            // var textSize = 3.3 * radius / text.length;\n\n            // Tweak for Indian scripts and CJK ones\n            if (text.match(/[\\u0900-\\u0DFF\\u1100-\\u11FF\\u2E80-\\u2EFF\\u3000-\\u9FFF]/)) {\n                textSize *= 0.6;\n            }\n\n            if (textSize < minimumSize) {\n                textSize = minimumSize;\n            }\n\n            /* Disabled for the time being, better without this\n            if (isMultiline) {\n                var numWords = text.split(/\\s+/).length;\n                if (numWords > 1) {\n                    if (numWords > 4) {\n                        numWords = 4;\n                    }\n                    textSize += textSize * (4 - numWords) * 0.1;\n                }\n            }\n            */\n\n            return Math.round(textSize);\n        }\n\n        if (textSize < minimumSize) {\n            textSize = minimumSize;\n        }\n\n        return Math.round(textSize);\n    }\n\n    function calcFontSize(text, radius, minimumSize, isMultiline) {\n        return calcFontSizeRaw(text, radius, minimumSize, isMultiline) + 'px';\n    }\n\n    function getTextWithElipsisIfNeeded(str, threshold) {\n        if (typeof str === \"string\") {\n            if (str.length > threshold) {\n                return str.substring(0, threshold - 3) + \"...\";\n            }\n        }\n        return str;\n    }\n\n    return {\n        calcFontSizeRaw: calcFontSizeRaw,\n        calcFontSize: calcFontSize,\n        getTextWithElipsisIfNeeded: getTextWithElipsisIfNeeded\n    };\n}();\n\nD3.Transition = function () {\n    function fadeIn(sel, duration) {\n        sel.style(\"opacity\", 0.0)\n            .transition()\n            .duration(duration)\n            .style(\"opacity\", 1.0);\n    }\n\n    function fadeOut(sel, duration) {\n        sel.style(\"opacity\", 1.0)\n            .transition()\n            .duration(duration)\n            .style(\"opacity\", 0.0);\n    }\n\n    return {\n        fadeIn: fadeIn,\n        fadeOut: fadeOut\n    };\n}();\n\nD3.Click = function () {\n    function delayDblClick() {\n        var event = d3.dispatch('click', 'dblclick');\n\n        function cc(selection) {\n            var down,\n                tolerance = 5,\n                last,\n                wait = null;\n\n            // euclidean distance\n            function dist(a, b) {\n                return Math.sqrt(Math.pow(a[0] - b[0], 2), Math.pow(a[1] - b[1], 2));\n            }\n\n            selection.on('mousedown', function () {\n                down = d3.mouse(document.body);\n                last = +new Date();\n            });\n            selection.on('mouseup', function (d) {\n                if (dist(down, d3.mouse(document.body)) > tolerance) {\n                    return;\n                } else {\n                    if (wait) {\n                        window.clearTimeout(wait);\n                        wait = null;\n                        event.dblclick(d);\n                    } else {\n                        wait = window.setTimeout((function (e) {\n                            return function () {\n                                event.click(d);\n                                wait = null;\n                            };\n                        })(d3.event), 250);\n                    }\n                }\n            });\n        }\n\n        return d3.rebind(cc, event, 'on');\n    }\n\n    return {\n        delayDblClick: delayDblClick\n    };\n}();\n\nexport default D3;\n","// d3.tip\n// Copyright (c) 2013 Justin Palmer\n//\n// Tooltips for d3.js SVG visualizations\n\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module with d3 as a dependency.\n        define([], factory)\n    } else if (typeof module === 'object' && module.exports) {\n        // CommonJS\n        module.exports = function(d3) {\n            d3.tip = factory(d3)\n            return d3.tip\n        }\n    } else {\n        // Browser global.\n        root.d3.tip = factory(root.d3)\n    }\n}(this, function () {\n    // Public - contructs a new tooltip\n    //\n    // Returns a tip\n    return function() {\n        var direction = d3_tip_direction,\n            offset    = d3_tip_offset,\n            html      = d3_tip_html,\n            node      = initNode(),\n            svg       = null,\n            point     = null,\n            target    = null,\n            customPosition = null\n\n        function tip(vis) {\n            svg = getSVGNode(vis)\n            point = svg.createSVGPoint()\n            document.body.appendChild(node)\n        }\n\n        // Public - show the tooltip on the screen\n        //\n        // Returns a tip\n        tip.show = function() {\n            var args = Array.prototype.slice.call(arguments)\n            if(args[args.length - 1] instanceof SVGElement) target = args.pop()\n\n            var content = html.apply(this, args),\n                poffset = offset.apply(this, args),\n                dir     = direction.apply(this, args),\n                nodel   = getNodeEl(),\n                i       = directions.length,\n                coords,\n                scrollTop  = document.documentElement.scrollTop || document.body.scrollTop,\n                scrollLeft = document.documentElement.scrollLeft || document.body.scrollLeft,\n                customPos = customPosition.apply(this, args)\n\n            nodel.html(content)\n                .style({ opacity: 1, 'pointer-events': 'all' })\n\n            while(i--) nodel.classed(directions[i], false)\n            coords = direction_callbacks.get(dir).apply(this)\n\n            if (customPos) {\n                nodel.style(customPos)\n            } else {\n                nodel.classed(dir, true).style({\n                    top: (coords.top +  poffset[0]) + scrollTop + 'px',\n                    left: (coords.left + poffset[1]) + scrollLeft + 'px'\n                })\n            }\n\n            return tip\n        }\n\n        // Public - hide the tooltip\n        //\n        // Returns a tip\n        tip.hide = function() {\n            var nodel = getNodeEl()\n            nodel.style({ opacity: 0, 'pointer-events': 'none' })\n            return tip\n        }\n\n        // Public: Proxy attr calls to the d3 tip container.  Sets or gets attribute value.\n        //\n        // n - name of the attribute\n        // v - value of the attribute\n        //\n        // Returns tip or attribute value\n        tip.attr = function(n, v) {\n            if (arguments.length < 2 && typeof n === 'string') {\n                return getNodeEl().attr(n)\n            } else {\n                var args =  Array.prototype.slice.call(arguments)\n                d3.selection.prototype.attr.apply(getNodeEl(), args)\n            }\n\n            return tip\n        }\n\n        // Public: Proxy style calls to the d3 tip container.  Sets or gets a style value.\n        //\n        // n - name of the property\n        // v - value of the property\n        //\n        // Returns tip or style property value\n        tip.style = function(n, v) {\n            if (arguments.length < 2 && typeof n === 'string') {\n                return getNodeEl().style(n)\n            } else {\n                var args =  Array.prototype.slice.call(arguments)\n                d3.selection.prototype.style.apply(getNodeEl(), args)\n            }\n\n            return tip\n        }\n\n        // Public: Set or get the direction of the tooltip\n        //\n        // v - One of n(north), s(south), e(east), or w(west), nw(northwest),\n        //     sw(southwest), ne(northeast) or se(southeast)\n        //\n        // Returns tip or direction\n        tip.direction = function(v) {\n            if (!arguments.length) return direction\n            direction = v == null ? v : d3.functor(v)\n\n            return tip\n        }\n\n        // Public: Sets or gets the offset of the tip\n        //\n        // v - Array of [x, y] offset\n        //\n        // Returns offset or\n        tip.offset = function(v) {\n            if (!arguments.length) return offset\n            offset = v == null ? v : d3.functor(v)\n\n            return tip\n        }\n\n        // Public: sets or gets the html value of the tooltip\n        //\n        // v - String value of the tip\n        //\n        // Returns html value or tip\n        tip.html = function(v) {\n            if (!arguments.length) return html\n            html = v == null ? v : d3.functor(v)\n\n            return tip\n        }\n\n        tip.customPosition = function(v) {\n            if (!arguments.length) return customPosition\n            customPosition = v == null ? v : d3.functor(v)\n\n            return tip\n        }\n\n        // Public: destroys the tooltip and removes it from the DOM\n        //\n        // Returns a tip\n        tip.destroy = function() {\n            if(node) {\n                getNodeEl().remove();\n                node = null;\n            }\n            return tip;\n        }\n\n        function d3_tip_direction() { return 'n' }\n        function d3_tip_offset() { return [0, 0] }\n        function d3_tip_html() { return ' ' }\n\n        var direction_callbacks = d3.map({\n                n:  direction_n,\n                s:  direction_s,\n                e:  direction_e,\n                w:  direction_w,\n                nw: direction_nw,\n                ne: direction_ne,\n                sw: direction_sw,\n                se: direction_se\n            }),\n\n            directions = direction_callbacks.keys()\n\n        function direction_n() {\n            var bbox = getScreenBBox()\n            return {\n                top:  bbox.n.y - node.offsetHeight,\n                left: bbox.n.x - node.offsetWidth / 2\n            }\n        }\n\n        function direction_s() {\n            var bbox = getScreenBBox()\n            return {\n                top:  bbox.s.y,\n                left: bbox.s.x - node.offsetWidth / 2\n            }\n        }\n\n        function direction_e() {\n            var bbox = getScreenBBox()\n            return {\n                top:  bbox.e.y - node.offsetHeight / 2,\n                left: bbox.e.x\n            }\n        }\n\n        function direction_w() {\n            var bbox = getScreenBBox()\n            return {\n                top:  bbox.w.y - node.offsetHeight / 2,\n                left: bbox.w.x - node.offsetWidth\n            }\n        }\n\n        function direction_nw() {\n            var bbox = getScreenBBox()\n            return {\n                top:  bbox.nw.y - node.offsetHeight,\n                left: bbox.nw.x - node.offsetWidth\n            }\n        }\n\n        function direction_ne() {\n            var bbox = getScreenBBox()\n            return {\n                top:  bbox.ne.y - node.offsetHeight,\n                left: bbox.ne.x\n            }\n        }\n\n        function direction_sw() {\n            var bbox = getScreenBBox()\n            return {\n                top:  bbox.sw.y,\n                left: bbox.sw.x - node.offsetWidth\n            }\n        }\n\n        function direction_se() {\n            var bbox = getScreenBBox()\n            return {\n                top:  bbox.se.y,\n                left: bbox.e.x\n            }\n        }\n\n        function initNode() {\n            var node = d3.select(document.createElement('div'))\n            node.style({\n                position: 'absolute',\n                top: 0,\n                opacity: 0,\n                'pointer-events': 'none',\n                'box-sizing': 'border-box'\n            })\n\n            return node.node()\n        }\n\n        function getSVGNode(el) {\n            el = el.node()\n            if(el.tagName.toLowerCase() === 'svg')\n                return el\n\n            return el.ownerSVGElement\n        }\n\n        function getNodeEl() {\n            if(node === null) {\n                node = initNode();\n                // re-add node to DOM\n                document.body.appendChild(node);\n            };\n            return d3.select(node);\n        }\n\n        // Private - gets the screen coordinates of a shape\n        //\n        // Given a shape on the screen, will return an SVGPoint for the directions\n        // n(north), s(south), e(east), w(west), ne(northeast), se(southeast), nw(northwest),\n        // sw(southwest).\n        //\n        //    +-+-+\n        //    |   |\n        //    +   +\n        //    |   |\n        //    +-+-+\n        //\n        // Returns an Object {n, s, e, w, nw, sw, ne, se}\n        function getScreenBBox() {\n            var targetel   = target || d3.event.target;\n\n            while ('undefined' === typeof targetel.getScreenCTM && 'undefined' === targetel.parentNode) {\n                targetel = targetel.parentNode;\n            }\n\n            var bbox       = {},\n                matrix     = targetel.getScreenCTM(),\n                tbbox      = targetel.getBBox(),\n                width      = tbbox.width,\n                height     = tbbox.height,\n                x          = tbbox.x,\n                y          = tbbox.y\n\n            point.x = x\n            point.y = y\n            bbox.nw = point.matrixTransform(matrix)\n            point.x += width\n            bbox.ne = point.matrixTransform(matrix)\n            point.y += height\n            bbox.se = point.matrixTransform(matrix)\n            point.x -= width\n            bbox.sw = point.matrixTransform(matrix)\n            point.y -= height / 2\n            bbox.w  = point.matrixTransform(matrix)\n            point.x += width\n            bbox.e = point.matrixTransform(matrix)\n            point.x -= width / 2\n            point.y -= height / 2\n            bbox.n = point.matrixTransform(matrix)\n            point.y += height\n            bbox.s = point.matrixTransform(matrix)\n\n            return bbox\n        }\n\n        return tip\n    };\n\n}));","import 'angular/core/services';\nimport D3 from 'lib/common/d3-utils.js';\nimport d3tip from 'lib/d3-tip/d3-tip-patch';\nimport 'angular/utils/local-storage-adapter';\n\nconst modules = [\n    'ui.scroll.jqlite',\n    'ui.scroll',\n    'toastr',\n    'ui.bootstrap',\n    'ngTagsInput',\n    'graphdb.framework.utils.localstorageadapter'\n];\n\nangular\n    .module('graphdb.framework.graphexplore.controllers.graphviz', modules)\n    .controller('GraphsVisualizationsCtrl', GraphsVisualizationsCtrl)\n    .controller('SaveGraphModalCtrl', SaveGraphModalCtrl)\n    .config(['$tooltipProvider', function ($tooltipProvider) {\n        $tooltipProvider.options({appendToBody: true});\n    }]);\n\nGraphsVisualizationsCtrl.$inject = [\"$scope\", \"$rootScope\", \"$repositories\", \"toastr\", \"$timeout\", \"$http\", \"ClassInstanceDetailsService\", \"AutocompleteRestService\", \"$q\", \"$location\", \"$jwtAuth\", \"UiScrollService\", \"ModalService\", \"$modal\", \"$window\", \"LocalStorageAdapter\", \"LSKeys\", \"SavedGraphsRestService\", \"GraphConfigRestService\", \"RDF4JRepositoriesRestService\"];\n\nfunction GraphsVisualizationsCtrl($scope, $rootScope, $repositories, toastr, $timeout, $http, ClassInstanceDetailsService, AutocompleteRestService, $q, $location, $jwtAuth, UiScrollService, ModalService, $modal, $window, LocalStorageAdapter, LSKeys, SavedGraphsRestService, GraphConfigRestService, RDF4JRepositoriesRestService) {\n\n    $scope.languageChanged = false;\n    $scope.propertiesObj = {};\n    $scope.propertiesQueryObj = {};\n\n    $scope.propertiesObj.items = [];\n    $scope.propertiesNotFiltered = [];\n    $scope.searchVisible = false;\n    $scope.nodeSelected = false;\n    $scope.queryResultsMode = false;\n    $scope.embedded = $location.search().embedded;\n    $scope.openedNodeInfoPanel = undefined;\n\n    // Handle pageslide directive callbacks which incidentally appeared to be present in the angular's\n    // scope, so we need to define our's and pass them to pageslide, otherwise it throws an error.\n    $scope.onopen = $scope.onclose = () => angular.noop();\n\n    // embedded and other params when the controller is initialized\n    if ($scope.embedded && ($location.search().query ||\n            $location.search().uri ||\n            $location.search().config ||\n            $location.search().saved)) {\n\n        $scope.noGoHome = true;\n    }\n\n    // creating datasource for class properties data\n    const datasource = {};\n    let position = 0;\n    let current = 0;\n    let type2color = {};\n    let colorIndex = 0;\n    const nodeLabelMinFontSize = 16; // pixels\n    // define zoom and drag behavior; keep this out of draw() to preserve state when nodes are added/removed\n    const panAndZoom = d3.behavior.zoom()\n        .scaleExtent([0.5, 10]);\n    let transformValues;\n    // build svg element\n    const width = 1000;\n    const height = 1000;\n    let tipElement;\n\n    $rootScope.key = \"\";\n\n    datasource.get = function (index, count, success) {\n        return UiScrollService.initLazyList(index, count, success, position, $scope.propertiesObj.items);\n    };\n\n    $rootScope.$watch(function () {\n        return $rootScope.key;\n    }, function () {\n        position = 0;\n        _.each($scope.propertiesObj.items, function (item) {\n            if ($rootScope.key > item) {\n                position++;\n            }\n        });\n        current++;\n    });\n\n    datasource.revision = function () {\n        return current;\n    };\n\n    $scope.datasource = datasource;\n\n    // adapter implementation for ui-scroll directive\n    $scope.adapterContainer = {adapter: {remain: true}};\n\n    $scope.propertiesQueryObj.query = '';\n    $scope.propertiesSearchPlaceholder = \"Search instance properties\";\n    $scope.propertiesFilterFunc = propertiesFilterFunc;\n\n    $scope.resetState = function () {\n        $scope.searchVisible = false;\n        $scope.nodeSelected = false;\n        $scope.configLoaded = null;\n        $scope.queryResultsMode = false;\n        $scope.lastSavedGraphName = null;\n        $scope.lastSavedGraphId = null;\n        $scope.shared = false;\n        $scope.numberOfPinnedNodes = 0;\n\n        // Reset type colours\n        type2color = {};\n        colorIndex = 0;\n    };\n\n    $scope.pushHistory = function (searchParams, state) {\n        if ($scope.embedded) {\n            searchParams.embedded = true;\n        }\n        $location.search(searchParams);\n        $location.state(state);\n    };\n\n    $scope.goToHome = function () {\n        $scope.resetState();\n        $location.url(\"graphs-visualizations\");\n    };\n\n    $scope.shouldShowSettings = function () {\n        return $scope.configLoaded && $scope.configLoaded.id === $scope.defaultGraphConfig.id;\n    };\n\n    $scope.shouldDisableSameAs = function () {\n        const sameAsCheckbox = $('#sameAsCheck');\n        if ($scope.settings && !$scope.settings['includeInferred'] && sameAsCheckbox.prop('checked')) {\n            sameAsCheckbox.prop(\"checked\", false);\n            $scope.settings['sameAsState'] = false;\n        }\n\n        return $scope.settings && !$scope.settings['includeInferred'];\n    };\n\n    function propertiesFilterFunc(item) {\n        return item.key\n            .toLowerCase()\n            .indexOf($scope.propertiesQueryObj.query.toLowerCase()) >= 0;\n    }\n\n    $scope.$watch('propertiesObj.items', function () {\n        if (angular.isDefined($scope.propertiesObj.items) && $scope.propertiesObj.items.length > 0) {\n            $timeout(function () {\n                $scope.adapterContainer.adapter.reload();\n            }, 500);\n        }\n    });\n\n    $scope.toggleMoreInfo = function (ev) {\n        angular.element(ev.currentTarget).parent().next().toggle(200);\n        angular.element(ev.currentTarget).children('span').toggleClass(\"icon-caret-down\").toggleClass(\"icon-caret-up\");\n    };\n\n    function updatePredicateLabels() {\n        if (!$scope.saveSettings['showLinksText']) {\n            d3.selectAll(\"svg .link-wrapper text\")\n                .style(\"display\", \"none\");\n        } else {\n            d3.selectAll(\"svg .link-wrapper text\")\n                .style(\"display\", \"block\");\n        }\n    }\n\n    function updateNodeLabels(nodeLabels) {\n        nodeLabels.each(function (d) {\n            d.fontSize = D3.Text.calcFontSizeRaw(d.labels[0].label, d.size, nodeLabelMinFontSize, true);\n            // TODO: get language and set it on the label html tag\n        })\n            .attr(\"height\", function (d) {\n                return d.fontSize * 3;\n            })\n            // if this was kosher we would use xhtml:body here but if we do that angular (or the browser)\n            // goes crazy and resizes/messes up other unrelated elements. div seems to work too.\n            .append(\"xhtml:div\")\n            .attr(\"class\", \"node-label-body\")\n            .style(\"font-size\", function (d) {\n                return d.fontSize + 'px';\n            })\n            .append('xhtml:div')\n            .text(function (d) {\n                return d.labels[0].label;\n            });\n\n        // Our own implementation of what browsers should really do but they either can't or don't do properly.\n        // This code will look at each node's label element and check if the text fits. This is achieved by\n        // checking the DOM properties scrollHeight/-Width and clientHeight/-Width. Generally if the scroll ones\n        // are bigger than the client ones the content doesn't fit.\n        $timeout(function () {\n            $('.node-label-body div').each(function (i, e) {\n                // Initial text is minus one character as we'll be adding a one-character suffix if we need to truncate\n                let text = e.textContent.substring(0, e.textContent.length - 1);\n                const suffixToInsert = '…';\n                let endlessLoopGuard = 0;\n\n                // Loop until the text fits\n                while (endlessLoopGuard < 200 && (e.scrollHeight > e.clientHeight || e.scrollWidth > e.clientWidth)) {\n                    // Take previous text minus one character\n                    text = text.substring(0, text.length - 1);\n\n                    // Set the new text + suffix as textContent\n                    e.textContent = text + suffixToInsert;\n\n                    endlessLoopGuard++;\n                }\n            });\n        }, 50);\n    }\n\n    $scope.copyToClipboard = copyToClipboard;\n\n    function copyToClipboard(uri) {\n        ModalService.openCopyToClipboardModal(uri);\n    }\n\n    $scope.defaultSettings = {\n        linksLimit: 20,\n        includeInferred: true,\n        sameAsState: true,\n        languages: ['en'],\n        showLinksText: true,\n        preferredTypes: [],\n        rejectedTypes: [],\n        preferredPredicates: [],\n        rejectedPredicates: [\"http://dbpedia.org/property/logo\",\n                             \"http://dbpedia.org/property/hasPhotoCollection\",\n                             \"http://dbpedia.org/property/website\",\n                             \"http://dbpedia.org/property/homepage\",\n                             \"http://dbpedia.org/ontology/thumbnail\",\n                             \"http://xmlns.com/foaf/0.1/depiction\",\n                             \"http://xmlns.com/foaf/0.1/homepage\",\n                             \"http://xmlns.com/foaf/0.1/mbox\",\n                             \"http://dbpedia.org/ontology/wikiPage*\",\n                             \"http://dbpedia.org/property/wikiPage*\",\n                             \"http://factforge.net/*\"],\n        preferredTypesOnly: false,\n        preferredPredicatesOnly: false,\n        includeSchema: true\n    };\n    // Static defaults before we do the actual dynamic default settings in initSettings\n    $scope.saveSettings = angular.copy($scope.defaultSettings);\n\n    function initSettings(principal) {\n        const settingsFromPrincipal = principal.appSettings;\n\n        // New style settings from principal\n        $scope.defaultSettings.includeInferred = settingsFromPrincipal['DEFAULT_INFERENCE'];\n        $scope.defaultSettings.sameAsState = settingsFromPrincipal['DEFAULT_INFERENCE'] && settingsFromPrincipal['DEFAULT_SAMEAS'],\n            $scope.defaultSettings.includeSchema = settingsFromPrincipal['DEFAULT_VIS_GRAPH_SCHEMA'];\n\n        const localStorageSettings = LocalStorageAdapter.get(LSKeys.GRAPHS_VIZ);\n        if (localStorageSettings && typeof localStorageSettings === 'object') {\n            // Patch existing settings\n            try {\n                $scope.saveSettings = localStorageSettings;\n                if ($scope.saveSettings['includeSchema'] === undefined) {\n                    // Add the new defaults when migrating from an old GDB\n                    $scope.saveSettings['includeSchema'] = $scope.defaultSettings['includeSchema'];\n                    $scope.saveSettings['rejectedPredicates'] = [...$scope.saveSettings['rejectedPredicates'], ...$scope.defaultSettings['rejectedPredicates']].unique();\n                }\n            } catch (e) {\n                $scope.saveSettings = angular.copy($scope.defaultSettings);\n                LocalStorageAdapter.set(LSKeys.GRAPHS_VIZ, $scope.saveSettings);\n            }\n        } else {\n            $scope.saveSettings = angular.copy($scope.defaultSettings);\n        }\n    }\n\n    // Resolves race condition with security init if this is the first loaded page\n    const principal = $jwtAuth.getPrincipal();\n    if (principal) {\n        // We already got a principal, safe to call initSettings\n        initSettings(principal);\n    } else {\n        // No principal yet, delegate to the securityInit event to do call initSettings for us\n        $scope.$on('securityInit', function () {\n            initSettings($jwtAuth.getPrincipal());\n        });\n    }\n\n    function renderSettings() {\n        $scope.settings.languagesMap = _.map($scope.settings.languages, function (v) {\n            return {'text': v};\n        });\n\n        $scope.settings.preferredTypesMap = _.map($scope.settings.preferredTypes, function (v) {\n            return {'text': v};\n        });\n\n        $scope.settings.rejectedTypesMap = _.map($scope.settings.rejectedTypes, function (v) {\n            return {'text': v};\n        });\n\n        $scope.settings.preferredPredicatesMap = _.map($scope.settings.preferredPredicates, function (v) {\n            return {'text': v};\n        });\n\n        $scope.settings.rejectedPredicatesMap = _.map($scope.settings.rejectedPredicates, function (v) {\n            return {'text': v};\n        });\n    }\n\n    $scope.resetSettings = function () {\n        $scope.settings = angular.copy($scope.defaultSettings);\n        renderSettings();\n    };\n\n    $scope.changeLimit = function (delta) {\n        let linksLimit = $scope.settings.linksLimit + delta;\n        if (linksLimit < 1) {\n            linksLimit = 1;\n        }\n        if (linksLimit > 1000) {\n            linksLimit = 1000;\n        }\n        $scope.settings.linksLimit = linksLimit;\n    };\n\n    $scope.showSettings = function () {\n        $scope.showInfoPanel = true;\n        $scope.showFilter = true;\n        $scope.showNodeInfo = false;\n        $scope.showPredicates = false;\n        if (!$scope.saveSettings) {\n            $scope.settings = angular.copy($scope.defaultSettings);\n        } else {\n            $scope.settings = angular.copy($scope.saveSettings);\n        }\n        renderSettings();\n    };\n\n    $scope.reExpandNode = function () {\n        if ($scope.rootNodeIri) {\n            $scope.$broadcast(\"onRootNodeChange\", $scope.rootNodeIri);\n        }\n    };\n\n    const loadGraphForQuery = function (queryString, sameAsParam, inferredParam) {\n        const sendSameAs = (sameAsParam === undefined) ? ($scope.saveSettings['sameAsState']) : sameAsParam === true;\n        const sendInferred = (inferredParam === undefined) ? ($scope.saveSettings['includeInferred']) : inferredParam === true;\n        $scope.loading = true;\n        $http({\n            url: 'rest/explore-graph/graph',\n            method: 'POST',\n            headers: {\n                'Content-Type' : 'application/json'\n            },\n            data: {\n                query: queryString,\n                linksLimit: $scope.saveSettings['linksLimit'],\n                languages: !$scope.shouldShowSettings() ? [] : $scope.saveSettings['languages'],\n                includeInferred: sendInferred,\n                sameAsState: sendSameAs\n            }\n        }).then(function (response) {\n            // Node draw will turn off loader\n            initGraphFromResponse(response);\n        }, function (response) {\n            $scope.loading = false;\n            toastr.error(getError(response.data), 'Cannot load visual graph!');\n        });\n    };\n\n    $scope.updateSettings = function () {\n        $scope.saveSettings = $scope.settings;\n        $scope.saveSettings.languages = _.map($scope.saveSettings['languagesMap'], function (s) {\n            return s['text'];\n        });\n\n        $scope.saveSettings.preferredTypes = _.map($scope.saveSettings['preferredTypesMap'], function (t) {\n            return t['text'];\n        });\n        $scope.saveSettings.rejectedTypes = _.map($scope.saveSettings['rejectedTypesMap'], function (t) {\n            return t['text'];\n        });\n\n        $scope.saveSettings.preferredPredicates = _.map($scope.saveSettings['preferredPredicatesMap'], function (t) {\n            return t['text'];\n        });\n        $scope.saveSettings.rejectedPredicates = _.map($scope.saveSettings['rejectedPredicatesMap'], function (t) {\n            return t['text'];\n        });\n\n        // TODO\n        // reexpand root node\n        if ($scope.rootNodeIri) {\n            $scope.reExpandNode($scope.rootNodeIri);\n        } else if ($scope.queryResultsMode && $location.search().query) {\n            loadGraphForQuery($location.search().query,\n                $location.search().sameAs,\n                $location.search().inference);\n        } else if ($scope.configLoaded.startMode === 'query') {\n            $scope.loadGraphConfig($scope.configLoaded);\n        }\n\n        updatePredicateLabels();\n\n        $scope.showInfoPanel = false;\n        $scope.showFilter = false;\n\n        LocalStorageAdapter.set(LSKeys.GRAPHS_VIZ, $scope.saveSettings);\n    };\n\n    $scope.showInfoPanel = false;\n\n    function Graph() {\n        this.nodes = [];\n        this.links = [];\n\n        this.addNode = function (node, x, y) {\n            node.x = x;\n            node.y = y;\n            this.nodes.push(node);\n            return node;\n        };\n\n        // computes a \"connectedness\" metric on each link, which is then used to hint for longer links.\n        // this results in improved clustering and appearance.\n        this.computeConnectedness = function () {\n            // count the the number of times a given node is connected to other nodes\n            // (only for nodes connected to more than one node)\n            const counts = {};\n            const seenLinks = {};\n            _.each(this.links, function (link) {\n                const i1 = link.source.iri;\n                const i2 = link.target.iri;\n                const seenKey = _.min([i1, i2]) + \"|\" + _.max([i1, i2]);\n                if (!seenLinks[seenKey]) {\n                    seenLinks[seenKey] = 1;\n                    counts[i1] = (counts[i1] || 0) + 1;\n                    counts[i2] = (counts[i2] || 0) + 1;\n                }\n            });\n\n            // computes the connectedness of each link based on the number of times its nodes were connected\n            // (only for links to/from nodes connected to more than one node)\n            _.each(this.links, function (link) {\n                if (counts[link.source.iri] > 1 && counts[link.target.iri] > 1) {\n                    link.connectedness = Math.min(5, Math.max(counts[link.source.iri], counts[link.target.iri]) - 1);\n                } else {\n                    link.connectedness = 0;\n                }\n            });\n        };\n\n        this.addAndMatchLinks = function (newLinks) {\n            const nodes = this.nodes;\n            Array.prototype.push.apply(this.links, matchLinksToNodes(newLinks, nodes));\n\n            this.computeConnectedness();\n        };\n\n        const countLinks = function (d, links) {\n            return findLinksForNode(d, links).length;\n        };\n\n        this.countLinks = countLinks;\n\n        function findLinksForNode(d, links) {\n            return _.filter(links, function (l) {\n                return l.source.iri === d.iri || l.target.iri === d.iri;\n            });\n        }\n\n        function linksTypes(d, links) {\n            const linksForNode = findLinksForNode(d, links);\n            const types = _.map(linksForNode, function (l) {\n                return (l.source.iri === d.iri ) ? l.target.types : l.source.types;\n            });\n            return _.uniq(_.flatten(types));\n        }\n\n        function linksPredicates(d, links) {\n            const linksForNode = findLinksForNode(d, links);\n            const predicates = _.map(linksForNode, function (l) {\n                return l.predicates;\n            });\n            return _.uniq(_.flatten(predicates));\n        }\n\n        this.linksTypes = linksTypes;\n\n        this.linksPredicates = linksPredicates;\n\n        this.removeNode = function (d) {\n            this.links = _.reject(this.links, function (l) {\n                return l.source.iri === d.iri || l.target.iri === d.iri;\n            });\n            const links = this.links;\n            this.nodes = _.reject(this.nodes, function (n) {\n                return countLinks(n, links) === 0;\n            });\n            if (this.nodes.length === 0) {\n                $scope.nodeSelected = false;\n            }\n\n            this.computeConnectedness();\n        };\n\n        this.removeNodeLeafLinks = function (d) {\n            let links = this.links;\n            this.links = _.reject(this.links, function (l) {\n                if ((l.source.iri === d.iri && countLinks(l.target, links) === 1) ||\n                    (l.target.iri === d.iri && countLinks(l.source, links) === 1)) {\n                    return true;\n                }\n                let targetLinks;\n                if (l.source.iri === d.iri && countLinks(l.target, links) === 2) {\n                    targetLinks = findLinksForNode(l.target, links);\n                } else if (l.target.iri === d.iri && countLinks(l.source, links) === 2) {\n                    targetLinks = findLinksForNode(l.source, links);\n                }\n                if (!targetLinks) {\n                    return;\n                }\n\n                // the node to which (or from which) d has link to has only two links, check if the second one is to d also\n                return (targetLinks[0].source.iri === d.iri || targetLinks[0].target.iri) &&\n                    (targetLinks[1].source.iri === d.iri || targetLinks[1].target.iri);\n            });\n\n            links = this.links;\n            this.nodes = _.reject(this.nodes, function (n) {\n                return countLinks(n, links) === 0 && n.iri !== d.iri;\n            });\n\n            this.computeConnectedness();\n        };\n\n        function matchLinksToNodes(newLinks, nodes) {\n            return _.map(newLinks, function (link) {\n                return {\n                    \"source\": _.find(nodes, function (o) {\n                        return o.iri === link.source;\n                    }),\n                    \"target\": _.find(nodes, function (o) {\n                        return o.iri === link.target;\n                    }),\n                    \"predicates\": link.predicates\n                };\n            });\n        }\n\n        this.copyState = function () {\n            const nodesCopy = _.map(this.nodes, function (node) {\n                return {\n                    iri: node.iri,\n                    size: node.size,\n                    labels: angular.copy(node.labels),\n                    types: angular.copy(node.types),\n                    rdfRank: node.rdfRank,\n                    x: node.x,\n                    y: node.y,\n                    fixed: node.fixed\n                };\n            });\n            const linksCopy = _.map(this.links, function (link) {\n                return {\n                    source: link.source.iri,\n                    target: link.target.iri,\n                    predicates: link.predicates\n                };\n            });\n\n            return {\n                nodes: nodesCopy,\n                links: linksCopy,\n                colorIndex: colorIndex,\n                type2color: type2color,\n                scale: panAndZoom.scale(),\n                translate: panAndZoom.translate()\n            };\n        };\n\n        this.restoreState = function (state) {\n            $scope.nodeSelected = true;\n            $scope.searchVisible = false;\n\n            this.nodes = angular.copy(state.nodes);\n            this.links = [];\n            this.addAndMatchLinks(state.links);\n\n            _.each(this.nodes, function (d) {\n                if (d.fixed) {\n                    $scope.numberOfPinnedNodes++;\n                }\n            });\n\n            if (angular.isDefined(state.colorIndex) && angular.isDefined(state.type2color)) {\n                colorIndex = state.colorIndex;\n                type2color = angular.copy(state.type2color);\n            }\n\n            if (angular.isDefined(state.translate) && angular.isDefined(state.scale)) {\n                transformValues = \"translate(\" + state.translate[0] + \", \" + state.translate[1] + \") scale(\" + state.scale + \")\";\n                panAndZoom.translate(state.translate);\n                panAndZoom.scale(state.scale);\n            }\n\n            draw();\n        };\n    }\n\n    let graph = new Graph();\n\n    $scope.defaultGraphConfig = {\n        id: 'default',\n        name: 'Easy graph',\n        startMode: 'search'\n    };\n\n    // Graph Config\n    $scope.getGraphConfigs = function (graphCallback) {\n        GraphConfigRestService.getGraphConfigs()\n            .success(function (data) {\n                $scope.graphConfigs = data;\n                if (graphCallback) {\n                    graphCallback();\n                }\n            }).error(function (data) {\n            toastr.error(getError(data), 'Could not get graph configs');\n        });\n    };\n\n    $scope.loadConfigForId = function (configId, successCallback) {\n        if (configId === $scope.defaultGraphConfig.id) {\n            $scope.loadGraphConfig($scope.defaultGraphConfig);\n        } else {\n            GraphConfigRestService.getConfig(configId)\n                .success(function (data) {\n                    $scope.loadGraphConfig(data);\n                    successCallback();\n                })\n                .error(function (data) {\n                    toastr.error(getError(data), 'Could not load config ' + configId);\n                });\n        }\n    };\n\n    $scope.findConfigById = function (configId) {\n        if (configId === $scope.defaultGraphConfig.id) {\n            return $scope.defaultGraphConfig;\n        }\n        return $.grep($scope.graphConfigs, function (e) {\n            return e.id === configId;\n        })[0];\n    };\n\n    $scope.easyGraphSearch = function (iri) {\n        $scope.configLoaded = $scope.defaultGraphConfig;\n        $scope.openUri(iri);\n    };\n\n    $scope.loadGraphConfig = function (config) {\n        $scope.configLoaded = config;\n        if (config.startMode === 'search') {\n            $scope.searchVisible = true;\n        } else if (config.startMode === 'node' && config.startIRI) {\n            $timeout(function () {\n                $scope.openUri(config.startIRI, true);\n            }, 0);\n        } else if (config.startMode === 'query' && config.startGraphQuery) {\n            $scope.loading = true;\n            GraphConfigRestService.loadGraphForConfig(config, config.startQueryIncludeInferred, $scope.saveSettings['linksLimit'], config.startQuerySameAs)\n                .then(function (response) {\n                    // Node drawing will turn off loader\n                    initGraphFromResponse(response);\n                }, function (data) {\n                    $scope.loading = false;\n                    toastr.error(getError(data), 'Could not load graph from config');\n                });\n        }\n    };\n\n    $scope.deleteConfig = function (config) {\n        ModalService.openSimpleModal({\n            title: 'Confirm',\n            message: 'Are you sure you want to delete the graph config ' + '\\'' + config.name + '\\'?',\n            warning: true\n        }).result\n            .then(function () {\n                GraphConfigRestService.deleteGraphConfig(config)\n                    .success(function () {\n                        $scope.getGraphConfigs();\n                        $scope.refreshSavedGraphs();\n                    }).error(function (data) {\n                    toastr.error(getError(data), 'Could not delete graph config');\n                });\n            });\n    };\n\n    $scope.goToGraphConfig = function (config) {\n        $scope.pushHistory({config: config.id}, {config: config});\n        $scope.resetState();\n        $scope.loadGraphConfig(config);\n    };\n\n    $window.onpopstate = function (event) {\n        $scope.resetState();\n\n        if (event.state) {\n            if (event.state.config) {\n                $scope.loadGraphConfig(event.state.config);\n                if (event.state.uri) {\n                    $scope.openUri(event.state.uri, true);\n                }\n            } else if (event.state.savedGraph) {\n                $scope.loadSavedGraph(event.state.savedGraph, true);\n            }\n        }\n    };\n\n    const initGraphFromQueryParam = function () {\n        // view sparql\n        if ($location.search().query) {\n            $scope.searchVisible = false;\n            $scope.queryResultsMode = true;\n            loadGraphForQuery($location.search().query,\n                $location.search().sameAs,\n                $location.search().inference);\n        } else {\n            // broadcasted event from view resource directive to take input value\n            $scope.$on('onRootNodeChange', function (e, inputValue) {\n                $scope.loading = true;\n                if (angular.isDefined(inputValue)) {\n                    $scope.rootNodeIri = inputValue;\n                    $http({\n                        url: 'rest/explore-graph/node',\n                        method: 'GET',\n                        params: {\n                            iri: inputValue,\n                            config: $scope.configLoaded ? $scope.configLoaded.id : $scope.defaultGraphConfig.id,\n                            languages: !$scope.shouldShowSettings() ? [] : $scope.saveSettings['languages'],\n                            includeInferred: $scope.saveSettings['includeInferred'],\n                            sameAsState: $scope.saveSettings['sameAsState']\n                        }\n                    }).then(function (response) {\n                        $scope.nodeSelected = true;\n                        $scope.searchVisible = false;\n                        if (response.data.types === null) {\n                            response.data.types = \"greyColor\";\n                        }\n                        graph = new Graph();\n                        const rootNode = graph.addNode(response.data, width / 2, height / 2);\n\n                        transformValues = \"translate(0, -70) scale(1)\";\n                        panAndZoom.translate([0, -70]);\n                        panAndZoom.scale(1);\n\n                        expandNode(rootNode, true);\n                    }).catch(function (err) {\n                        $scope.loading = false;\n                        toastr.error(getError(err), 'Could not load visual graph');\n                    });\n                }\n            });\n        }\n\n        if ($location.search().uri) {\n            $scope.openUri($location.search().uri);\n        }\n\n        if ($location.search().saved) {\n            SavedGraphsRestService.getSavedGraph($location.search().saved)\n                .success(function (data) {\n                    $scope.loadSavedGraph(data);\n                })\n                .error(function (data) {\n                    const msg = getError(data);\n                    toastr.error(msg, 'Error! Could not open saved graph');\n                });\n        }\n    };\n\n    const loadGraphFromQueryParam = function () {\n        // view graph config\n        if ($location.search().config) {\n            $scope.loadConfigForId($location.search().config, initGraphFromQueryParam);\n        } else if ($location.search().query || $location.search().uri) {\n            $scope.loadGraphConfig($scope.defaultGraphConfig);\n            initGraphFromQueryParam();\n        } else {\n            initGraphFromQueryParam();\n        }\n    };\n\n    $scope.replaceIRIWithPrefix = function (iri) {\n        const namespaces = $scope.namespaces;\n        const namespacePrefix = _.findLast(namespaces, function (o) {\n            return iri.indexOf(o.uri) === 0;\n        });\n        return namespacePrefix ? (namespacePrefix.prefix + \":\" + iri.substring(namespacePrefix.uri.length)) : iri;\n    };\n\n    function expandPrefix(str, namespaces) {\n        const ABS_URI_REGEX = /^<?(http|urn).*>?/;\n        if (!ABS_URI_REGEX.test(str)) {\n            const uriParts = str.split(':');\n            const uriPart = uriParts[0];\n            const localName = uriParts[1];\n            if (!angular.isUndefined(localName)) {\n                const expandedUri = ClassInstanceDetailsService.getNamespaceUriForPrefix(namespaces, uriPart);\n                if (expandedUri) {\n                    return expandedUri + localName;\n                }\n            }\n        }\n        return str;\n    }\n\n    $scope.addedTag = function (tag) {\n        if (tag.text.indexOf(':') < 0) {\n            toastr.warning('Enter an absolute full or prefixed IRI');\n            return null;\n        }\n        tag.text = expandPrefix(tag.text, $scope.namespaces);\n        $scope.pageslideExpanded = true;\n        return tag;\n    };\n\n    $scope.validateTag = function (tag, category, wildcardOK) {\n        if (tag.text.indexOf(':') < 0) {\n            if (wildcardOK) {\n                toastr.warning('Enter an absolute full or prefixed IRI, optionally ending in *', category);\n            } else {\n                toastr.warning('Enter an absolute full or prefixed IRI', category);\n            }\n            return false;\n        }\n        const wildcardPos = tag.text.indexOf('*');\n        if (wildcardPos >= 0) {\n            if (!wildcardOK) {\n                toastr.warning('Wildcards not allowed here', category);\n                return false;\n            } else if (wildcardPos < tag.text.length - 1) {\n                toastr.warning('Wildcard allowed only as the last character', category);\n                return false;\n            }\n        }\n        return true;\n    };\n\n    $scope.getTagClass = function (tagText) {\n        if (tagText.endsWith('*')) {\n            return 'tag-item-wildcard';\n        }\n        return null;\n    };\n\n    $scope.getActiveRepository = function () {\n        return $repositories.getActiveRepository();\n    };\n\n    // Flag to avoid calling repo init logic twice\n    $scope.hasInitedRepository = false;\n\n    // This method may be called twice - once by us explicitly and once by the repositoryInit event.\n    // In some race conditions getActiveRepository() will be already set when we enter it the first\n    // time but then we'll be called again by the event, so we need the above flag to avoid double\n    // initialization and weirdness.\n    function initForRepository(newRepo) {\n        if (!$repositories.getActiveRepository() || $scope.hasInitedRepository && !newRepo) {\n            return;\n        }\n\n        $scope.hasInitedRepository = true;\n\n        if (!newRepo) {\n            // Process params only if this isn't a repo that was just selected from the dropdown menu\n            $scope.getGraphConfigs(loadGraphFromQueryParam);\n        }\n\n        // Inits namespaces for repo\n        $scope.getNamespacesPromise = RDF4JRepositoriesRestService.getNamespaces($scope.getActiveRepository())\n            .success(function (data) {\n                const nss = _.map(data.results.bindings, function (o) {\n                    return {\"uri\": o.namespace.value, \"prefix\": o.prefix.value};\n                });\n                $scope.namespaces = _.sortBy(nss, function (n) {\n                    return n.uri.length;\n                });\n\n                checkAutocompleteStatus();\n            }).error(function (data) {\n                toastr.error(getError(data), 'Cannot get namespaces for repository. View will not work properly!');\n            });\n    }\n\n    function checkAutocompleteStatus() {\n        $scope.getAutocompletePromise = AutocompleteRestService.checkAutocompleteStatus();\n    }\n\n    $scope.$on('autocompleteStatus', function() {\n        checkAutocompleteStatus();\n    });\n\n    $scope.$on('repositoryIsSet', function (event, args) {\n        // New repo set from dropdown, clear init state\n        if (args.newRepo) {\n            $scope.hasInitedRepository = false;\n        }\n\n        initForRepository(args.newRepo);\n\n        // New repo set from dropdown, clear state and go to home page\n        if (args.newRepo) {\n            $scope.resetState();\n            // Quick-n-dirty way to get rid of the existing vis\n            $('.graph-visualization svg').empty();\n\n            // When we come from the sparql view and then change the repo though the dropdown,\n            // should goToHome and reinit the view, for the search to view on the home page\n            if ($location.search().query) {\n                $scope.goToHome();\n                initGraphFromQueryParam();\n            }\n\n        }\n    });\n\n    initForRepository();\n\n    const multiClickDelay = 500; // max delay between clicks for multiple click events\n\n    const nodeLabelRectScaleX = 1.75;\n\n    const color1 = d3.scale.linear()\n        .domain([0, 9])\n        .range([\"hsl(0, 100%, 75%)\", \"hsl(360, 90%, 82%)\"])\n        .interpolate(d3.interpolateHslLong);\n\n    const color2 = d3.scale.linear()\n        .domain([0, 9])\n        .range([\"hsl(180, 50%, 75%)\", \"hsl(540, 40%, 82%)\"])\n        .interpolate(d3.interpolateHslLong);\n\n    $scope.getColor = function (type) {\n        if (angular.isUndefined(type2color[type])) {\n            type2color[type] = colorIndex;\n            colorIndex++;\n        }\n\n        const index = type2color[type];\n        if (index > 39) {\n            return \"#c2c2c2\";\n        } else if (index % 2 === 0) {\n            return color1(index / 2);\n        } else {\n            return color2(index / 2);\n        }\n    };\n\n    const force = d3.layout.force()\n        .gravity(0.07)\n        .size([width, height]);\n\n    const svg = d3.select(\".main-container .graph-visualization\").append(\"svg\")\n        .attr(\"viewBox\", \"0 0 \" + width + \" \" + height)\n        .attr(\"preserveAspectRatio\", \"xMidYMid meet\");\n\n    let showNodeTipAndIconsTimer = 0;\n    let removeIconsTimer = 0;\n\n    const loader = new Loader();\n\n    function draw(resetRootNode) {\n        // remove all group elements and rec to rebuild the graph when the user clicks on it\n        d3.selectAll(\"svg g\").remove();\n        d3.selectAll(\"svg rect\").remove();\n        d3.selectAll('.d3-tip').remove();\n        d3.selectAll('.menu-events').remove();\n\n        // zoom and drag event\n        panAndZoom.on(\"zoom\", panAndZoomed);\n\n        // building rectangular so we can bind zoom and drag effects\n        svg.append(\"rect\")\n            .attr(\"width\", width * 10)\n            .attr(\"height\", height * 10)\n            .attr(\"x\", -(width * 10 - width) / 2)\n            .attr(\"y\", -(height * 10 - height) / 2)\n            .style(\"fill\", \"none\")\n            .style(\"pointer-events\", \"all\")\n            .call(panAndZoom)\n            .on(\"click\", function () {\n                d3.event.stopPropagation();\n                removeMenuIfVisible();\n                // Clicking outside the graph stops the layout\n                force.stop();\n            });\n\n\n        const container = svg.append(\"g\").attr(\"class\", \"nodes-container\")\n            .attr(\"transform\", function () {\n                if (angular.isDefined(transformValues) && !resetRootNode) {\n                    return transformValues;\n                }\n                return '';\n            });\n\n        const tip = d3tip()\n            .attr('class', 'd3-tip')\n            .customPosition(function () {\n                const bbox = tipElement.getBoundingClientRect();\n                return {\n                    top: (bbox.bottom + 10) + 'px',\n                    left: (bbox.left - 30) + 'px'\n                };\n            })\n            .html(function (d) {\n                let html = '';\n\n                if (d.fixed) {\n                    // add pin icon if pinned down\n                    html += '<i class=\"icon-pin\"></i>&nbsp;&nbsp;';\n                }\n\n                if (d.types.length > 0) {\n                    // mid-dot delimited types\n                    html += _.join(_.map(d.types, function (t) {\n                        return $scope.replaceIRIWithPrefix(t);\n                    }), ' \\u00B7 ');\n                } else {\n                    html += '<i>No types</i>';\n                }\n\n                return html;\n            });\n\n        const numberOfPredLeft = function (d) {\n            return d.predicates.length - 10;\n        };\n\n        // This will create text that will appear in d3tip\n        const createTipText = function (d) {\n            let html = '';\n            html += _.join(_.map(d.predicates, function (p, index) {\n                if (index === 0) {\n                    return getShortPredicate(p);\n                    // If we have less than or ten predicates should show them with middle dot separated\n                } else if (index < 10) {\n                    return ' \\u00B7 ' + getShortPredicate(p);\n                    // On eleventh predicate just append how many more predicates left to show to the user\n                } else if (index === 10) {\n                    const numOfPredLeft = numberOfPredLeft(d);\n                    // Show how many predicates left\n                    const textToShow = numOfPredLeft > 1 ? numOfPredLeft + ' predicates'\n                        : numOfPredLeft + ' predicate';\n                    return ' \\u00B7 ' + 'more ' + textToShow + ' to show';\n                }\n            }), '');\n\n            return html;\n        };\n\n        const calculateWidth = function (d) {\n            const text = createTipText(d);\n            const canvas = document.createElement('canvas');\n            const ctx = canvas.getContext(\"2d\");\n            ctx.font = \"13px Arial\";\n\n            if (d.predicates.length < 10) {\n                return ctx.measureText(text).width;\n            } else {\n                return ctx.measureText(text).width / 2;\n            }\n        };\n\n        let tipPredicateElement;\n        let tipPredicateTimer;\n\n        const tipPredicates = d3tip()\n            .attr('class', 'd3-tip')\n            .customPosition(function (d) {\n                const bbox = tipPredicateElement.getBoundingClientRect();\n                const textWidth = calculateWidth(d);\n                return {\n                    top: (bbox.top - 30) + 'px',\n                    left: (bbox.left - 30) + 'px',\n                    width: textWidth + 'px'\n                };\n            })\n            .html(function (d) {\n                return createTipText(d);\n            });\n\n        let tipTimer;\n        // Shows the tooltip for a node but with a slight delay\n        const showTipForNode = function (d, event) {\n            $timeout.cancel(tipTimer);\n            const thisTipElement = tipElement = event.target;\n            $timeout(function () {\n                if (tipElement === thisTipElement) {\n                    tip.show(d, tipElement);\n                }\n            }, 300);\n        };\n\n        // Hides the tooltip for the node and resets some variables\n        const hideTipForNode = function () {\n            $timeout.cancel(tipTimer);\n            $timeout.cancel(showNodeTipAndIconsTimer);\n            tipElement = null;\n            tip.hide();\n            removeIconsTimer = $timeout(function () {\n                removeMenuIfVisible();\n            }, 500);\n        };\n\n        // Updates the text in the tooltip if already visible\n        const updateTipForNode = function (d) {\n            if (tipElement) {\n                tip.show(d, tipElement);\n            }\n        };\n\n        svg.call(tip);\n\n        // Shows like tooltip list of predicates but with a slight delay\n        const showPredicateToolTip = function (d) {\n            $timeout.cancel(tipPredicateTimer);\n            const thisPredicateTipElement = tipPredicateElement = d3.event.target;\n            $timeout(function () {\n                if (tipPredicateElement === thisPredicateTipElement && d.predicates.length > 1) {\n                    tipPredicates.show(d, tipPredicateElement);\n                }\n            }, 300);\n        };\n\n        // Hides the tooltip with predicates and resets some variables\n        const hidePredicateToolTip = function () {\n            $timeout.cancel(tipPredicateTimer);\n            tipPredicateElement = null;\n            tipPredicates.hide();\n        };\n\n        svg.call(tipPredicates);\n\n        let link = svg.selectAll(\".link\");\n        let node = svg.selectAll(\".node\");\n\n        force.nodes(graph.nodes).charge(-3000);\n\n        force.links(graph.links).linkDistance(function (link) {\n            // link distance depends on length of text with an added bonus for strongly connected nodes,\n            // i.e. they will be pushed further from each other so that their common nodes can cluster up\n            return getPredicateTextLength(link) + 30 * link.connectedness;\n        });\n\n        // arrow markers\n        container.append(\"defs\").selectAll(\"marker\")\n            .data(force.links())\n            .enter().append(\"marker\")\n            .attr(\"class\", \"arrow-marker\")\n            .attr(\"id\", function (d) {\n                return d.target.size;\n            })\n            .attr(\"viewBox\", \"0 -5 10 10\")\n            .attr(\"refX\", function (d) {\n                return d.target.size + 11;\n            })\n            .attr(\"refY\", 0)\n            .attr(\"markerWidth\", 10)\n            .attr(\"markerHeight\", 10)\n            .attr(\"orient\", \"auto\")\n            .append(\"path\")\n            .attr(\"d\", \"M0,-5L10,0L0,5 L10,0 L0, -5\");\n\n        // add the links, nodes, predicates and node labels\n        link = container.selectAll(\".link\")\n            .data(graph.links)\n            .enter().append(\"g\")\n            .attr(\"class\", \"link-wrapper\")\n            .attr(\"id\", function (d) {\n                return d.source.iri + '>' + d.target.iri;\n            })\n            .append(\"line\")\n            .attr(\"class\", \"link\")\n            .style(\"stroke-width\", 1)\n            .style(\"fill\", \"transparent\")\n            .style(\"marker-end\", function (d) {\n                return \"url(\" + $location.absUrl() + \"#\" + d.target.size + \")\";\n            });\n\n        const predicate = container.selectAll(\".link-wrapper\")\n            .append(\"text\")\n            .text(function (d) {\n                return getPredicate(d);\n            })\n            .attr(\"class\", function (d) {\n                if (d.predicates.length > 1) {\n                    return \"predicates\";\n                }\n                return \"predicate\";\n            })\n            .attr(\"dy\", \"-0.5em\")\n            .style(\"text-anchor\", \"middle\")\n            .style(\"display\", $scope.saveSettings.showLinksText ? \"\" : \"none\")\n            .on(\"mouseover\", function (d) {\n                d3.event.stopPropagation();\n                showPredicateToolTip(d);\n            })\n            .on('mouseout', hidePredicateToolTip)\n            .on(\"click\", function (d) {\n                d3.event.stopPropagation();\n                openPredicates(d);\n            });\n\n        // node events and variables\n        let mouseEventTimer;\n        let upEventLast = 0;\n        let virtualClickEventTimer = 0;\n        let moveEventCount = 0;\n\n        // tracks mousedown and touchstart events in order to count single or double click\n        // (checked in upEventHandler)\n        const downEventHandler = function () {\n            if (d3.event.button && d3.event.button !== 0) {\n                return;\n            }\n\n            hideTipForNode();\n            $timeout.cancel(mouseEventTimer);\n            $scope.showPredicates = false;\n            if (d3.event.timeStamp - upEventLast < multiClickDelay) {\n                virtualClickEventTimer++;\n            } else {\n                virtualClickEventTimer = 1;\n            }\n\n            upEventLast = d3.event.timeStamp;\n\n            d3.event.preventDefault();\n        };\n\n        // builds upon downEventHandler and adds additional functionality for touch devices\n        const touchStartEventHandler = function (d) {\n            downEventHandler();\n\n            // for touch devices we track touch and hold for 1s in order to remove a node\n            moveEventCount = 0;\n            mouseEventTimer = $timeout(function () {\n                if (moveEventCount < 5) {\n                    // remove the node only if not many move events were fired,\n                    // this avoids conflict with dragging nodes\n                    hideNode(d);\n                }\n                mouseEventTimer = null;\n                virtualClickEventTimer = 0;\n            }, 1000);\n        };\n\n        // tracks the number of move events (checked in the touchend event handler)\n        const moveEventHandler = function () {\n            moveEventCount++;\n        };\n\n        const showNodeTipAndIcons = function (d) {\n            if (!d.isBeingDragged) {\n                const event = d3.event;\n                $timeout.cancel(removeIconsTimer);\n                showNodeTipAndIconsTimer = $timeout(() => {\n                    if (expandNodeIcons(d, this)) {\n                        showTipForNode(d, event);\n                    }\n                }, 400);\n            }\n        };\n\n        const upEventHandler = function (d) {\n            if (d3.event.button && d3.event.button !== 0) {\n                return;\n            }\n\n            $timeout.cancel(mouseEventTimer);\n\n            const event = d3.event;\n            const element = this;\n            if (d3.event.timeStamp - upEventLast < multiClickDelay) {\n                if (virtualClickEventTimer === 1) {\n                    mouseEventTimer = $timeout(function () {\n                        clickedNode(d, element, event);\n                    }, 40 + multiClickDelay - (d3.event.timeStamp - upEventLast));\n                } else if (virtualClickEventTimer === 2) {\n                    // expand node\n                    const shownLinks = graph.countLinks(d, graph.links);\n                    if (shownLinks <= $scope.saveSettings['linksLimit']) {\n                        expandNode(d, false, element.parentNode);\n                    } else {\n                        toastr.info('Increase limit to see more connections and try again', 'Node already expanded to predefined maximum links to show.');\n                    }\n                    $scope.closeInfoPanel();\n                }\n            }\n\n            d3.event.preventDefault();\n        };\n\n        // Shows growing or shrinking pin animation\n        function showPinAnimation(d, type) {\n            let startSize;\n            let endSize;\n            let startOpacity;\n            let endOpacity;\n            let animate = true;\n\n            if (type === 'down') {\n                startSize = d.size * 2;\n                endSize = d.size / 3;\n                startOpacity = 0.8;\n                endOpacity = 0.3;\n            } else if (type === 'down-fixed') {\n                startSize = d.size * 2;\n                endSize = d.size;\n                startOpacity = 0.8;\n                endOpacity = 0.66;\n            } else if (type === 'up') {\n                startSize = d.size / 3;\n                endSize = d.size * 2;\n                startOpacity = 0.3;\n                endOpacity = 0.8;\n            } else if (type === 'fixed') {\n                startSize = d.size;\n                startOpacity = 0.66;\n                animate = false;\n            } else {\n                return; // unknown\n            }\n\n            let pin = container.selectAll('.node-wrapper')\n                .filter(function (innerD) {\n                    return innerD === d;\n                })\n                .append('text')\n                .text('\\ue90f') // pin icon\n                .classed('icon-any pinned', true)\n                .style('font-size', startSize + 'px')\n                .attr('x', function (d) {\n                    return d.x;\n                })\n                .attr('y', function (d) {\n                    return d.y;\n                })\n                .attr('opacity', startOpacity);\n\n            if (type === 'fixed' || type === 'down-fixed') {\n                d.pin = pin;\n            }\n\n            if (animate) {\n                pin = pin.transition()\n                    .duration(1000)\n                    .style('font-size', function () {\n                        return endSize + 'px';\n                    })\n                    .attr('opacity', endOpacity);\n\n                if (type !== 'down-fixed') {\n                    pin.remove();\n                }\n            }\n        }\n\n        function removePin() {\n            d3.select('.pinned').remove();\n        }\n\n        // Unfixes nodes that were dragged previously\n        const rightClickHandler = function (d) {\n            if (d3.event.shiftKey) {\n                // Do nothing with shift key, use to access context menu\n                return;\n            }\n\n            d3.event.preventDefault();\n\n            removeMenuIfVisible();\n            $scope.closeInfoPanel();\n\n            if (d.fixed) {\n                // unpin\n                $scope.numberOfPinnedNodes--;\n                d.fixed = false;\n                showPinAnimation(d, 'up');\n                force.resume();\n            } else {\n                // pin down\n                $scope.numberOfPinnedNodes++;\n                d.fixed = true;\n                showPinAnimation(d, 'down');\n            }\n            // update pin in tooltip\n            updateTipForNode(d);\n        };\n\n        const drag = d3.behavior.drag()\n            .origin(function (d) {\n                return d;\n            })\n            .on(\"dragstart\", dragstarted)\n            .on(\"drag\", dragged)\n            .on(\"dragend\", dragended);\n\n\n        function dragstarted(d) {\n            if (d3.event.sourceEvent.button === 0) {\n                d.fixedBeforeDrag = d.fixed;\n                d.isBeingDragged = true;\n                d.beginDragging = true;\n                removeMenuIfVisible();\n                d3.event.sourceEvent.stopPropagation();\n                d3.select(this).classed(\"dragging\", true);\n            }\n        }\n\n        function dragged(d) {\n            if (d.isBeingDragged) {\n                // reset click counter to avoid conflicts between clicks and drags\n                virtualClickEventTimer = 0;\n\n                d.px = d3.event.x;\n                d.py = d3.event.y;\n                if (!d.fixed) {\n                    $scope.numberOfPinnedNodes++;\n                    d.fixed = true;\n                    showPinAnimation(d, 'down-fixed');\n                } else if (d.beginDragging) {\n                    showPinAnimation(d, 'fixed');\n                }\n                d.pinWasFixed = true;\n                d.beginDragging = null;\n\n                force.resume();\n            }\n        }\n\n        function dragended(d) {\n            if (d.isBeingDragged) {\n                if (d.pinWasFixed) {\n                    d.pinWasFixed = null;\n                    removePin();\n                }\n                d.isBeingDragged = false;\n                d3.select(this).classed(\"dragging\", false);\n            }\n        }\n\n        node = container.selectAll(\".node\")\n            .data(graph.nodes)\n            .enter().append(\"g\")\n            .attr(\"class\", \"node-wrapper\")\n            .attr(\"id\", function (d) {\n                return d.iri;\n            })\n            .append(\"circle\")\n            .attr(\"class\", \"node\")\n            .attr(\"r\", function (d) {\n                return d.size;\n            })\n            .style(\"fill\", function (d) {\n                if (d.types === \"greyColor\") {\n                    return \"c2c2c2\";\n                }\n                return $scope.getColor(d.types[0]);\n            })\n            .call(drag)\n            .on('mouseover', showNodeTipAndIcons)\n            .on('mouseout', hideTipForNode)\n            .on(\"mousedown\", downEventHandler)\n            .on(\"touchstart\", touchStartEventHandler)\n            // no need to track move for mouse\n            .on(\"touchmove\", moveEventHandler)\n            .on(\"mouseup\", upEventHandler)\n            .on(\"touchend\", upEventHandler)\n            .on(\"contextmenu\", rightClickHandler);\n\n        const nodeLabels = container.selectAll(\".node-wrapper\").append(\"foreignObject\")\n            .style(\"pointer-events\", \"none\")\n            .attr(\"width\", function (d) {\n                return d.size * 2 * nodeLabelRectScaleX;\n            });\n        // height will be computed by updateNodeLabels\n\n        container.insert(\"g\").attr(\"class\", \"menu-events\");\n\n        updateNodeLabels(nodeLabels);\n\n        force.on(\"tick\", function () {\n            // recalculate nodes positions and repel them if they collide\n            let q = d3.geom.quadtree(graph.nodes);\n            let i = 0;\n            const n = graph.nodes.length;\n            // FIXME while (++i < n) q.visit(collide(graph.nodes[i]));\n\n            // recalculate links attributes\n            link.attr(\"x1\", function (d) {\n                return d.source.x;\n            }).attr(\"y1\", function (d) {\n                return d.source.y;\n            }).attr(\"x2\", function (d) {\n                return d.target.x;\n            }).attr(\"y2\", function (d) {\n                return d.target.y;\n            });\n\n            // recalculate predicates attributes\n            predicate.attr(\"x\", function (d) {\n                return d.x = (d.source.x + d.target.x) * 0.5;\n            }).attr(\"y\", function (d) {\n                return d.y = (d.source.y + d.target.y) * 0.5;\n            }).attr(\"transform\", function (d) {\n                const angle = findAngleBetweenNodes(d, d.direction);\n                return \"rotate(\" + angle + \", \" + d.x + \", \" + d.y + \")\";\n            });\n\n            // recalculate nodes attributes\n            node.attr(\"cx\", function (d) {\n                return d.x;\n            }).attr(\"cy\", function (d) {\n                return d.y;\n            });\n\n            // update node loader position\n            container.select(\".node-loader\").attr(\"x\", function (d) {\n                return d.x - d.size + 3; //square svg is not perfectly centered and need +3 units on x ordinate to fit in circle\n            }).attr(\"y\", function (d) {\n                return d.y - d.size;\n            });\n\n            container.select(\".loader-container\").attr(\"cx\", function (d) {\n                return d.x;\n            }).attr(\"cy\", function (d) {\n                return d.y;\n            });\n\n            nodeLabels.attr(\"x\", function (d) {\n                return d.x - (d.size * nodeLabelRectScaleX);\n            }).attr(\"y\", function (d) {\n                // the height of the nodeLabel box is 3 times the fontSize computed by updateNodeLabels\n                // and we want to offset it so that its middle matches the centre of the circle, hence divided by 2\n                return d.y - 3 * d.fontSize / 2;\n            });\n\n            // Update position of shrinking pin animation (if any)\n            d3.select('.pinned').attr(\"x\", function (d) {\n                return d.x;\n            }).attr(\"y\", function (d) {\n                return d.y;\n            });\n        });\n\n        function panAndZoomed() {\n            transformValues = \"translate(\" + d3.event.translate + \") scale(\" + d3.event.scale + \")\";\n            container.attr(\"transform\", transformValues);\n        }\n\n        if (angular.isDefined(loader)) {\n            loader.setLoadingState(false);\n        }\n\n        if ($scope.loading) {\n            $scope.loading = false;\n        }\n\n        d3.selectAll('.link-wrapper').each(function () {\n            const source = $(this).attr(\"id\").split(\">\")[0];\n            const target = $(this).attr(\"id\").split(\">\")[1];\n            d3.selectAll('.link').each(function (link) {\n                if (link.source.iri === target && link.target.iri === source) {\n                    let twoWayLinkID = link.source.iri;\n                    twoWayLinkID += \">\";\n                    twoWayLinkID += link.target.iri;\n                    const textNode = document.createTextNode('  \\u27F6');\n                    document.getElementById(twoWayLinkID).lastChild.appendChild(textNode);\n                    link.direction = \"double\";\n                }\n            });\n        });\n\n        d3.selectAll('.d3-actions-tip').remove();\n\n        force.start();\n    }\n\n    /* FIXME\n    // check for collision of the nodes\n    function collide(node, bigger) {\n        return function (quad, x1, y1, x2, y2) {\n            if (quad.point && (quad.point !== node)) {\n                var x = node.x - quad.point.x,\n                    y = node.y - quad.point.y,\n                    l = Math.sqrt(x * x + y * y),\n                    r = node.size + quad.point.size;\n                if (l < r) {\n                    l = (l - r) / l * .5;\n                    node.x -= x *= l;\n                    node.y -= y *= l;\n                    quad.point.x += x;\n                    quad.point.y += y;\n                }\n            }\n            return x1 > nx2 || x2 < nx1 || y1 > ny2 || y2 < ny1;\n        };\n    }\n    */\n\n    draw();\n\n    // find angle between pair of nodes so we can position predicates\n    function findAngleBetweenNodes(linkedNodes, direction) {\n        const sourceNode = linkedNodes.source;\n        const targetNode = linkedNodes.target;\n\n        const p1 = {\n            x: sourceNode.x,\n            y: sourceNode.y\n        };\n\n        const p2 = {\n            x: targetNode.x,\n            y: targetNode.y\n        };\n        if (direction) {\n            return Math.atan2(p2.y - p1.y, p2.x - p1.x) * 180 / Math.PI;\n        } else {\n            const angleDeg = Math.atan2(p2.y - p1.y, p2.x - p1.x) * 180 / Math.PI;\n            if (angleDeg <= 90 && angleDeg >= -90) {\n                return angleDeg;\n            }\n            return (angleDeg > 0 ? -1 : 1) * (180 - Math.abs(angleDeg));\n        }\n    }\n\n    const menuEvents = new MenuEvents();\n\n    // expanding and collapsing of the nodes\n    function clickedNode(d, element, event) {\n        $scope.showInfoPanel = false;\n        $scope.showPredicates = false;\n        $scope.showNodeInfo = false;\n\n        // shift + ctrl/cmd + click focuses node\n        if (event.shiftKey && (event.ctrlKey || event.metaKey)) {\n            $rootScope.$broadcast(\"onRootNodeChange\", d.iri);\n            return;\n        }\n\n        // ctrl/cmd + click hides the node\n        if (event.ctrlKey || event.metaKey) {\n            hideNode(d);\n            return;\n        }\n\n        // If value of openedNodeInfoPanel is different than \"undefined\"\n        // we evaluate if clicked node value is the same and close it\n        if (typeof $scope.openedNodeInfoPanel !== \"undefined\" && $scope.openedNodeInfoPanel === d) {\n            $scope.pageslideExpanded = false;\n            $scope.openedNodeInfoPanel = undefined;\n            return;\n        }\n\n        showNodeInfo(d);\n    }\n\n    function expandNodeIcons(d, element) {\n        if ($scope.showInfoPanel) {\n            return false;\n        }\n\n        if (menuEvents.closeIcon || menuEvents.expandIcon || menuEvents.focusIcon || menuEvents.copyURIIcon) {\n            menuEvents.removeIcons();\n        }\n\n        // If nodes are still rearranging result of force.alpha() is more than 0.05\n        // and we don't want to show node's icons on mouse over and stop rearrangement\n        if (force.alpha() < 0.05) {\n            menuEvents.initIcons(d, element.parentNode);\n            force.stop();\n\n            return true;\n        }\n\n        return false;\n    }\n\n    function hideNode(d) {\n        graph.removeNode(d);\n        draw();\n    }\n\n    function collapseNode(d) {\n        d.isExpanded = false;\n        graph.removeNodeLeafLinks(d);\n        draw();\n    }\n\n    function initGraph(response) {\n        $scope.nodeSelected = true;\n        if (response.data.types === null) {\n            response.data.types = \"greyColor\";\n        }\n        graph = new Graph();\n        transformValues = \"translate(0, -70) scale(1)\";\n        panAndZoom.translate([0, -70]);\n        panAndZoom.scale(1);\n    }\n\n    function initGraphFromResponse(response) {\n        initGraph(response);\n        renderGraphFromResponse(response);\n    }\n\n    function renderGraphFromResponse(response, d, isStartNode) {\n        let linksFound = response.data;\n        // filter existing links\n        linksFound = _.filter(linksFound, function (newLink) {\n            return _.findIndex(graph.links,\n                function (existingLink) {\n                    return newLink.source === existingLink.source.iri && newLink.target === existingLink.target.iri;\n                }) === -1;\n        });\n        // filter reflexive links until we find a way to render them  GDB-1853\n        linksFound = _.filter(linksFound, function (newLink) {\n            return newLink.source !== newLink.target;\n        });\n        const nodesFromLinks = _.union(_.flatten(_.map(response.data, function (d) {\n            return [d.source, d.target];\n        })));\n        const existingNodes = _.map(graph.nodes, function (n) {\n            return n.iri;\n        });\n        const newNodes = _.reject(nodesFromLinks, function (n) {\n            return _.includes(existingNodes, n);\n        });\n\n        if (newNodes.length === 0) {\n            if (isStartNode) {\n                toastr.info('This node has no visible connections. Check your Graph Settings if you expect such.');\n            } else if (linksFound.length === 0) {\n                toastr.info('This node has no other visible connections. Check your Graph Settings if you expect such.');\n            }\n\n            graph.addAndMatchLinks(linksFound);\n            draw();\n        } else {\n            const promises = [];\n            const newNodesData = [];\n\n            _.forEach(newNodes, function (newNode, index) {\n                promises.push($http({\n                    url: 'rest/explore-graph/node',\n                    method: 'GET',\n                    params: {\n                        iri: newNode,\n                        config: $scope.configLoaded.id,\n                        languages: !$scope.shouldShowSettings() ? [] : $scope.saveSettings['languages'],\n                        includeInferred: $scope.saveSettings['includeInferred'],\n                        sameAsState: $scope.saveSettings['sameAsState']\n                    }\n                }).then(function (response) {\n                    // Save the data for later\n                    newNodesData[index] = response.data;\n                }));\n            });\n\n            // Waits for all of the collected promises and then:\n            // - adds each new node\n            // - redraws the graph\n            $q.all(promises).then(function () {\n                _.forEach(newNodesData, function (newNodeData, index) {\n                    // Calculate initial positions for the new nodes based on spreading them evenly\n                    // on a circle around the node we came from.\n                    const theta = 2 * Math.PI * index / newNodesData.length;\n                    const x = (d ? d.x : 0) + Math.cos(theta) * height / 3;\n                    const y = (d ? d.y : 0) + Math.sin(theta) * height / 3;\n                    graph.addNode(newNodeData, x, y);\n                });\n\n                graph.addAndMatchLinks(linksFound);\n                if (d) {\n                    d.isExpanded = true;\n                }\n                draw();\n            });\n        }\n    }\n\n    function expandNode(d, isStartNode, parentNode) {\n        if (loader.getLoadingState()) {\n            return;\n        }\n        loader.init(d, parentNode);\n\n        const expandIri = d.iri;\n        $http({\n            url: 'rest/explore-graph/links',\n            method: 'GET',\n            params: {\n                iri: expandIri, linksLimit: $scope.saveSettings['linksLimit'],\n                includeInferred: $scope.saveSettings['includeInferred'],\n                config: $scope.configLoaded.id,\n                preferredTypes: !$scope.shouldShowSettings() ? [] : $scope.saveSettings['preferredTypes'],\n                rejectedTypes: !$scope.shouldShowSettings() ? [] : $scope.saveSettings['rejectedTypes'],\n                preferredPredicates: !$scope.shouldShowSettings() ? [] : $scope.saveSettings['preferredPredicates'],\n                rejectedPredicates: !$scope.shouldShowSettings() ? [] : $scope.saveSettings['rejectedPredicates'],\n                preferredTypesOnly: !$scope.shouldShowSettings() ? [] : $scope.saveSettings['preferredTypesOnly'],\n                preferredPredicatesOnly: !$scope.shouldShowSettings() ? [] : $scope.saveSettings['preferredPredicatesOnly'],\n                languages: !$scope.shouldShowSettings() ? [] : $scope.saveSettings['languages'],\n                sameAsState: $scope.saveSettings['sameAsState'],\n                includeSchema: $scope.saveSettings['includeSchema']\n            }\n        }).then(function (response) {\n            renderGraphFromResponse(response, d, isStartNode);\n        }, function (response) {\n            const msg = getError(response.data);\n            toastr.error(msg, 'Error exploring node');\n            $scope.loading = false;\n            loader.setLoadingState(false);\n        });\n    }\n\n    function removeMenuIfVisible() {\n        if (angular.isDefined(menuEvents) && menuEvents.expandedState) {\n            menuEvents.removeIcons();\n        }\n    }\n\n    function MenuEvents() {\n        this.closeIcon = undefined;\n        this.expandIcon = undefined;\n        this.collapseIcon = undefined;\n        this.focusIcon = undefined;\n        this.copyURIIcon = undefined;\n        this.actionsTip = undefined;\n\n        this.removeIcons = function () {\n            this.closeIcon.remove(\"g\");\n            if (this.expandIcon) {\n                this.expandIcon.remove(\"g\");\n            }\n\n            if (this.collapseIcon) {\n                this.collapseIcon.remove(\"g\");\n            }\n\n            this.focusIcon.remove(\"g\");\n            this.copyURIIcon.remove(\"g\");\n            this.closeIcon = undefined;\n            this.expandIcon = undefined;\n            this.collapseIcon = undefined;\n            this.focusIcon = undefined;\n            this.copyURIIcon = undefined;\n\n            this.expandedState = false;\n        };\n\n        this.expandedState = false;\n\n        function getPositionAndAngle(angle, d) {\n            const x = d.x - 14 + (d.size + 15) * Math.cos(angle * Math.PI / 180 - Math.PI / 2);\n            const y = d.y - 14 + (d.size + 15) * Math.sin(angle * Math.PI / 180 - Math.PI / 2);\n            return \"translate(\" + x + \",\" + y + \")\";\n        }\n\n        this.initIcons = function (node, parentNode) {\n            // init action tips on hover of the icons\n            const actionsTip = d3tip()\n                .attr('class', 'd3-tip d3-actions-tip')\n                .customPosition(function () {\n                    const bbox = d3.event.target.getBoundingClientRect();\n                    return {\n                        top: (bbox.top - 20) + 'px',\n                        left: (bbox.right + 10) + 'px'\n                    };\n                })\n                .html(function (name) {\n                    return name;\n                });\n            svg.call(actionsTip);\n            const angle = 20;\n            if (node.isExpanded) {\n                this.collapseIcon = d3.select('.menu-events').append(\"g\")\n                    .attr(\"class\", \"collapse-icon\")\n                    .attr(\"name\", \"collapse\")\n                    .attr(\"transform\", function () {\n                        return getPositionAndAngle(angle, node);\n                    });\n                this.collapseIcon.append(\"circle\")\n                    .attr(\"cx\", 14)\n                    .attr(\"cy\", 14)\n                    .attr(\"r\", 13)\n                    .style(\"fill\", \"#eee\");\n                this.collapseIcon.append(\"path\")\n                    .attr(\"d\", \"M22.67,12a.59.59,0,0,1-.53.65l-6.88.72H15.2a.59.59,0,0,1-.59-.65l.72-6.88A.58.58,0,0,1,16,5.33a.59.59,0,0,1,.53.65L16,11.11,21.3,5.79a.64.64,0,0,1,.91.91L16.89,12,22,11.49A.59.59,0,0,1,22.67,12ZM12.59,14.75l-6.75.85a.59.59,0,0,0-.51.66.58.58,0,0,0,.66.51l4.95-.62-5.2,5.2a.64.64,0,1,0,.91.91l5.2-5.2L11.23,22a.59.59,0,0,0,.51.66h.07a.59.59,0,0,0,.59-.52l.85-6.75a.59.59,0,0,0-.17-.49A.58.58,0,0,0,12.59,14.75Z\")\n                    .style(\"fill\", \"#ed4f2f\");\n\n                this.collapseIcon.on(\"click\", function () {\n                    collapseNode(node);\n                }).on('mouseover', function () {\n                    actionsTip.show(this.getAttribute(\"name\"));\n                    $timeout.cancel(showNodeTipAndIconsTimer);\n                    $timeout.cancel(removeIconsTimer);\n                }).on('mouseout', function () {\n                    actionsTip.hide();\n                    removeIconsTimer = $timeout(function () {\n                        removeMenuIfVisible();\n                    }, 500);\n                });\n            } else {\n                this.expandIcon = d3.select('.menu-events').append(\"g\")\n                    .attr(\"class\", \"expand-icon\")\n                    .attr(\"name\", \"expand\")\n                    .attr(\"transform\", function () {\n                        return getPositionAndAngle(angle, node);\n                    });\n                this.expandIcon.append(\"circle\")\n                    .attr(\"cx\", 14)\n                    .attr(\"cy\", 14)\n                    .attr(\"r\", 13)\n                    .style(\"fill\", \"#eee\");\n                this.expandIcon.append(\"path\")\n                    .attr(\"d\", \"M22.37,6.28l-.72,6.88a.59.59,0,0,1-.59.53H21a.59.59,0,0,1-.53-.65L21,7.9l-5.32,5.32a.64.64,0,0,1-.91-.91L20.1,7,15,7.53a.59.59,0,0,1-.12-1.18l6.88-.72a.59.59,0,0,1,.65.65ZM12.89,20.34,7.95,21l5.2-5.2a.64.64,0,0,0-.91-.91L7,20.05l.62-4.95A.59.59,0,0,0,6.48,15l-.85,6.75a.59.59,0,0,0,.59.67h.07L13,21.52a.59.59,0,1,0-.15-1.18Z\")\n                    .style(\"fill\", \"#ed4f2f\");\n\n                this.expandIcon.on(\"click\", function () {\n                    expandNode(node, false, parentNode);\n                }).on('mouseover', function () {\n                    actionsTip.show(this.getAttribute(\"name\"));\n                    $timeout.cancel(removeIconsTimer);\n                    $timeout.cancel(showNodeTipAndIconsTimer);\n                }).on('mouseout', function () {\n                    actionsTip.hide();\n                    removeIconsTimer = $timeout(function () {\n                        removeMenuIfVisible();\n                    }, 500);\n                });\n            }\n\n\n            this.focusIcon = d3.select('.menu-events').append(\"g\")\n                .attr(\"class\", \"focus-icon\")\n                .attr(\"name\", \"focus\")\n                .attr(\"transform\", function () {\n                    return getPositionAndAngle(angle, node);\n                });\n            this.focusIcon.append(\"circle\")\n                .attr(\"cx\", 14)\n                .attr(\"cy\", 14)\n                .attr(\"r\", 13)\n                .style(\"fill\", \"#eee\");\n            this.focusIcon.append(\"path\")\n                .attr(\"d\", \"M14.2,23.81a9.8,9.8,0,1,1,6.93-2.87h0A9.74,9.74,0,0,1,14.2,23.81Zm0-18.17a8.37,8.37,0,1,0,5.92,14.29h0A8.37,8.37,0,0,0,14.2,5.64Zm1.42,6.95a2,2,0,1,0,0,2.85A2,2,0,0,0,15.62,12.59Z\")\n                .style(\"fill\", \"#ed4f2f\");\n\n            this.focusIcon.on(\"click\", function () {\n                $rootScope.$broadcast(\"onRootNodeChange\", node.iri);\n            }).on('mouseover', function () {\n                actionsTip.show(this.getAttribute(\"name\"));\n                $timeout.cancel(removeIconsTimer);\n                $timeout.cancel(showNodeTipAndIconsTimer);\n            }).on('mouseout', function () {\n                actionsTip.hide();\n                removeIconsTimer = $timeout(function () {\n                    removeMenuIfVisible();\n                }, 500);\n            });\n\n            this.copyURIIcon = d3.select('.menu-events').append(\"g\")\n                .attr(\"class\", \"icon-link\")\n                .attr(\"name\", \"link\")\n                .attr(\"transform\", function () {\n                    return getPositionAndAngle(angle, node);\n                });\n            this.copyURIIcon.append(\"circle\")\n                .attr(\"cx\", 14)\n                .attr(\"cy\", 14)\n                .attr(\"r\", 13)\n                .style(\"fill\", \"#eee\");\n            this.copyURIIcon.append(\"path\")\n                .attr(\"d\", \"M 13.457031 10.164062 C 13.648438 10.164062 13.820312 10.242188 13.941406 10.363281 L 15.492188 11.859375 C 15.984375 12.332031 16.292969 12.992188 16.292969 13.714844 C 16.292969 14.441406 15.984375 15.097656 15.492188 15.574219 L 10.394531 20.496094 C 9.902344 20.972656 9.222656 21.265625 8.472656 21.265625 C 7.71875 21.265625 7.039062 20.972656 6.546875 20.496094 L 4.996094 19 C 4.507812 18.523438 4.203125 17.867188 4.203125 17.144531 C 4.203125 16.421875 4.507812 15.765625 4.996094 15.289062 L 7.542969 12.824219 C 7.667969 12.707031 7.84375 12.628906 8.035156 12.628906 C 8.417969 12.628906 8.726562 12.929688 8.726562 13.300781 C 8.726562 13.484375 8.648438 13.652344 8.523438 13.773438 L 5.976562 16.234375 C 5.738281 16.46875 5.589844 16.792969 5.589844 17.148438 C 5.589844 17.503906 5.738281 17.824219 5.976562 18.058594 L 7.527344 19.566406 C 7.773438 19.792969 8.105469 19.929688 8.472656 19.929688 C 8.835938 19.929688 9.167969 19.792969 9.414062 19.566406 L 14.511719 14.644531 C 14.753906 14.410156 14.90625 14.089844 14.90625 13.730469 C 14.90625 13.375 14.753906 13.054688 14.511719 12.820312 L 12.964844 11.324219 C 12.839844 11.203125 12.761719 11.039062 12.761719 10.855469 C 12.761719 10.488281 13.070312 10.1875 13.449219 10.1875 Z M 17.082031 3.976562 C 17.082031 3.976562 17.085938 3.976562 17.085938 3.976562 C 17.824219 3.976562 18.492188 4.261719 18.980469 4.722656 L 20.535156 6.203125 C 21.042969 6.679688 21.355469 7.34375 21.355469 8.082031 C 21.355469 8.792969 21.058594 9.441406 20.582031 9.914062 L 18.0625 12.402344 C 17.9375 12.527344 17.761719 12.605469 17.566406 12.605469 C 17.183594 12.605469 16.875 12.304688 16.875 11.9375 C 16.875 11.753906 16.949219 11.589844 17.070312 11.46875 L 19.605469 8.984375 C 19.847656 8.75 19.996094 8.429688 19.996094 8.070312 C 19.996094 7.714844 19.847656 7.394531 19.605469 7.160156 L 18.019531 5.667969 C 17.773438 5.445312 17.4375 5.304688 17.070312 5.300781 C 16.703125 5.304688 16.367188 5.453125 16.128906 5.691406 L 11.085938 10.667969 C 10.84375 10.898438 10.695312 11.222656 10.695312 11.578125 C 10.695312 11.933594 10.84375 12.257812 11.085938 12.488281 L 12.675781 13.980469 C 12.804688 14.101562 12.882812 14.273438 12.882812 14.457031 C 12.882812 14.828125 12.574219 15.128906 12.191406 15.128906 C 12.003906 15.128906 11.832031 15.054688 11.707031 14.9375 L 10.140625 13.457031 C 9.636719 12.980469 9.324219 12.316406 9.324219 11.582031 C 9.324219 10.863281 9.621094 10.214844 10.101562 9.742188 L 15.140625 4.765625 C 15.625 4.285156 16.304688 3.980469 17.054688 3.976562 Z M 17.082031 3.976562\")\n                .style(\"fill\", \"#ed4f2f\");\n\n            this.copyURIIcon.on(\"click\", function () {\n                copyToClipboard(node.iri);\n                removeMenuIfVisible();\n                actionsTip.hide();\n            }).on('mouseover', function () {\n                actionsTip.show(\"<div style='text-align: center;'><b>Copy to ClipBoard</b><br>\" + node.iri + \"</div>\");\n                $timeout.cancel(removeIconsTimer);\n                $timeout.cancel(showNodeTipAndIconsTimer);\n            }).on('mouseout', function () {\n                actionsTip.hide();\n                removeIconsTimer = $timeout(function () {\n                    removeMenuIfVisible();\n                }, 500);\n            });\n\n            this.closeIcon = d3.select('.menu-events').append(\"g\")\n                .attr(\"class\", \"close-icon\")\n                .attr(\"name\", \"remove\")\n                .attr(\"transform\", function () {\n                    return getPositionAndAngle(angle, node);\n                });\n            this.closeIcon.append(\"circle\")\n                .attr(\"cx\", 14)\n                .attr(\"cy\", 14)\n                .attr(\"r\", 13)\n                .style(\"fill\", \"#eee\");\n            this.closeIcon.append(\"path\")\n                .attr(\"d\", \"M14.94,14l5.87-5.87a.66.66,0,1,0-.94-.94L14,13.06,8.13,7.19a.66.66,0,0,0-.94.94L13.06,14,7.19,19.87a.66.66,0,1,0,.94.94L14,14.94l5.87,5.87a.66.66,0,1,0,.94-.94Z\")\n                .style(\"fill\", \"#ed4f2f\");\n\n            this.closeIcon.on(\"click\", function () {\n                hideNode(node);\n            }).on('mouseover', function () {\n                actionsTip.show(this.getAttribute(\"name\"));\n                $timeout.cancel(removeIconsTimer);\n                $timeout.cancel(showNodeTipAndIconsTimer);\n            }).on('mouseout', function () {\n                actionsTip.hide();\n                removeIconsTimer = $timeout(function () {\n                    removeMenuIfVisible();\n                }, 500);\n            });\n\n            this.animateMenu(node);\n        };\n\n        this.animateMenu = function (node) {\n            const animationDuration = 100;\n            const easeEffects = [\"linear\", \"quad\", \"cubic\", \"sin\", \"exp\", \"circle\", \"elastic\", \"back\", \"bounce\"]; // https://github.com/d3/d3-3.x-api-reference/blob/master/Transitions.md#easing\n            const easeEffect = easeEffects[3];\n            let delay = 0;\n            const dellayAddition = 35;\n            let angle = 20; // angle of the first icon 0 is at 12 o'clock\n\n            if (this.expandIcon) {\n                this.expandIcon\n                    .transition()\n                    .duration(animationDuration)\n                    .style(\"opacity\", 1)\n                    .ease(easeEffect)\n                    .attr(\"transform\", function () {\n                        return getPositionAndAngle(angle, node);\n                    })\n                    .delay(delay += dellayAddition);\n            }\n\n            if (this.collapseIcon) {\n                this.collapseIcon\n                    .transition()\n                    .duration(animationDuration)\n                    .style(\"opacity\", 1)\n                    .ease(easeEffect)\n                    .attr(\"transform\", function () {\n                        return getPositionAndAngle(angle, node);\n                    })\n                    .delay(delay += dellayAddition);\n            }\n\n            this.copyURIIcon\n                .transition()\n                .duration(animationDuration)\n                .style(\"opacity\", 1)\n                .ease(easeEffect)\n                .attr(\"transform\", function () {\n                    angle += 30;\n                    return getPositionAndAngle(angle, node);\n                })\n                .delay(delay += dellayAddition);\n\n            this.focusIcon\n                .transition()\n                .duration(animationDuration)\n                .style(\"opacity\", 1)\n                .ease(easeEffect)\n                .attr(\"transform\", function () {\n                    angle += 30;\n                    return getPositionAndAngle(angle, node);\n                })\n                .delay(delay += dellayAddition);\n\n\n            this.closeIcon\n                .transition()\n                .duration(animationDuration)\n                .style(\"opacity\", 1)\n                .ease(easeEffect)\n                .attr(\"transform\", function () {\n                    angle += 30;\n                    return getPositionAndAngle(angle, node);\n                })\n                .delay(delay += dellayAddition);\n\n            this.expandedState = true;\n        };\n    }\n\n    function Loader() {\n        this.state = false;\n\n        this.setLoadingState = function (state) {\n            this.state = state;\n        };\n\n        this.getLoadingState = function () {\n            return this.state;\n        };\n\n        this.init = function (node, parentNode) {\n            d3.select(parentNode).append(\"circle\")\n                .attr(\"cx\", function () {\n                    return node.x;\n                })\n                .attr(\"cy\", function () {\n                    return node.y;\n                })\n                .attr(\"class\", \"loader-container\")\n                .attr(\"r\", function () {\n                    return node.size;\n                })\n                .style(\"fill\", \"fff\")\n                .style(\"opacity\", \"0.7\");\n\n            d3.select(parentNode).append(\"image\")\n                .attr(\"xlink:href\", \"js/angular/templates/loader/ot-loader.svg?v=1.10.2\")\n                .attr(\"x\", function () {\n                    return node.x - node.size + 5;\n                })\n                .attr(\"y\", function () {\n                    return node.y - node.size;\n                })\n                .attr(\"width\", function () {\n                    return node.size * 2;\n                })\n                .attr(\"height\", function () {\n                    return node.size * 2;\n                })\n                .attr(\"class\", \"node-loader\");\n        };\n    }\n\n    function showNodeInfo(d) {\n        force.stop();\n        // Assign value of node, which info panel has been opened\n        $scope.openedNodeInfoPanel = d;\n        $scope.showNodeInfo = true;\n        $scope.showFilter = false;\n        $scope.showPredicates = false;\n        $scope.nodeLabels = d.labels;\n        $scope.nodeTypes = d.types;\n        $scope.rdfRank = d.rdfRank;\n        $scope.nodeIri = d.iri;\n        $scope.encodedIri = encodeURI(d.iri);\n        $scope.showInfoPanel = true;\n\n        $scope.rdfsLabel = d.labels[0].label;\n        $scope.rdfsComment = d.comment;\n        $scope.expanded = false;\n\n        $scope.propertiesQueryObj.query = '';\n        $scope.dataNodeKeysQuery = '';\n        $http.get('rest/explore-graph/properties', {\n            params: {\n                iri: d.iri,\n                config: $scope.configLoaded.id,\n                languages: !$scope.shouldShowSettings() ? [] : $scope.saveSettings['languages'],\n                includeInferred: $scope.saveSettings['includeInferred'],\n                sameAsState: $scope.saveSettings['sameAsState'],\n                rejectedPredicates: !$scope.shouldShowSettings() ? [] : $scope.saveSettings['rejectedPredicates']\n            }\n        }).then(function (response) {\n            $scope.data = _.mapKeys(response.data, function (value, key) {\n                return $scope.replaceIRIWithPrefix(key);\n            });\n            $scope.propertiesObj.items = [];\n\n            _.forEach($scope.data, function (value, key) {\n                $scope.propertiesObj.items.push({key: key, value: value});\n            });\n            $scope.nodeImage = undefined;\n\n            $scope.propertiesNotFiltered = $scope.propertiesObj.items;\n\n            const imageVal = _.find($scope.propertiesObj.items, function (o) {\n                return o.key === 'image';\n            });\n            if (imageVal) {\n                $scope.nodeImage = imageVal['value'][0].v;\n            }\n            $scope.propertiesObj.items = _.reject($scope.propertiesObj.items, function (o) {\n                return o.key === 'image';\n            });\n            $scope.propertiesNotFiltered = $scope.propertiesObj.items;\n        }, function (response) {\n            toastr.warning(getError(response.data), \"Error\");\n        });\n    }\n\n    $scope.toggleSidePanel = function () {\n        $scope.pageslideExpanded = !$scope.pageslideExpanded;\n    };\n\n    $scope.closeInfoPanel = function () {\n        $scope.pageslideExpanded = false;\n        $scope.openedNodeInfoPanel = undefined;\n        // o, angular, o, miracle\n        $timeout(function () {\n            $scope.showInfoPanel = false;\n        });\n    };\n\n    // open predicates sidebar if they are more than one\n    function openPredicates(d) {\n        $scope.showNodeInfo = false;\n        $scope.showPredicates = true;\n        $scope.showFilter = false;\n\n        if (d.predicates.length > 1) {\n            $scope.predicates = _.map(d.predicates, function (p) {\n                return getShortPredicate(p);\n            });\n            $scope.showInfoPanel = true;\n        }\n    }\n\n    // get each predicate and check if there are more than one for same source and target\n    function getPredicate(d) {\n        if (d.predicates.length > 1) {\n            return d.predicates.length + \" predicates\";\n        }\n        return getShortPredicate(d.predicates[0]);\n    }\n\n    function getShortPredicate(p) {\n        const shortIRI = $scope.replaceIRIWithPrefix(p);\n        if (shortIRI.length === p.length) {\n            return p.split('/')[p.split('/').length - 1];\n        } else {\n            return shortIRI;\n        }\n    }\n\n    // calculate predicate text length so we can have dynamic link lengths\n    function getPredicateTextLength(link) {\n        const span = $('<span></span>');\n        const splitedLink = link.predicates[0].split('/');\n        const predicateText = splitedLink[splitedLink.length - 1];\n        span.addClass('predicate-text').text(predicateText);\n        $('body').append(span);\n        const textLength = span.width() + link.source.size * 2 + link.target.size * 2 + 50;\n        span.remove();\n        return textLength * 0.75;\n    }\n\n    $scope.splitPredicate = function (predicate) {\n        return predicate.split('/')[predicate.split('/').length - 1];\n    };\n\n    $scope.getActiveRepository = function () {\n        return $repositories.getActiveRepository();\n    };\n\n    $scope.isLoadingLocation = function () {\n        return $repositories.isLoadingLocation();\n    };\n\n    $scope.hasActiveLocation = function () {\n        return $repositories.hasActiveLocation();\n    };\n\n    $scope.rotate = function (isLeft) {\n        removeMenuIfVisible();\n\n        // compute common rotation math such as the angle, its sine and cosine and the pivot point\n        const theta = (isLeft ? 1 : -1) * 2 * Math.PI / 180; // + rotates left, - rotates right\n        const cos = Math.cos(theta);\n        const sin = Math.sin(theta);\n        const pivotX = width / 2; // i.e. centre of viewport\n        const pivotY = height / 2;\n\n        // rotates each node around the pivot\n        d3.selectAll(\".node-wrapper\")\n            .each(function (d) {\n                d.x = pivotX + (cos * (d.x - pivotX) + sin * (d.y - pivotY));\n                d.y = pivotY + (-sin * (d.x - pivotX) + cos * (d.y - pivotY));\n                if (d.fixed) {\n                    // Fixed nodes need their px and py updated too\n                    d.px = d.x;\n                    d.py = d.y;\n                }\n            });\n\n        force.resume();\n    };\n\n    $scope.openUri = function (uri, noHistory) {\n        if (!noHistory) {\n            const searchParams = {};\n            if ($scope.configLoaded.id !== $scope.defaultGraphConfig.id) {\n                searchParams.config = $scope.configLoaded.id;\n            }\n            searchParams.uri = uri;\n            $scope.pushHistory(searchParams, {uri: uri, config: $scope.configLoaded});\n        }\n        $scope.$broadcast(\"onRootNodeChange\", uri);\n    };\n\n    function saveGraphHttp(graph) {\n        if ($scope.configLoaded) {\n            graph.config = $scope.configLoaded.id;\n        }\n        SavedGraphsRestService.addNewSavedGraph(graph)\n            .success(function (data, status, headers) {\n                $scope.lastSavedGraphName = graph.name;\n                $scope.lastSavedGraphId = headers()['x-saved-graph-id'];\n                $scope.shared = graph.shared;\n                $scope.refreshSavedGraphs();\n                toastr.success('Saved graph ' + graph.name + ' was saved.');\n            })\n            .error(function (data, status) {\n                if (status === 422) {\n                    $scope.saveGraphModal('new', graph, true);\n                } else {\n                    const msg = getError(data);\n                    toastr.error(msg, 'Error! Cannot create saved graph');\n                }\n            });\n    }\n\n    $scope.saveOrUpdateGraph = function () {\n        const data = JSON.stringify(graph.copyState());\n        const graphToSave = {id: $scope.lastSavedGraphId, name: $scope.lastSavedGraphName, data: data, shared: $scope.shared};\n\n        if (graphToSave.id) {\n            $scope.saveGraphModal('update', graphToSave);\n        } else {\n            $scope.saveGraphModal('new', graphToSave);\n        }\n    };\n\n    $scope.renameSavedGraph = function (graphToRename) {\n        // By not sending the 'data' part of a graph we only change the name\n        $scope.saveGraphModal('rename', {id: graphToRename.id, name: graphToRename.name, config: graphToRename.config, shared: graphToRename.shared});\n    };\n\n    const editSavedGraphHttp = function (savedGraph) {\n        SavedGraphsRestService.editSavedGraph(savedGraph)\n            .success(function () {\n                $scope.lastSavedGraphName = savedGraph.name;\n                $scope.shared = savedGraph.shared;\n                $scope.refreshSavedGraphs();\n                toastr.success('Saved graph ' + savedGraph.name + ' was edited.');\n            })\n            .error(function (data) {\n                const msg = getError(data);\n                toastr.error(msg, 'Error! Cannot edit saved graph');\n            });\n    };\n\n    $scope.saveGraphModal = function (mode, graphToSave, graphExists) {\n        const modalInstance = $modal.open({\n            templateUrl: 'js/angular/graphexplore/templates/modal/save-graph.html',\n            controller: 'SaveGraphModalCtrl',\n            resolve: {\n                data: function () {\n                    return {\n                        mode: mode,\n                        graph: graphToSave,\n                        graphExists: graphExists,\n                        shared: graphToSave.shared\n                    };\n                }\n            }\n        });\n\n        modalInstance.result.then(function (data) {\n            if (data.restart) {\n                $scope.saveGraphModal(data.mode, data.graph, false);\n                return;\n            }\n            switch (data.mode) {\n                case 'new':\n                    saveGraphHttp(data.graph);\n                    break;\n                case 'update':\n                    editSavedGraphHttp(data.graph);\n                    break;\n                case 'rename':\n                    editSavedGraphHttp(data.graph);\n                    break;\n            }\n        });\n    };\n\n    $scope.refreshSavedGraphs = function () {\n        SavedGraphsRestService.getSavedGraphs()\n            .success(function (data) {\n                $scope.savedGraphs = data;\n            })\n            .error(function (data) {\n                const msg = getError(data);\n                toastr.error(msg, 'Error! Could not get saved graphs');\n            });\n    };\n\n\n    $scope.loadSavedGraph = function (graphToLoad, noHistory) {\n        if (graphToLoad.owner) {\n            // Own saved graph\n            $scope.lastSavedGraphName = graphToLoad.name;\n            $scope.lastSavedGraphId = graphToLoad.id;\n            $scope.shared = graphToLoad.shared;\n            $scope.configLoaded = $scope.findConfigById(graphToLoad.config);\n        } else {\n            // Someone else's saved graph\n            $scope.lastSavedGraphName = null;\n            $scope.lastSavedGraphId = null;\n            $scope.shared = graphToLoad.shared;\n        }\n\n        if (!$scope.configLoaded) {\n            // Fallback to default config, either because config is gone or because graph isn't owned\n            $scope.configLoaded = $scope.defaultGraphConfig;\n        }\n\n        graph.restoreState(JSON.parse(graphToLoad.data));\n        if (!noHistory) {\n            $scope.pushHistory({saved: graphToLoad.id}, {savedGraph: graphToLoad});\n        }\n    };\n\n    $scope.copyToClipboardSavedGraph = function (savedGraph) {\n        const url = [location.protocol, '//', location.host, location.pathname, '?saved=', savedGraph.id].join('');\n        copyToClipboard(url);\n    };\n\n    function deleteSavedGraphHttp(savedGraph) {\n        SavedGraphsRestService.deleteSavedGraph(savedGraph)\n            .success(function () {\n                $scope.refreshSavedGraphs();\n                toastr.success('Saved graph ' + savedGraph.name + ' was deleted.');\n            })\n            .error(function (data) {\n                const msg = getError(data);\n                toastr.error(msg, 'Error! Cannot delete saved graph');\n            });\n    }\n\n    $scope.deleteSavedGraph = function (savedGraph) {\n        ModalService.openSimpleModal({\n            title: 'Confirm',\n            message: 'Are you sure you want to delete the saved graph ' + '\\'' + savedGraph.name + '\\'?',\n            warning: true\n        }).result\n            .then(function () {\n                deleteSavedGraphHttp(savedGraph);\n            });\n    };\n\n    $scope.openIRI = function (link, event) {\n        if (event.shiftKey) {\n            $scope.$broadcast(\"onRootNodeChange\", link);\n        } else {\n            window.open(link, '_blank');\n        }\n        return false;\n    };\n\n    $scope.togglePinAllNodes = function () {\n        removeMenuIfVisible();\n\n        const value = $scope.numberOfPinnedNodes <= 0;\n\n        $scope.numberOfPinnedNodes = 0;\n        d3.selectAll('.node').each(function (d) {\n            d.fixed = value;\n            if (value) {\n                $scope.numberOfPinnedNodes++;\n            }\n        });\n\n        force.resume();\n    };\n\n    // event for capturing left and right arrows used for rotation\n    $('body').on(\"keydown\", function (event) {\n        if (event.target.nodeName === 'input' || !$scope.nodeSelected) {\n            // don't do anything when the target is an input field or no node is selected\n        } else if (event.keyCode === 37) {\n            // left arrow rotates left\n            $scope.rotate(true);\n        } else if (event.keyCode === 39) {\n            // right arrow rotates right\n            $scope.rotate(false);\n        }\n    });\n\n    $scope.getLiteralFromPropValue = function (value) {\n        return value.substring(value.indexOf(':') + 1);\n    }\n}\n\nSaveGraphModalCtrl.$inject = ['$scope', '$modalInstance', 'data'];\n\nfunction SaveGraphModalCtrl($scope, $modalInstance, data) {\n    $scope.mode = data.mode;\n    $scope.graph = angular.copy(data.graph);\n    $scope.graphExists = data.graphExists;\n\n    switch ($scope.mode) {\n        case 'new':\n            $scope.title = 'Create new saved graph';\n            $scope.okButtonText = 'Create';\n            break;\n        case 'update':\n            $scope.title = 'Update saved graph';\n            $scope.okButtonText = 'Save';\n            break;\n        case 'rename':\n            $scope.title = 'Rename saved graph';\n            $scope.okButtonText = 'Save';\n    }\n\n    $scope.ok = function () {\n        if ($scope.form.$valid) {\n            $modalInstance.close({graph: $scope.graph, mode: $scope.mode});\n        }\n    };\n\n    $scope.saveNew = function () {\n        $scope.graph.name = $scope.graph.name + ' (new)';\n        $modalInstance.close({graph: $scope.graph, mode: 'new', restart: true});\n    };\n\n    $scope.cancel = function () {\n        $modalInstance.dismiss('cancel');\n    };\n}\n"],"sourceRoot":""}