{"version":3,"sources":["webpack:///./src/js/angular/core/directives/queryeditor/sparql-tab.directive.js"],"names":["sparqlTabDirective","$rootScope","LocalStorageAdapter","LSKeys","ModalService","restrict","template","replace","controller","$scope","$element","toastr","getQueryID","element","$","attr","selectTab","id","tab","state","on","e","$broadcast","deleteTab","preventDefault","stopPropagation","tabs","length","warning","shiftKey","selectedTabId","openSimpleModal","title","message","result","then","filter","obj","set","TABS_STATE","idForDelete","angular","isUndefined","idx","i","findTabIndexByID","splice","currentQuery","deleteTabByID","document","find","focus","editCurrentTab","editCurrentlySelectedOnly","$show","$editableButtons","children","addClass","$el","name","currentTarget","$$currentValue","removeClass","selectThisTab","isTabChangeOk","module","directive","$inject"],"mappings":"0FAAA,YAWA,SAASA,EAAmBC,EAAYC,EAAqBC,EAAQC,GA4HjE,MAAO,CACHC,SAAU,KAEVC,SAAU,wbACVC,SAAS,EACTC,WAhIkB,CAAC,SAAU,WAAY,aAAc,eAAgB,SAAU,SAAUC,EAAQC,EAAUT,EAAYG,EAAcO,GAGvI,SAASC,EAAWC,GAChB,OAAOC,EAAED,GAASE,KAAK,WA4B3B,SAASC,EAAUC,GACfH,EAAE,gBAAkBG,EAAK,MAAMC,IAAI,QAhCvCT,EAAOU,MAAQ,GAefL,EAAEJ,GAAUU,GAAG,gBAAgB,SAAUC,GACrCpB,EAAWqB,WAAW,YAAaD,MAGvCZ,EAAOc,UAgBP,SAAmBF,GAIf,GAHAA,EAAEG,iBACFH,EAAEI,kBAEEhB,EAAOiB,KAAKC,OAAS,EAErB,YADAhB,EAAOiB,QAAQ,8BAIfP,EAAEQ,UACFpB,EAAOU,MAAMW,cAAgBlB,EAAWF,GAExCN,EAAa2B,gBAAgB,CACzBC,MAAO,UACPC,QAAS,sEACTL,SAAS,IACVM,OAAOC,MAAK,WA2DvB,IAAqClB,IA1DGR,EAAOU,MAAMW,cA2DjDrB,EAAOiB,KAAOjB,EAAOiB,KAAKU,QAAO,SAAUC,GACvC,GAAIA,EAAIpB,KAAOA,EACX,OAAOoB,KAGfrB,EAAUP,EAAOiB,KAAK,GAAGT,IACzBf,EAAoBoC,IAAInC,EAAOoC,WAAY9B,EAAOiB,MAClDzB,EAAWqB,WAAW,yBAA0Bb,EAAOiB,WA/DnDjB,EAAOU,MAAMqB,YAAc5B,EAAWF,GAEtCN,EAAa2B,gBAAgB,CACzBC,MAAO,UACPC,QAAS,iDACTL,SAAS,IACVM,OAAOC,MAAK,YA6BvB,SAAuBlB,GACnB,GAAIwB,QAAQC,YAAYzB,GACpB,KAAM,4CAEV,MAAM0B,EAxFV,SAA0B1B,GACtB,IAAK,IAAI2B,EAAI,EAAGA,EAAInC,EAAOiB,KAAKC,OAAQiB,IAAK,CAEzC,GADYnC,EAAOiB,KAAKkB,GAChB3B,KAAOA,EACX,OAAO2B,GAoFHC,CAAiB5B,GAC7BR,EAAOiB,KAAKoB,OAAOH,EAAK,GAEpB1B,IAAOR,EAAOsC,aAAa9B,IACvBR,EAAOiB,KAAKC,OAAS,GAGjBX,EAFA2B,EAAM,EAEIlC,EAAOiB,KAAKiB,EAAM,GAAG1B,GAGrBR,EAAOiB,KAAK,GAAGT,IA1C7B+B,CAAcvC,EAAOU,MAAMqB,iBAGnCC,QAAQ5B,QAAQoC,UAAUC,KAAK,oCAAoCC,SA7CvE1C,EAAO2C,eAgDP,WACI,GAAIxC,EAAWF,KAAcD,EAAOsC,aAAa9B,GAC7C,OAEJR,EAAO4C,0BAA0BC,QAEjC,MAAMC,EAAmBzC,EAAE,qBAC3ByC,EAAiBC,SAAS,oBAAoBC,SAAS,UACvDF,EAAiBC,SAAS,oBAAoBC,SAAS,UACvD3C,EAAE,sCAAsC2C,SAAS,mBAAmBrC,GAAG,UAAU,SAAUsC,GACvFjD,EAAOsC,aAAaY,KAAOD,EAAIE,cAAcC,kBAIjD/C,EAAE,6CACGgD,YAAY,0BACZL,SAAS,eACd3C,EAAE,iDACGgD,YAAY,8BACZL,SAAS,gBAlElBhD,EAAOsD,cAEP,SAAuB1C,GACnBA,EAAEG,iBACFH,EAAEI,kBACEhB,EAAOuD,eAAc,IACrBlD,EAAEJ,GAAUQ,IAAI,YAtChCuB,QACKwB,OAAO,0DAA2D,CAC/D,yBACA,gDAEHC,UAAU,YAAalE,GAE5BA,EAAmBmE,QAAU,CAAC,aAAc,sBAAuB,SAAU","file":"49.6c583711d67ac71bdec0.bundle.js","sourcesContent":["import 'angular/utils/local-storage-adapter';\n\nangular\n    .module('graphdb.framework.core.directives.queryeditor.sparqltab', [\n        'graphdb.framework.core',\n        'graphdb.framework.utils.localstorageadapter'\n    ])\n    .directive('sparqlTab', sparqlTabDirective);\n\nsparqlTabDirective.$inject = ['$rootScope', 'LocalStorageAdapter', 'LSKeys', 'ModalService'];\n\nfunction sparqlTabDirective($rootScope, LocalStorageAdapter, LSKeys, ModalService) {\n    const SparqlTabCtrl = ['$scope', '$element', '$rootScope', 'ModalService', 'toastr', function ($scope, $element, $rootScope, ModalService, toastr) {\n        $scope.state = {};\n\n        function getQueryID(element) {\n            return $(element).attr('data-id');\n        }\n\n        function findTabIndexByID(id) {\n            for (let i = 0; i < $scope.tabs.length; i++) {\n                const tab = $scope.tabs[i];\n                if (tab.id === id) {\n                    return i;\n                }\n            }\n        }\n\n        $($element).on('shown.bs.tab', function (e) {\n            $rootScope.$broadcast('tabAction', e);\n        });\n\n        $scope.deleteTab = deleteTab;\n        $scope.editCurrentTab = editCurrentTab;\n        $scope.selectThisTab = selectThisTab;\n\n        function selectThisTab(e) {\n            e.preventDefault();\n            e.stopPropagation();\n            if ($scope.isTabChangeOk(false)) {\n                $($element).tab('show');\n            }\n        }\n\n        function selectTab(id) {\n            $('a[data-id = \"' + id + '\"]').tab('show');\n        }\n\n        function deleteTab(e) {\n            e.preventDefault();\n            e.stopPropagation();\n\n            if ($scope.tabs.length < 2) {\n                toastr.warning('Last tab must remain open.');\n                return;\n            }\n\n            if (e.shiftKey) {\n                $scope.state.selectedTabId = getQueryID($element);\n\n                ModalService.openSimpleModal({\n                    title: 'Confirm',\n                    message: 'Are you sure you want to delete all query tabs except selected tab?',\n                    warning: true\n                }).result.then(function () {\n                    deleteAllTabsExceptSelected($scope.state.selectedTabId);\n                });\n            } else {\n                $scope.state.idForDelete = getQueryID($element);\n\n                ModalService.openSimpleModal({\n                    title: 'Confirm',\n                    message: 'Are you sure you want to close this query tab?',\n                    warning: true\n                }).result.then(function () {\n                    deleteTabByID($scope.state.idForDelete);\n                });\n            }\n            angular.element(document).find('.CodeMirror textarea:first-child').focus();\n        }\n\n        function editCurrentTab() {\n            if (getQueryID($element) !== $scope.currentQuery.id) {\n                return;\n            }\n            $scope.editCurrentlySelectedOnly.$show();\n            //fix for buttons for edit\n            const $editableButtons = $(\".editable-buttons\");\n            $editableButtons.children(\".btn.btn-primary\").addClass('btn-sm');\n            $editableButtons.children(\".btn.btn-default\").addClass('btn-sm');\n            $('.editable-controls .editable-input').addClass('form-control-sm').on('change', function ($el) {\n                $scope.currentQuery.name = $el.currentTarget.$$currentValue;\n            });\n            //$('.editable-buttons').css('margin-top', '5px');\n            //$('.editable-input.editable-has-buttons').css('width', '50%');\n            $('.editable-buttons .glyphicon.glyphicon-ok')\n                .removeClass('glyphicon glyphicon-ok')\n                .addClass('fa fa-check');\n            $('.editable-buttons .glyphicon.glyphicon-remove')\n                .removeClass('glyphicon glyphicon-remove')\n                .addClass('fa fa-close');\n        }\n\n        function deleteTabByID(id) {\n            if (angular.isUndefined(id)) {\n                throw 'Delete by id was called with undefined id';\n            }\n            const idx = findTabIndexByID(id);\n            $scope.tabs.splice(idx, 1);\n\n            if (id === $scope.currentQuery.id) {\n                if ($scope.tabs.length > 0) {\n                    if (idx > 0) {\n                        // select previous tab if we deleted any but the first tab\n                        selectTab($scope.tabs[idx - 1].id);\n                    } else {\n                        // select first tab if we deleted the first tab\n                        selectTab($scope.tabs[0].id);\n                    }\n                }\n            }\n        }\n\n        function deleteAllTabsExceptSelected(id) {\n            $scope.tabs = $scope.tabs.filter(function (obj) {\n                if (obj.id === id) {\n                    return obj;\n                }\n            });\n            selectTab($scope.tabs[0].id);\n            LocalStorageAdapter.set(LSKeys.TABS_STATE, $scope.tabs);\n            $rootScope.$broadcast('deleteAllexeptSelected', $scope.tabs);\n        }\n    }];\n\n    return {\n        restrict: 'AE',\n        // for some reason when you extract this template in a file and use templateUrl it selects all tabs when editing the tab name, not only the currently selected one\n        template: '<a class=\"nav-link\" role=\"tab\" data-toggle=\"tab\" blur=\"submit\" editable-text=\"tab.name\" e-form=\"editCurrentlySelectedOnly\" ng-click=\"selectThisTab($event)\" ng-dblclick=\"editCurrentTab()\" ><span ng-class=\"{\\'text-muted\\': !tab.name}\">{{ tab.name || \\'Unnamed\\'}}</span><button type=\"button\" ng-click=\"deleteTab($event)\" class=\"btn btn-link btn-sm secondary delete-sparql-tab-btn\" title=\"Delete tab\"><i class=\"icon-close\"></i></button></a>',\n        replace: true,\n        controller: SparqlTabCtrl\n    };\n}\n"],"sourceRoot":""}