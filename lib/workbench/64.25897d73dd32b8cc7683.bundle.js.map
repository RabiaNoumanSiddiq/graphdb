{"version":3,"sources":["webpack:///./src/js/angular/graphexplore/services/rdfs-label-comment.service.js"],"names":["angular","module","factory","processAndFilterLabelAndComment","response","processKeysWithColon","obj","newObj","k","hasOwnProperty","origKey","indexOf","split","toLowerCase","results","bindings","labels","comments","_","each","value","processedObj","isUndefined","label","push","comment","langFilter","item","lang","filteredRdfsLabel","$","grep","filteredRdfsComment","rdfsLabel","length","undefined","rdfsComment"],"mappings":"2EAAAA,QACKC,OAAO,sDAAuD,IAC9DC,QAAQ,2BAEb,WACI,MAAO,CACHC,gCAGJ,SAAyCC,GACrC,SAASC,EAAqBC,GAC1B,MAAMC,EAAS,GACf,IAAK,IAAIC,KAAKF,EACV,GAAIA,EAAIG,eAAeD,GAAI,CACvB,IAAIE,EAAUF,EACVA,EAAEG,QAAQ,MAAQ,IAClBD,EAAUF,EACVA,EAAIA,EAAEI,MAAM,KAAK,GAAGC,eAExBN,EAAOC,GAAKF,EAAII,GAGxB,OAAOH,EAGX,MAAMO,EAAUV,EAASU,QAAQC,SAC3BC,EAAS,GACTC,EAAW,GACjBC,EAAEC,KAAKL,GAAS,SAAUM,GACtB,IAAIC,EACCrB,QAAQsB,YAAYF,EAAMG,SAC3BF,EAAehB,EAAqBe,EAAMG,OAC1CP,EAAOQ,KAAKH,IAGXrB,QAAQsB,YAAYF,EAAMK,WAC3BJ,EAAehB,EAAqBe,EAAMK,SAC1CR,EAASO,KAAKH,OAItB,MAAMK,EAAa,SAAUC,GACzB,MAAqB,OAAdA,EAAKC,MAA+B,OAAdD,EAAKC,MAGhCC,EAAoBC,EAAEC,KAAKf,EAAQU,GAAY,GAC/CM,EAAsBF,EAAEC,KAAKd,EAAUS,GAAY,GAEnDO,EAAajC,QAAQsB,YAAYO,GAEjCb,EAAOkB,OAAS,EACZlB,EAAO,GAAGI,WACVe,EAHJN,EAAkBT,MAKlBgB,EAAepC,QAAQsB,YAAYU,GAEnCf,EAASiB,OAAS,EACdjB,EAAS,GAAGG,WACZe,EAHJH,EAAoBZ,MAK1B,MAAO,CACHa,UAAWA,EACXG,YAAaA","file":"64.25897d73dd32b8cc7683.bundle.js","sourcesContent":["angular\n    .module('graphdb.framework.graphexplore.services.rdfsdetails', [])\n    .factory('RdfsLabelCommentService', RdfsLabelCommentService);\n\nfunction RdfsLabelCommentService() {\n    return {\n        processAndFilterLabelAndComment: processAndFilterLabelAndComment\n    };\n\n    function processAndFilterLabelAndComment(response) {\n        function processKeysWithColon(obj) {\n            const newObj = {};\n            for (let k in obj) {\n                if (obj.hasOwnProperty(k)) {\n                    let origKey = k;\n                    if (k.indexOf(':') > -1) {\n                        origKey = k;\n                        k = k.split(':')[1].toLowerCase();\n                    }\n                    newObj[k] = obj[origKey];\n                }\n            }\n            return newObj;\n        }\n\n        const results = response.results.bindings;\n        const labels = [];\n        const comments = [];\n        _.each(results, function (value) {\n            let processedObj;\n            if (!angular.isUndefined(value.label)) {\n                processedObj = processKeysWithColon(value.label);\n                labels.push(processedObj);\n            }\n\n            if (!angular.isUndefined(value.comment)) {\n                processedObj = processKeysWithColon(value.comment);\n                comments.push(processedObj);\n            }\n        });\n\n        const langFilter = function (item) {\n            return item.lang === 'en' || item.lang === 'de';\n        };\n\n        const filteredRdfsLabel = $.grep(labels, langFilter)[0];\n        const filteredRdfsComment = $.grep(comments, langFilter)[0];\n\n        const rdfsLabel = !angular.isUndefined(filteredRdfsLabel)\n            ? filteredRdfsLabel.value\n            : labels.length > 0\n                ? labels[0].value\n                : undefined;\n\n        const rdfsComment = !angular.isUndefined(filteredRdfsComment)\n            ? filteredRdfsComment.value\n            : comments.length > 0\n                ? comments[0].value\n                : undefined;\n\n        return {\n            rdfsLabel: rdfsLabel,\n            rdfsComment: rdfsComment\n        };\n    }\n}\n"],"sourceRoot":""}