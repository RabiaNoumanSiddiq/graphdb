{"version":3,"sources":["webpack:///./src/js/angular/repositories/controllers.js","webpack:///./src/js/angular/repositories/repository.constants.js"],"names":["getFileName","path","lastIdx","lastIndexOf","name","substring","parseNumberParamsIfNeeded","params","queryTimeout","value","parseInt","queryLimitResults","validationResultsLimitTotal","validationResultsLimitPerConstraint","leftJoinWorkerThreads","boundJoinBlockSize","joinWorkerThreads","unionWorkerThreads","parseMemberParamIfNeeded","param","member","getShaclOptionsClass","optionsModule","document","getElementById","isAriaExpanded","getAttribute","validateNumberFields","invalidValues","isInvalidQueryTimeout","test","isInvalidValidationResultsLimitTotal","isInvalidValidationResultsLimitPerConstraint","isInvalidQueryLimit","isInvalidLeftJoinWorkerThreads","isInvalidBoundJoinBlockSize","isInvalidJoinWorkerThreads","isInvalidUnionWorkerThreads","checkInvalidValues","invalidValuesKeys","Object","keys","invalidValuesVal","values","i","length","getDocBase","productInfo","productShortVersion","productType","LocationsAndRepositoriesCtrl","$scope","$modal","toastr","$repositories","ModalService","$jwtAuth","LocationsRestService","LocalStorageAdapter","$interval","loader","isLocationInactive","location","active","hasActiveLocation","getLocations","getActiveLocation","getLocationError","getDegradedReason","getRepositories","deleteLocation","uri","openSimpleModal","title","message","warning","result","then","addLocationHttp","dataAddLocation","addLocation","success","data","locations","init","error","msg","getError","open","templateUrl","windowClass","controller","editLocationHttp","dataEditLocation","editLocation","resolve","activateLocationRequest","enableLocation","setRepository","$$hashKey","checked","activateLocation","id","deleteRepository","repositoryId","repoId","cashedDependenciesGraphPrefix","cashedClassHierarchyGraphPrefix","angular","forEach","key","startsWith","remove","removeCachedGraphsOnDelete","restartRepository","toggleDefaultRepository","getDefaultRepository","setDefaultRepository","getRepositoryDownloadLink","repository","url","type","ontop","token","getAuthToken","encodeURIComponent","copyToClipboard","openCopyToClipboardModal","fromFile","openActiveLocationSettings","timer","initQuick","$on","cancel","UploadRepositoryConfigCtrl","$modalInstance","Upload","upload","files","uploadFile","ok","uploadFileLoader","method","config","close","dismiss","AddLocationCtrl","newLocation","docBase","isValidLocation","indexOf","EditLocationCtrl","editedLocation","copy","ChooseRepositoryCtrl","$location","isEnterprise","isFreeEdition","pageTitle","repositoryTypes","chooseRepositoryType","repoType","AddRepositoryCtrl","$timeout","$routeParams","RepositoriesRestService","repositoryType","rulesets","slice","repoTooltips","enable","repositoryInfo","getConfig","getRepositoryConfiguration","element","find","focus","eeMaster","eeWorker","isValidEERepository","se","isValidSERepository","free","isValidFRRepository","isValidOntopRepository","fedx","isValidFedXRepository","setPageTitle","activeLocation","isInvalidPieFile","uploadRuleset","ruleset","progress","evt","fileName","newValue","fileLocation","rulesetPie","unshift","rulesetPieFile","errorMessage","noMembersError","goBackToPreviousLocation","isDefined","previous","$$search","createRepoHttp","createRepository","createRepo","isInvalidRepoName","rulesetWarning","pp","undefined","disableSameAs","rulesetWarnings","needsSameAs","doesntNeedSameAs","customRuleset","validateNumberInput","autofocusId","EditRepositoryFileCtrl","file","getRepositoryFileContent","fileContent","content","EditRepositoryCtrl","editRepoPage","canEditRepoId","restartRequested","saveRepoId","$watch","getRepository","ifRulesetExists","item","setRepositoryType","saveId","status","allowHtml","editRepoHttp","editRepository","modalMsg","editRepositoryId","module","$inject","STATIC_RULESETS","REPOSITORY_TYPES","FILENAME_PATTERN","RegExp","NUMBER_PATTERN","REPO_TOOLTIPS","readOnly","checkForInconsistencies","isShacl","shaclOptions","cacheSelectNodes","undefinedTargetValidatesAllSubjects","logValidationPlans","logValidationViolations","parallelValidation","globalLogValidationExecution","performanceLogging","eclipseRdf4jShaclExtensions","dashDataShapes","entityIdSize","enableContextIndex","enablePredicateList","throwQueryEvaluationExceptionOnTimeout","nonInterpretablePredicates","driverType","propertiesFile","hostName","port","portIfRequired","databaseName","userName","password","driverClass","driverClassWarning","obdaFile","owlFile","constraintFile","testConn","repositoryNotExistWarning","localReposInstructions","withLogQueries","withDebugQueryPlan","enforceMaxQueryTime","withIncludeInferredDefault","withBoundJoinBlockSize","withJoinWorkerThreads","withLeftJoinWorkerThreads","withLogQueryPlan","withEnableServiceAsBoundJoin","withSourceSelectionCacheSpec","removeMember","setAsWritable"],"mappings":"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","file":"5.ff72fb5966daca374950.bundle.js","sourcesContent":["import {\n    FILENAME_PATTERN,\n    NUMBER_PATTERN,\n    REPO_TOOLTIPS,\n    REPOSITORY_TYPES,\n    STATIC_RULESETS\n} from \"./repository.constants\";\n\nexport const getFileName = function(path) {\n    let lastIdx = path.lastIndexOf('/');\n    if (lastIdx === -1) {\n        lastIdx = path.lastIndexOf('\\\\');\n    }\n    let name = path;\n    if (lastIdx !== -1) {\n        name = name.substring(lastIdx + 1);\n    }\n    return name;\n};\n\nconst parseNumberParamsIfNeeded = function (params) {\n    if (params) {\n        if (params.queryTimeout) {\n            params.queryTimeout.value = parseInt(params.queryTimeout.value);\n        }\n        if (params.queryLimitResults && params.validationResultsLimitTotal && params.validationResultsLimitPerConstraint) {\n            // Parse parameters properly to number\n            params.queryLimitResults.value = parseInt(params.queryLimitResults.value);\n            params.validationResultsLimitTotal.value = parseInt(params.validationResultsLimitTotal.value);\n            params.validationResultsLimitPerConstraint.value = parseInt(params.validationResultsLimitPerConstraint.value);\n        } else if (params.leftJoinWorkerThreads && params.boundJoinBlockSize && params.joinWorkerThreads && params.unionWorkerThreads) {\n            params.leftJoinWorkerThreads.value = parseInt(params.leftJoinWorkerThreads.value);\n            params.boundJoinBlockSize.value = parseInt(params.boundJoinBlockSize.value);\n            params.joinWorkerThreads.value = parseInt(params.joinWorkerThreads.value);\n            params.unionWorkerThreads.value = parseInt(params.unionWorkerThreads.value);\n        }\n    }\n}\n\nconst parseMemberParamIfNeeded = function(param) {\n    if (param && param.member) {\n        param.member.value = [];\n    }\n}\n\nconst getShaclOptionsClass = function () {\n    const optionsModule = document.getElementById('shaclOptions');\n\n    if (optionsModule) {\n        const isAriaExpanded = optionsModule.getAttribute('aria-expanded');\n        if (isAriaExpanded && isAriaExpanded === 'true') {\n            return 'fa fa-angle-down';\n        }\n    }\n    return 'fa fa-angle-right';\n}\n\nconst validateNumberFields = function (params, invalidValues) {\n    if (params.queryTimeout) {\n        invalidValues.isInvalidQueryTimeout = !NUMBER_PATTERN.test(params.queryTimeout.value);\n    }\n    if (params.validationResultsLimitTotal && params.validationResultsLimitPerConstraint && params.queryLimitResults) {\n        invalidValues.isInvalidValidationResultsLimitTotal = !NUMBER_PATTERN.test(params.validationResultsLimitTotal.value);\n        invalidValues.isInvalidValidationResultsLimitPerConstraint = !NUMBER_PATTERN.test(params.validationResultsLimitPerConstraint.value);\n        invalidValues.isInvalidQueryLimit = !NUMBER_PATTERN.test(params.queryLimitResults.value);\n    }\n    else if (params.leftJoinWorkerThreads && params.boundJoinBlockSize && params.joinWorkerThreads\n        && params.unionWorkerThreads) {\n        invalidValues.isInvalidLeftJoinWorkerThreads = !NUMBER_PATTERN.test(params.leftJoinWorkerThreads.value);\n        invalidValues.isInvalidBoundJoinBlockSize = !NUMBER_PATTERN.test(params.boundJoinBlockSize.value);\n        invalidValues.isInvalidJoinWorkerThreads = !NUMBER_PATTERN.test(params.joinWorkerThreads.value);\n        invalidValues.isInvalidUnionWorkerThreads = !NUMBER_PATTERN.test(params.unionWorkerThreads.value);\n    }\n}\n\nconst getInvalidParameterErrorMessage = function(param) {\n    if(param === \"isInvalidQueryLimit\") {\n        return 'Invalid parameter query limit';\n    } else if (param === \"isInvalidQueryTimeout\") {\n        return 'Invalid parameter query timeout';\n    } else if (param === \"isInvalidValidationResultsLimitTotal\") {\n        return 'Invalid parameter validation results limit total';\n    } else if (param === \"isInvalidValidationResultsLimitPerConstraint\") {\n        return 'Invalid parameter validation results limit per constraint';\n    } else if (param === \"isInvalidJoinWorkerThreads\") {\n        return 'Invalid parameter join worker threads';\n    } else if (param === \"isInvalidLeftJoinWorkerThreads\") {\n        return 'Invalid parameter left join worker threads';\n    } else if (param === \"isInvalidUnionWorkerThreads\") {\n        return 'Invalid parameter union worker threads';\n    } else if (param === \"isInvalidBoundJoinBlockSize\") {\n        return 'Invalid parameter bound join block size';\n    }\n}\n\nconst checkInvalidValues = function(invalidValues) {\n    let invalidValuesKeys = Object.keys(invalidValues);\n    let invalidValuesVal = Object.values(invalidValues);\n\n    for (let i = 0; i < invalidValuesKeys.length; i++) {\n        if (invalidValuesVal[i]) {\n            return getInvalidParameterErrorMessage(invalidValuesKeys[i]);\n        }\n    }\n    return '';\n}\n\nconst getDocBase = function (productInfo) {\n    return `https://graphdb.ontotext.com/documentation/${productInfo.productShortVersion}/${productInfo.productType}`;\n}\n\nconst modules = [\n    'ngCookies',\n    'ui.bootstrap',\n    'graphdb.framework.core.services.repositories',\n    'graphdb.framework.utils.localstorageadapter',\n    'toastr',\n    'ngFileUpload'\n];\n\nangular.module('graphdb.framework.repositories.controllers', modules)\n    .controller('LocationsAndRepositoriesCtrl', LocationsAndRepositoriesCtrl)\n    .controller('AddLocationCtrl', AddLocationCtrl)\n    .controller('EditLocationCtrl', EditLocationCtrl)\n    .controller('ChooseRepositoryCtrl', ChooseRepositoryCtrl)\n    .controller('AddRepositoryCtrl', AddRepositoryCtrl)\n    .controller('EditRepositoryCtrl', EditRepositoryCtrl)\n    .controller('EditRepositoryFileCtrl', EditRepositoryFileCtrl)\n    .controller('UploadRepositoryConfigCtrl', UploadRepositoryConfigCtrl);\n\nLocationsAndRepositoriesCtrl.$inject = ['$scope', '$modal', 'toastr', '$repositories', 'ModalService', '$jwtAuth', 'LocationsRestService', 'LocalStorageAdapter', '$interval'];\nfunction LocationsAndRepositoriesCtrl($scope, $modal, toastr, $repositories, ModalService, $jwtAuth, LocationsRestService, LocalStorageAdapter, $interval) {\n    $scope.loader = true;\n\n    $scope.isLocationInactive = function (location) {\n        return !location.active || !$scope.hasActiveLocation();\n    };\n\n    //Get locations //TODO\n    $scope.getLocations = function () {\n        return $repositories.getLocations();\n    };\n\n    $scope.hasActiveLocation = function () {\n        return $repositories.hasActiveLocation();\n    };\n\n    $scope.getActiveLocation = function () {\n        return $repositories.getActiveLocation();\n    };\n\n    $scope.getLocationError = function () {\n        return $repositories.getLocationError();\n    };\n\n    $scope.getDegradedReason = function () {\n        return $repositories.getDegradedReason();\n    };\n\n    $scope.getRepositories = function () {\n        return $repositories.getRepositories();\n    };\n\n    //Delete location\n    $scope.deleteLocation = function (uri) {\n        ModalService.openSimpleModal({\n            title: 'Confirm detach',\n            message: 'Are you sure you want to detach the location \\'' + uri + '\\'?',\n            warning: true\n        }).result\n            .then(function () {\n                $scope.loader = true;\n                $repositories.deleteLocation(uri);\n            });\n    };\n\n    //Add new location\n\n    $scope.addLocationHttp = function (dataAddLocation) {\n        $scope.loader = true;\n        LocationsRestService.addLocation(dataAddLocation)\n            .success(function (data) {\n                $scope.locations = data;\n                //Reload locations and repositories\n                $repositories.init();\n            })\n            .error(function (data) {\n                const msg = getError(data);\n                toastr.error(msg, 'Error');\n\n                $scope.loader = false;\n            });\n    };\n\n    $scope.addLocation = function () {\n        $modal.open({\n            templateUrl: 'js/angular/templates/modal/add-location.html',\n            windowClass: 'addLocationDialog',\n            controller: 'AddLocationCtrl'\n        }).result\n            .then(function (dataAddLocation) {\n                $scope.addLocationHttp(dataAddLocation);\n            });\n    };\n\n    //Edit location\n    $scope.editLocationHttp = function (dataEditLocation) {\n        $scope.loader = true;\n        LocationsRestService.editLocation(dataEditLocation)\n            .success(function (data) {\n                $scope.locations = data;\n                //Reload locations and repositories\n                $repositories.init();\n            }).error(function (data) {\n                const msg = getError(data);\n                toastr.error(msg, 'Error');\n\n                $scope.loader = false;\n            });\n    };\n\n    $scope.editLocation = function (location) {\n        const modalInstance = $modal.open({\n            templateUrl: 'js/angular/templates/modal/edit-location.html',\n            controller: 'EditLocationCtrl',\n            resolve: {\n                location: function () {\n                    return location;\n                }\n            }\n        });\n\n        modalInstance.result.then(function (dataEditLocation) {\n            $scope.editLocationHttp(dataEditLocation);\n        }, function () {\n        });\n    };\n\n    $scope.activateLocationRequest = function (location) {\n        $scope.loader = true;\n        const data = {\n            'uri': location.uri\n        };\n        LocationsRestService.enableLocation(data)\n            .success(function () {\n                $repositories.setRepository('');\n                $repositories.init();\n            }).error(function (data) {\n                const msg = getError(data);\n                toastr.error(msg, 'Error');\n                document.getElementById('switch-' + location.$$hashKey).checked = false;\n            });\n    };\n\n    //Activate location\n    $scope.activateLocation = function (location) {\n        //This has to be fixed\n        // if (document.getElementById('switch-' + location.$$hashKey).checked == true) {\n        //     return;\n        // }\n        if ($scope.hasActiveLocation()) {\n            ModalService.openSimpleModal({\n                title: 'Confirm location change',\n                message: 'Are you sure you want to change the location?',\n                warning: true\n            }).result\n                .then(function () {\n                    $scope.activateLocationRequest(location);\n                }, function () {\n                    document.getElementById('switch-' + location.$$hashKey).checked = false;\n                });\n        } else {\n            $scope.activateLocationRequest(location);\n        }\n    };\n\n    //Change repository\n    $scope.setRepository = function (id) {\n        $repositories.setRepository(id);\n    };\n\n    //Delete repository\n    $scope.deleteRepository = function (repositoryId) {\n        ModalService.openSimpleModal({\n            title: 'Confirm delete',\n            message: `<p>Are you sure you want to delete the repository <strong>${repositoryId}</strong>?</p>\n                      <p><span class=\"icon-2x icon-warning\" style=\"color: #d54a33\"/>\n                            All data in the repository will be lost.</p>`,\n            warning: true\n        }).result\n            .then(function () {\n                $scope.loader = true;\n                $repositories.deleteRepository(repositoryId);\n                removeCachedGraphsOnDelete(repositoryId);\n            });\n    };\n\n    $scope.restartRepository = function (repositoryId) {\n        ModalService.openSimpleModal({\n            title: 'Confirm restart',\n            message: `<p>Are you sure you want to restart the repository <strong>${repositoryId}</strong>?</p>\n                        <p><span class=\"icon-2x icon-warning\" style=\"color: #d54a33\"/>\n                            The repository will be shut down immediately and all running queries\n                            and updates will be cancelled.</p>`,\n            warning: true\n        }).result\n            .then(function () {\n                $scope.loader = true;\n                $repositories.restartRepository(repositoryId);\n            });\n    }\n\n    $scope.toggleDefaultRepository = function (repositoryId) {\n        if ($scope.getDefaultRepository() === repositoryId) {\n            // unset\n            $repositories.setDefaultRepository(null);\n        } else {\n            // set\n            $repositories.setDefaultRepository(repositoryId);\n        }\n    };\n\n    $scope.getDefaultRepository = function () {\n        return $repositories.getDefaultRepository();\n    };\n\n    /* Unused, data urls don't behave well in all browsers, avoid them when possible\n     $scope.getRepoTurtleConfig = function (repository) {\n     function downloadRepoConfig(repoTurtleConfig, repository) {\n     $('.download-turtle-config')\n     .mouseup(function () {\n     $(this)\n     .attr('href', repoTurtleConfig)\n     .attr('download', repository.id + '-config.ttl')\n     });\n     }\n\n     $repositories.getRepositoryTurtleConfig(repository)\n     .success(function (response) {\n     var repoTurtleConfigDownload = 'data:application/octet-stream;charset=utf-8;base64,'\n     + btoa(unescape(encodeURIComponent(response)));\n     downloadRepoConfig(repoTurtleConfigDownload, repository);\n     })\n     .error(function () {\n     toastr.error('Error getting repository configuration for '' + repository.id + ''');\n     });\n     };\n     */\n\n    $scope.getRepositoryDownloadLink = function (repository) {\n        let url = `rest/repositories/${repository.id}${(repository.type === REPOSITORY_TYPES.ontop ? '/downloadZip': '/download')}`;\n        const token = $jwtAuth.getAuthToken();\n        if (token) {\n            url = `${url}?authToken=${encodeURIComponent(token)}`;\n        }\n        return url;\n    };\n\n    ///Copy to clipboard popover options\n    $scope.copyToClipboard = function (uri) {\n        ModalService.openCopyToClipboardModal(uri);\n    };\n\n    $scope.fromFile = function () {\n        const modalInstance = $modal.open({\n            templateUrl: 'js/angular/templates/modal/upload-repository-config.html',\n            controller: 'UploadRepositoryConfigCtrl'\n        });\n        modalInstance.result.then(function () {\n            $repositories.init();\n        });\n    };\n\n    //Delete repository\n    $scope.openActiveLocationSettings = function () {\n        $modal.open({\n            templateUrl: 'js/angular/settings/modal/location-settings.html',\n            controller: 'ActiveLocationSettingsCtrl'\n        });\n    };\n\n    const timer = $interval(function () {\n        // Update repositories state\n        $repositories.initQuick();\n    }, 5000);\n\n    $scope.$on('$destroy', function () {\n        $interval.cancel(timer);\n    });\n\n    function removeCachedGraphsOnDelete(repoId) {\n        const cashedDependenciesGraphPrefix = `dependencies-selectedGraph-${repoId}`;\n        const cashedClassHierarchyGraphPrefix = `classHierarchy-selectedGraph-${repoId}`;\n        angular.forEach(LocalStorageAdapter.keys(), function (key) {\n            // remove everything but the hide prefixes setting, it should always persist\n            if (key.startsWith(cashedClassHierarchyGraphPrefix) || key.startsWith(cashedDependenciesGraphPrefix)) {\n                LocalStorageAdapter.remove(key);\n            }\n        });\n    }\n\n}\n\nUploadRepositoryConfigCtrl.$inject = ['$scope', '$modalInstance', 'Upload', 'toastr'];\n\nfunction UploadRepositoryConfigCtrl($scope, $modalInstance, Upload, toastr) {\n    $scope.upload = function (files) {\n        if (files && files.length) {\n            $scope.uploadFile = files[0];\n        }\n    };\n    $scope.ok = function () {\n        if ($scope.uploadFile) {\n            $scope.uploadFileLoader = true;\n            Upload.upload({\n                url: 'rest/repositories',\n                method: 'POST',\n                data: {config: $scope.uploadFile}\n            })\n                .success(function () {\n                    $scope.uploadFileLoader = false;\n                    $modalInstance.close();\n                })\n                .error(function (data) {\n                    const msg = getError(data);\n                    toastr.error(msg, 'Error');\n                    $scope.uploadFileLoader = false;\n                });\n        }\n    };\n    $scope.cancel = function () {\n        $modalInstance.dismiss('cancel');\n    };\n}\n\nAddLocationCtrl.$inject = ['$scope', '$modalInstance', 'toastr', 'productInfo'];\n\nfunction AddLocationCtrl($scope, $modalInstance, toastr, productInfo) {\n\n    $scope.newLocation = {\n        'uri': '',\n        'authType': 'none',\n        'username': '',\n        'password': '',\n        'active': false\n    };\n    $scope.docBase = getDocBase(productInfo);\n\n    $scope.isValidLocation = function () {\n        return ($scope.newLocation.uri.length < 6 ||\n            $scope.newLocation.uri.indexOf('http:') === 0 || $scope.newLocation.uri.indexOf('https:') === 0)\n            && $scope.newLocation.uri.indexOf('/repositories') <= -1;\n    };\n\n    $scope.ok = function () {\n        if (!$scope.newLocation) {\n            toastr.error('Location cannot be empty');\n            return;\n        }\n        $modalInstance.close($scope.newLocation);\n    };\n\n    $scope.cancel = function () {\n        $modalInstance.dismiss('cancel');\n    };\n}\n\nEditLocationCtrl.$inject = ['$scope', '$modalInstance', 'location', 'productInfo'];\n\nfunction EditLocationCtrl($scope, $modalInstance, location, productInfo) {\n\n    $scope.editedLocation = angular.copy(location);\n    $scope.docBase = getDocBase(productInfo);\n\n    $scope.ok = function () {\n        $modalInstance.close($scope.editedLocation);\n    };\n\n    $scope.cancel = function () {\n        $modalInstance.dismiss('cancel');\n    };\n}\n\nChooseRepositoryCtrl.$inject = ['$scope', '$location', 'isEnterprise', 'isFreeEdition'];\nfunction ChooseRepositoryCtrl($scope, $location, isEnterprise, isFreeEdition) {\n    $scope.pageTitle = 'Select repository type';\n    $scope.repositoryTypes = REPOSITORY_TYPES;\n    $scope.isEnterprise = isEnterprise;\n    $scope.isFreeEdition = isFreeEdition;\n    $scope.chooseRepositoryType = function (repoType) {\n        $location.path(`${$location.path()}/${repoType}`);\n    };\n}\n\nAddRepositoryCtrl.$inject = ['$scope', 'toastr', '$repositories', '$location', '$timeout', 'Upload', 'isEnterprise', 'isFreeEdition', '$routeParams', 'RepositoriesRestService'];\n\nfunction AddRepositoryCtrl($scope, toastr, $repositories, $location, $timeout, Upload, isEnterprise, isFreeEdition, $routeParams, RepositoriesRestService) {\n    $scope.rulesets = STATIC_RULESETS.slice();\n    $scope.repositoryTypes = REPOSITORY_TYPES;\n    $scope.repoTooltips = REPO_TOOLTIPS;\n    $scope.params = $routeParams;\n    $scope.repositoryType = $routeParams.repositoryType;\n    $scope.enable = true;\n\n    $scope.loader = true;\n    $scope.pageTitle = 'Create Repository';\n    $scope.repositoryInfo = {\n        id: '',\n        params: {},\n        title: '',\n        type: ''\n    };\n\n    $scope.isEnterprise = isEnterprise;\n    $scope.isFreeEdition = isFreeEdition;\n    $scope.invalidValues = {\n        isInvalidQueryTimeout: false,\n        isInvalidQueryLimit: false,\n        isInvalidLeftJoinWorkerThreads: false,\n        isInvalidBoundJoinBlockSize: false,\n        isInvalidJoinWorkerThreads : false,\n        isInvalidUnionWorkerThreads : false,\n        isInvalidValidationResultsLimitPerConstraint : false,\n        isInvalidValidationResultsLimitTotal : false\n    };\n\n    function isValidEERepository(repositoryType) {\n        return $scope.isEnterprise && (repositoryType === REPOSITORY_TYPES.eeMaster\n            || repositoryType === REPOSITORY_TYPES.eeWorker);\n    }\n\n    function isValidSERepository(repositoryType) {\n        return !$scope.isFreeEdition && !$scope.isEnterprise && repositoryType === REPOSITORY_TYPES.se;\n    }\n\n    function isValidFRRepository(repositoryType) {\n        return $scope.isFreeEdition && repositoryType === REPOSITORY_TYPES.free;\n    }\n    function isValidOntopRepository(repositoryType) {\n        return repositoryType === REPOSITORY_TYPES.ontop;\n    }\n\n    function isValidFedXRepository(repositoryType) {\n        return repositoryType === REPOSITORY_TYPES.fedx;\n    }\n\n    function isRepositoryTypeValid(repositoryType) {\n        return isValidEERepository(repositoryType) || isValidSERepository(repositoryType)\n            || isValidFRRepository(repositoryType) || isValidOntopRepository(repositoryType)\n            || isValidFedXRepository(repositoryType);\n    }\n\n    function setPageTitle(repositoryType) {\n        switch (repositoryType) {\n            case REPOSITORY_TYPES.free:\n                $scope.pageTitle = 'Create GraphDB Free repository';\n                break;\n            case REPOSITORY_TYPES.eeWorker:\n                $scope.pageTitle = 'Create GraphDB EE Worker repository';\n                break;\n            case REPOSITORY_TYPES.eeMaster:\n                $scope.pageTitle = 'Create GraphDB EE Master repository';\n                break;\n            case REPOSITORY_TYPES.se:\n                $scope.pageTitle = 'Create GraphDB SE repository';\n                break;\n            case REPOSITORY_TYPES.ontop:\n                $scope.pageTitle = 'Create Ontop Virtual SPARQL repository';\n                break;\n            case REPOSITORY_TYPES.fedx:\n                $scope.pageTitle = 'Create FedX Virtual SPARQL repository';\n                break;\n        }\n    }\n\n    $scope.getConfig = function (repoType) {\n        RepositoriesRestService.getRepositoryConfiguration(repoType).success(function (data) {\n            $scope.repositoryInfo.params = data.params;\n            $scope.repositoryInfo.type = data.type;\n            parseNumberParamsIfNeeded($scope.repositoryInfo.params);\n            parseMemberParamIfNeeded($scope.repositoryInfo.params);\n            $scope.loader = false;\n            // The clean way is the \"autofocus\" attribute and we use it but it doesn't seem to\n            // work in all browsers because of the way dynamic content is handled so give it another\n            // try here.\n            $timeout(function() {\n                // Focus the ID field\n                angular.element(document).find('#id').focus();\n            }, 50);\n        }).error(function (data) {\n            const msg = getError(data);\n            toastr.error(msg, 'Error');\n            $scope.loader = false;\n        });\n    };\n\n    if ($scope.repositoryType && isRepositoryTypeValid($scope.repositoryType)) {\n        $scope.repositoryInfo.type = $scope.repositoryType;\n        $scope.getConfig($scope.repositoryType);\n        setPageTitle($scope.repositoryType);\n    } else {\n        $location.path('/repository/create');\n    }\n\n    $scope.hasActiveLocation = function () {\n        return $repositories.hasActiveLocation();\n    };\n\n    $scope.activeLocation = function () {\n        return $repositories.getActiveLocation();\n    };\n\n    let isInvalidPieFile = false;\n    $scope.uploadRuleset = function (files) {\n        if (files && files.length) {\n            $scope.uploadFile = files[0];\n            $scope.uploadFileLoader = true;\n            Upload.upload({\n                url: 'rest/repositories/uploadRuleSet',\n                data: {ruleset: $scope.uploadFile}\n            }).progress(function (evt) {\n                /*\t\t\t\t\t\tvar progressPercentage = parseInt(100.0 * evt.loaded / evt.total);\n                 console.log('progress: ' + progressPercentage + '% ' + evt.config.file.name);*/\n            }).success(function (data) {\n                if (!data.success) {\n                    toastr.error(data.errorMessage);\n                    isInvalidPieFile = true;\n                } else {\n                    const fileName = $scope.uploadFile.name;\n                    const newValue = {id: data.fileLocation, name: 'Custom: ' + fileName};\n                    if ($scope.rulesetPie) {\n                        // file was previously uploaded\n                        $scope.rulesets[0] = newValue;\n                    } else {\n                        // file uploaded for the first time\n                        $scope.rulesets.unshift(newValue);\n                    }\n                    $scope.rulesetPie = data.fileLocation;\n                    $scope.rulesetPieFile = fileName;\n                    $scope.repositoryInfo.params.ruleset.value = $scope.rulesetPie;\n                }\n                $scope.uploadFileLoader = false;\n            }).error(function (data) {\n                const msg = getError(data);\n                toastr.error(msg, 'Error');\n                $scope.uploadFile = '';\n                $scope.uploadFileLoader = false;\n            });\n        }\n    };\n\n    $scope.noMembersError = function () {\n        toastr.error('FedX repository should be created with at least one member!');\n    };\n\n    $scope.goBackToPreviousLocation = function () {\n        if (angular.isDefined($routeParams.previous)) {\n            delete $location.$$search.previous;\n            $location.path('/');\n        } else {\n            $location.path('/repository');\n        }\n    };\n\n    $scope.createRepoHttp = function () {\n        $scope.loader = true;\n        RepositoriesRestService.createRepository($scope.repositoryInfo).success(function () {\n            toastr.success('The repository ' + $scope.repositoryInfo.id + ' has been created.');\n            $repositories.init($scope.goBackToPreviousLocation);\n        }).error(function (data) {\n            const msg = getError(data);\n            toastr.error(msg, 'Error');\n            $scope.loader = false;\n        });\n    };\n\n    $scope.createRepo = function () {\n        if (!$scope.repositoryInfo.id) {\n            toastr.error('Repository ID cannot be empty');\n            return;\n        }\n\n        $scope.isInvalidRepoName = !FILENAME_PATTERN.test($scope.repositoryInfo.id);\n        validateNumberFields($scope.repositoryInfo.params, $scope.invalidValues);\n        const invalidValues = checkInvalidValues($scope.invalidValues);\n\n        if (isInvalidPieFile) {\n            toastr.error('Invalid rule-set file. Please upload a valid one.');\n        } else if ($scope.isInvalidRepoName) {\n            toastr.error('Wrong repo name');\n        } else if ($scope.repositoryType === \"fedx\" && $scope.repositoryInfo.params.member.value.length === 0) {\n            $scope.noMembersError();\n        } else if (invalidValues) {\n            toastr.error(invalidValues);\n        } else {\n            $scope.createRepoHttp();\n        }\n    };\n\n    $scope.rulesetWarning = function () {\n        const pp = $scope.repositoryInfo.params;\n        if (pp === undefined || pp.ruleset === undefined || pp.disableSameAs === undefined) {\n            return '';\n        }\n\n        if (pp.ruleset.value.indexOf('owl') === 0 && pp.disableSameAs.value === 'true') {\n            return REPO_TOOLTIPS.rulesetWarnings.needsSameAs;\n        } else if (pp.ruleset.value.indexOf('rdfs') === 0 && pp.disableSameAs.value === 'false') {\n            return REPO_TOOLTIPS.rulesetWarnings.doesntNeedSameAs;\n        } else if (pp.ruleset.value === $scope.rulesetPie) {\n            return REPO_TOOLTIPS.rulesetWarnings.customRuleset;\n        } else {\n            return '';\n        }\n    };\n\n    $scope.validateNumberInput = function () {\n        validateNumberFields($scope.repositoryInfo.params, $scope.invalidValues);\n    }\n\n    $scope.getShaclOptionsClass = function () {\n        return getShaclOptionsClass();\n    }\n    //TODO - check if repositoryID exist\n\n    // Request auto-focus of the ID input when creating a repo (but not when editing)\n    $scope.autofocusId = 'autofocus';\n}\n\nEditRepositoryFileCtrl.$inject = ['$scope', '$modalInstance', 'RepositoriesRestService', 'file', 'toastr'];\n\nfunction EditRepositoryFileCtrl($scope, $modalInstance, RepositoriesRestService, file, toastr) {\n\n    if (file) {\n        RepositoriesRestService.getRepositoryFileContent(file).success(function (data) {\n            $scope.fileContent = data;\n        }).error(function (data) {\n            const msg = getError(data);\n            toastr.error(msg, 'Error');\n        });\n    }\n\n    $scope.ok = function () {\n        $modalInstance.close({\n            content: $scope.fileContent,\n            fileLocation: file\n        });\n    };\n\n    $scope.cancel = function () {\n        $modalInstance.dismiss('cancel');\n    };\n}\n\nEditRepositoryCtrl.$inject = ['$scope', '$routeParams', 'toastr', '$repositories', '$location', 'ModalService', 'isEnterprise', 'isFreeEdition', 'RepositoriesRestService'];\n\nfunction EditRepositoryCtrl($scope, $routeParams, toastr, $repositories, $location, ModalService, isEnterprise, isFreeEdition, RepositoriesRestService) {\n\n    $scope.rulesets = STATIC_RULESETS.slice();\n    $scope.repositoryTypes = REPOSITORY_TYPES;\n    $scope.repoTooltips = REPO_TOOLTIPS;\n\n    //TODO\n    $scope.editRepoPage = true;\n    $scope.canEditRepoId = false;\n    $scope.params = $routeParams;\n    $scope.loader = true;\n    $scope.isEnterprise = isEnterprise;\n    $scope.isFreeEdition = isFreeEdition;\n    $scope.repositoryInfo = {};\n    $scope.repositoryInfo.id = $scope.params.repositoryId;\n    $scope.repositoryInfo.restartRequested = false;\n    $scope.repositoryType = '';\n    $scope.saveRepoId = $scope.params.repositoryId;\n    $scope.pageTitle = 'Edit Repository: ' + $scope.params.repositoryId;\n    $scope.invalidValues = {\n        isInvalidQueryTimeout: false,\n        isInvalidQueryLimit: false,\n        isInvalidLeftJoinWorkerThreads: false,\n        isInvalidBoundJoinBlockSize: false,\n        isInvalidJoinWorkerThreads : false,\n        isInvalidUnionWorkerThreads : false,\n        isInvalidValidationResultsLimitPerConstraint : false,\n        isInvalidValidationResultsLimitTotal : false\n    };\n    $scope.hasActiveLocation = function () {\n        return $repositories.hasActiveLocation();\n    };\n\n    $scope.$watch($scope.hasActiveLocation, function () {\n        if ($scope.hasActiveLocation) {\n            RepositoriesRestService.getRepository($scope.repositoryInfo.id)\n                .success(function (data) {\n                    if (angular.isDefined(data.params.ruleset)) {\n                        let ifRulesetExists = false;\n                        angular.forEach($scope.rulesets, function (item) {\n                            if (item.id === data.params.ruleset.value) {\n                                ifRulesetExists = true;\n                            }\n                        });\n                        if (data.params.ruleset && !ifRulesetExists) {\n                            let name = getFileName(data.params.ruleset.value);\n                            $scope.rulesets.unshift({id: data.params.ruleset.value, name: 'Custom: ' + name});\n                        }\n                    }\n                    $scope.repositoryInfo = data;\n                    $scope.setRepositoryType(data.type);\n                    parseNumberParamsIfNeeded($scope.repositoryInfo.params);\n                    $scope.repositoryInfo.saveId = $scope.saveRepoId;\n                    $scope.loader = false;\n                })\n                .error(function (data, status) {\n                    if (status === 404 && $routeParams.repositoryId !== 'system') {\n                        toastr.error('Repo with name ' + '<b>' + $routeParams.repositoryId + '</b>' + ' doesn\\'t exists', 'Error', {allowHtml: true});\n                        $scope.loader = false;\n                        $location.path('repository');\n                    } else if (status === 404 && $routeParams.repositoryId === 'system') {\n                        toastr.error('<b>System</b> repository can\\'t be edited', 'Error', {allowHtml: true});\n                        $scope.loader = false;\n                        $location.path('repository');\n                    } else {\n                        const msg = getError(data);\n                        toastr.error(msg, 'Error');\n                        $scope.loader = false;\n                    }\n                });\n        }\n    });\n\n    $scope.setRepositoryType = function (type) {\n        $scope.repositoryType = type;\n    };\n\n    $scope.noMembersError = function () {\n        toastr.error('FedX repository should be created with at least one member!');\n    };\n\n    $scope.editRepoHttp = function () {\n        $scope.loader = true;\n        RepositoriesRestService.editRepository($scope.repositoryInfo.saveId, $scope.repositoryInfo)\n            .success(function () {\n                toastr.success('The repository ' + $scope.repositoryInfo.saveId + ' has been edited.');\n                $repositories.init($scope.goBackToPreviousLocation);\n                if ($scope.repositoryInfo.saveId === $scope.repositoryInfo.id && $scope.repositoryInfo.restartRequested) {\n                    $repositories.restartRepository($scope.repositoryInfo.id);\n                }\n            }).error(function (data) {\n            const msg = getError(data);\n            toastr.error(msg, 'Error');\n            $scope.loader = false;\n        });\n    };\n\n    $scope.editRepository = function () {\n        $scope.isInvalidRepoName = !FILENAME_PATTERN.test($scope.repositoryInfo.id);\n        validateNumberFields($scope.repositoryInfo.params, $scope.invalidValues);\n        const invalidValues = checkInvalidValues($scope.invalidValues);\n        let modalMsg = `Save changes to repository <strong>${$scope.repositoryInfo.id}</strong>?<br><br>`;\n        if ($scope.repositoryInfo.saveId !== $scope.repositoryInfo.id) {\n            modalMsg += `<span class=\"icon-2x icon-warning\" style=\"color: #d54a33\"/>\n                        The repository will be stopped and renamed.`;\n        } else if ($scope.repositoryInfo.restartRequested) {\n            modalMsg += `<span class=\"icon-2x icon-warning\" style=\"color: #d54a33\"/>\n                        The repository will be restarted.`;\n        } else {\n            modalMsg += `<span class=\"icon-2x icon-warning\" style=\"color: #d54a33\"/>\n                        Repository restart required for changes to take effect.`;\n        }\n        if ($scope.isInvalidRepoName) {\n            toastr.error('Wrong repo name');\n        } else if ($scope.repositoryType === \"fedx\" && $scope.repositoryInfo.params.member.value.length === 0) {\n            $scope.noMembersError();\n        } else if(invalidValues) {\n            toastr.error(invalidValues);\n        } else {\n            ModalService.openSimpleModal({\n                title: 'Confirm save',\n                message: modalMsg,\n                warning: true\n            }).result\n                .then(function () {\n                    $scope.editRepoHttp();\n                });\n        }\n    }\n\n    $scope.editRepositoryId = function () {\n        let msg = '<p>Changing the repository ID is a dangerous operation since it renames the repository folder and enforces repository shutdown.</p>';\n        if ($scope.isEnterprise) {\n            msg += '<p>If your repository is in a cluster, it is your responsibility to update the cluster after renaming.</p>';\n        }\n        ModalService.openSimpleModal({\n            title: 'Confirm enable edit',\n            message: msg,\n            warning: true\n        }).result.then(function () {\n            $scope.canEditRepoId = true;\n        });\n    };\n\n    $scope.goBackToPreviousLocation = function () {\n        if (angular.isDefined($routeParams.previous)) {\n            delete $location.$$search.previous;\n            $location.path('/');\n        } else {\n            $location.path('/repository');\n        }\n    };\n\n    $scope.validateNumberInput = function () {\n        validateNumberFields($scope.repositoryInfo.params, $scope.invalidValues);\n    }\n\n    $scope.getShaclOptionsClass = function () {\n        return getShaclOptionsClass();\n    }\n}\n","export const STATIC_RULESETS = [\n    {id: 'empty', name: 'No inference'},\n    {id: 'rdfs-optimized', name: 'RDFS (Optimized)'},\n    {id: 'rdfs', name: 'RDFS'},\n    {id: 'rdfsplus-optimized', name: 'RDFS-Plus (Optimized)'},\n    {id: 'owl-horst-optimized', name: 'OWL-Horst (Optimized)'},\n    {id: 'owl-horst', name: 'OWL-Horst'},\n    {id: 'owl2-ql-optimized', name: 'OWL2-QL (Optimized)'},\n    {id: 'owl2-ql', name: 'OWL2-QL'},\n    {id: 'owl-max-optimized', name: 'OWL-Max (Optimized)'},\n    {id: 'owl-max', name: 'OWL-Max'},\n    {id: 'owl2-rl-optimized', name: 'OWL2-RL (Optimized)'},\n    {id: 'owl2-rl', name: 'OWL2-RL'},\n\n];\n\nexport const REPOSITORY_TYPES = {free: 'free', eeWorker: 'worker', eeMaster: 'master', ontop: 'ontop', se: 'se', fedx: 'fedx'};\nexport const FILENAME_PATTERN = new RegExp('^[a-zA-Z0-9-_]+$');\nexport const NUMBER_PATTERN = new RegExp('[0-9]');\n\nexport const REPO_TOOLTIPS = {\n    id: \"Unique identifier for the repository. The ID must contain only letters (a-z, A-Z), numbers (0-9), '-' and '_'.\",\n    title: \"Human readable description of the repository.\",\n    readOnly: \"Protects the repository against any changes.\",\n    ruleset: \"Sets of axiomatic triples, consistency checks and entailment rules, \" +\n        \"which determine the applied semantics with a PIE file.\",\n    rulesetWarnings: {\n        needsSameAs: \"Disabling owl:sameAs for this ruleset may cause incomplete inference with owl:sameAs statements.\",\n        doesntNeedSameAs: \"This ruleset does not need owl:sameAs, consider disabling it.\",\n        customRuleset: \"If the custom ruleset does not use owl:sameAs, consider disabling it. <br>\" +\n            \"If the ruleset uses owl:sameAs, disabling it may cause incomplete inference with owl:sameAs statements.\"\n    },\n    disableSameAs: \"GraphDB uses a non-rule implementation of owl:sameAs, \" +\n        \"which can be enabled or disabled independently of the ruleset.\",\n    checkForInconsistencies: \"Enables the consistency checks from the ruleset.\",\n    isShacl: \"Enables support for SHACL validation.\",\n    shaclOptions: {\n        cacheSelectNodes: \"The SHACL implementation retrieves a lot of its relevant data through running \" +\n            \"SPARQL Select queries against the repository and against the changes in the transaction. \" +\n            \"This is usually good for performance, but while validating large amounts of data disabling this cache will use less memory.\",\n        undefinedTargetValidatesAllSubjects: \"If no target is defined for a NodeShape, that NodeShape will be ignored. \" +\n            \"Enabling this will make such NodeShapes wildcard shapes and validate all subjects. \" +\n            \"Equivalent to setting sh:targetClass to owl:Thing or rdfs:Resource in an environment with a reasoner.\",\n        logValidationPlans: \"Log (INFO) the executed validation plans as GraphViz DOT. \" +\n            \"It is recommended to disable parallel validation when this is enabled.\",\n        logValidationViolations: \"Log (INFO) a list of violations and the triples that caused the violations. \" +\n            \"It is recommended to disable parallel validation when this is enabled.\",\n        parallelValidation: \"Run SHACL validation in parallel.\",\n        globalLogValidationExecution: \"Log (INFO) every execution step of the SHACL validation. \" +\n            \"This is fairly costly and should not be used in production. \" +\n            \"It is recommended to disable parallel validation when this is enabled.\",\n        performanceLogging: \"Log (INFO) the execution time per shape. \" +\n            \"It is recommended to disable parallel validation and caching of select nodes when this is enabled.\",\n        eclipseRdf4jShaclExtensions: \"Activates RDF4J's SHACL extensions that provide additional functionality (experimental).\",\n        dashDataShapes: \"Activates DASH Data Shapes extensions that provide additional functionality (experimental).\"\n    },\n    entityIdSize: \"Defines the bit size of internal IDs used to index entities (URIs, blank nodes, literals, and RDF* embedded triples).\" +\n        \"<br>Use 40 bit ID only if you expect more than 2 billion unique RDF values.\",\n    enableContextIndex: \"Builds an additional Context-Predicate-Subject-Object index to boost the \" +\n        \"SPARQL query performance of queries with GRAPH/FROM/FROM NAMED clauses.\",\n    enablePredicateList: \"Enables the mappings from an entity (subject or object) to its predicates; \" +\n        \"enabling it can significantly speed up queries that use wildcard predicate patterns.\",\n    queryTimeout: \"Sets the number of seconds after which the evaluation of a query will be terminated; \" +\n        \"values less than or equal to zero mean no limit.\",\n    throwQueryEvaluationExceptionOnTimeout: \"Repository throws QueryEvaluationException when the duration of a query execution \" +\n        \"exceeds the timeout parameter.\",\n    queryLimitResults: \"Sets the maximum number of results returned from a query after which the evaluation of \" +\n        \"a query will be terminated; values less than or equal to zero mean no limit.\",\n    nonInterpretablePredicates: \"Semicolon-delimited list of predicates (full URIs) that GraphDB will not try to process \" +\n        \"with the registered GraphDB plugins.\",\n    ontop: {\n        driverType: \"Determines the type of SQL database to connect to.\",\n        propertiesFile: \"Describes the JDBC configuration such as hostname and database name to connect to.\",\n        hostName: 'The JDBC hostname to connect to.',\n        port: \"The JDBC port to connect to if different from the default for the chosen JDBC driver.\",\n        portIfRequired: \"The JDBC port to connect to.\",\n        databaseName: 'The database name to connect to.',\n        userName: 'The username to use for the JDBC connection.',\n        password: 'The password to use for the JDBC connection.',\n        driverClass: 'Classname of the chosen JDBC driver. It must be on the classpath (in the lib directory).',\n        driverClassWarning: \"JDBC driver not found in the classpath, please save it in the lib directory and restart GraphDB\",\n        url: 'The JDBC URL that will be used. It is constructed using the supplied hostname, port and database name.',\n        obdaFile: \"Describes the mapping from SQL to RDF in either the OBDA or the R2RML format.\",\n        owlFile: \"Specifies relations between the classes and properties in the cosntructed RDF graph. \" +\n            \"It can be in any supported RDF format.\",\n        constraintFile: \"Specifies override of SQL primary and foreign keys.\",\n        testConn: \"Attempts to establish a connection to the SQL database to test if the supplied configuration is correct.\"\n    },\n    fedx: {\n        repositoryNotExistWarning: 'The repository member has been removed from the local repositories',\n        localReposInstructions: 'Click on a repo to add a local repository as a member',\n        withLogQueries: 'Set whether to log queries',\n        withDebugQueryPlan: 'Whether to print the optimized query execution plan to stdout',\n        enforceMaxQueryTime: 'Max query time in seconds, 0 to disable',\n        withIncludeInferredDefault: 'Set whether to include inferred statements or not',\n        withBoundJoinBlockSize: 'Set the block size for bound joins',\n        withJoinWorkerThreads: 'Set the number of join worker threads for parallelization',\n        withLeftJoinWorkerThreads: 'Set the number of left join worker threads',\n        unionWorkerThreads: 'Set the number of union worker threads for parallelization',\n        withLogQueryPlan: 'Whether to log the query plan',\n        withEnableServiceAsBoundJoin: 'Whether external SERVICE clauses are evaluated using bound join',\n        withSourceSelectionCacheSpec: 'The cache specification for the SourceSelectionMemoryCache',\n        removeMember: 'Remove repository as a FedX member',\n        editRepository: 'Edit repository',\n        setAsWritable: 'Set repository as writable'\n    }\n};\n"],"sourceRoot":""}