{"version":3,"sources":["webpack:///./src/js/angular/repositories/repository.constants.js"],"names":["STATIC_RULESETS","id","name","REPOSITORY_TYPES","free","eeWorker","eeMaster","ontop","se","fedx","FILENAME_PATTERN","RegExp","NUMBER_PATTERN","REPO_TOOLTIPS","title","readOnly","ruleset","rulesetWarnings","needsSameAs","doesntNeedSameAs","customRuleset","disableSameAs","checkForInconsistencies","isShacl","shaclOptions","cacheSelectNodes","undefinedTargetValidatesAllSubjects","logValidationPlans","logValidationViolations","parallelValidation","globalLogValidationExecution","performanceLogging","eclipseRdf4jShaclExtensions","dashDataShapes","entityIdSize","enableContextIndex","enablePredicateList","queryTimeout","throwQueryEvaluationExceptionOnTimeout","queryLimitResults","nonInterpretablePredicates","driverType","propertiesFile","hostName","port","portIfRequired","databaseName","userName","password","driverClass","driverClassWarning","url","obdaFile","owlFile","constraintFile","testConn","repositoryNotExistWarning","localReposInstructions","withLogQueries","withDebugQueryPlan","enforceMaxQueryTime","withIncludeInferredDefault","withBoundJoinBlockSize","withJoinWorkerThreads","withLeftJoinWorkerThreads","unionWorkerThreads","withLogQueryPlan","withEnableServiceAsBoundJoin","withSourceSelectionCacheSpec","removeMember","editRepository","setAsWritable"],"mappings":"0FAAA,sPAAO,MAAMA,EAAkB,CAC3B,CAACC,GAAI,QAASC,KAAM,gBACpB,CAACD,GAAI,iBAAkBC,KAAM,oBAC7B,CAACD,GAAI,OAAQC,KAAM,QACnB,CAACD,GAAI,qBAAsBC,KAAM,yBACjC,CAACD,GAAI,sBAAuBC,KAAM,yBAClC,CAACD,GAAI,YAAaC,KAAM,aACxB,CAACD,GAAI,oBAAqBC,KAAM,uBAChC,CAACD,GAAI,UAAWC,KAAM,WACtB,CAACD,GAAI,oBAAqBC,KAAM,uBAChC,CAACD,GAAI,UAAWC,KAAM,WACtB,CAACD,GAAI,oBAAqBC,KAAM,uBAChC,CAACD,GAAI,UAAWC,KAAM,YAIbC,EAAmB,CAACC,KAAM,OAAQC,SAAU,SAAUC,SAAU,SAAUC,MAAO,QAASC,GAAI,KAAMC,KAAM,QAC1GC,EAAmB,IAAIC,OAAO,oBAC9BC,EAAiB,IAAID,OAAO,SAE5BE,EAAgB,CACzBZ,GAAI,iHACJa,MAAO,gDACPC,SAAU,+CACVC,QAAS,6HAETC,gBAAiB,CACbC,YAAa,mGACbC,iBAAkB,gEAClBC,cAAe,qLAGnBC,cAAe,uHAEfC,wBAAyB,mDACzBC,QAAS,wCACTC,aAAc,CACVC,iBAAkB,qSAGlBC,oCAAqC,oQAGrCC,mBAAoB,mIAEpBC,wBAAyB,qJAEzBC,mBAAoB,oCACpBC,6BAA8B,8LAG9BC,mBAAoB,8IAEpBC,4BAA6B,2FAC7BC,eAAgB,+FAEpBC,aAAc,mMAEdC,mBAAoB,mJAEpBC,oBAAqB,kKAErBC,aAAc,wIAEdC,uCAAwC,mHAExCC,kBAAmB,sKAEnBC,2BAA4B,+HAE5BjC,MAAO,CACHkC,WAAY,qDACZC,eAAgB,qFAChBC,SAAU,mCACVC,KAAM,wFACNC,eAAgB,+BAChBC,aAAc,mCACdC,SAAU,+CACVC,SAAU,+CACVC,YAAa,2FACbC,mBAAoB,kGACpBC,IAAK,yGACLC,SAAU,gFACVC,QAAS,8HAETC,eAAgB,sDAChBC,SAAU,4GAEd9C,KAAM,CACF+C,0BAA2B,qEAC3BC,uBAAwB,wDACxBC,eAAgB,6BAChBC,mBAAoB,gEACpBC,oBAAqB,0CACrBC,2BAA4B,oDAC5BC,uBAAwB,qCACxBC,sBAAuB,4DACvBC,0BAA2B,6CAC3BC,mBAAoB,6DACpBC,iBAAkB,gCAClBC,6BAA8B,kEAC9BC,6BAA8B,6DAC9BC,aAAc,qCACdC,eAAgB,kBAChBC,cAAe","file":"81.a000fc69ddf1fded8354.bundle.js","sourcesContent":["export const STATIC_RULESETS = [\n    {id: 'empty', name: 'No inference'},\n    {id: 'rdfs-optimized', name: 'RDFS (Optimized)'},\n    {id: 'rdfs', name: 'RDFS'},\n    {id: 'rdfsplus-optimized', name: 'RDFS-Plus (Optimized)'},\n    {id: 'owl-horst-optimized', name: 'OWL-Horst (Optimized)'},\n    {id: 'owl-horst', name: 'OWL-Horst'},\n    {id: 'owl2-ql-optimized', name: 'OWL2-QL (Optimized)'},\n    {id: 'owl2-ql', name: 'OWL2-QL'},\n    {id: 'owl-max-optimized', name: 'OWL-Max (Optimized)'},\n    {id: 'owl-max', name: 'OWL-Max'},\n    {id: 'owl2-rl-optimized', name: 'OWL2-RL (Optimized)'},\n    {id: 'owl2-rl', name: 'OWL2-RL'},\n\n];\n\nexport const REPOSITORY_TYPES = {free: 'free', eeWorker: 'worker', eeMaster: 'master', ontop: 'ontop', se: 'se', fedx: 'fedx'};\nexport const FILENAME_PATTERN = new RegExp('^[a-zA-Z0-9-_]+$');\nexport const NUMBER_PATTERN = new RegExp('[0-9]');\n\nexport const REPO_TOOLTIPS = {\n    id: \"Unique identifier for the repository. The ID must contain only letters (a-z, A-Z), numbers (0-9), '-' and '_'.\",\n    title: \"Human readable description of the repository.\",\n    readOnly: \"Protects the repository against any changes.\",\n    ruleset: \"Sets of axiomatic triples, consistency checks and entailment rules, \" +\n        \"which determine the applied semantics with a PIE file.\",\n    rulesetWarnings: {\n        needsSameAs: \"Disabling owl:sameAs for this ruleset may cause incomplete inference with owl:sameAs statements.\",\n        doesntNeedSameAs: \"This ruleset does not need owl:sameAs, consider disabling it.\",\n        customRuleset: \"If the custom ruleset does not use owl:sameAs, consider disabling it. <br>\" +\n            \"If the ruleset uses owl:sameAs, disabling it may cause incomplete inference with owl:sameAs statements.\"\n    },\n    disableSameAs: \"GraphDB uses a non-rule implementation of owl:sameAs, \" +\n        \"which can be enabled or disabled independently of the ruleset.\",\n    checkForInconsistencies: \"Enables the consistency checks from the ruleset.\",\n    isShacl: \"Enables support for SHACL validation.\",\n    shaclOptions: {\n        cacheSelectNodes: \"The SHACL implementation retrieves a lot of its relevant data through running \" +\n            \"SPARQL Select queries against the repository and against the changes in the transaction. \" +\n            \"This is usually good for performance, but while validating large amounts of data disabling this cache will use less memory.\",\n        undefinedTargetValidatesAllSubjects: \"If no target is defined for a NodeShape, that NodeShape will be ignored. \" +\n            \"Enabling this will make such NodeShapes wildcard shapes and validate all subjects. \" +\n            \"Equivalent to setting sh:targetClass to owl:Thing or rdfs:Resource in an environment with a reasoner.\",\n        logValidationPlans: \"Log (INFO) the executed validation plans as GraphViz DOT. \" +\n            \"It is recommended to disable parallel validation when this is enabled.\",\n        logValidationViolations: \"Log (INFO) a list of violations and the triples that caused the violations. \" +\n            \"It is recommended to disable parallel validation when this is enabled.\",\n        parallelValidation: \"Run SHACL validation in parallel.\",\n        globalLogValidationExecution: \"Log (INFO) every execution step of the SHACL validation. \" +\n            \"This is fairly costly and should not be used in production. \" +\n            \"It is recommended to disable parallel validation when this is enabled.\",\n        performanceLogging: \"Log (INFO) the execution time per shape. \" +\n            \"It is recommended to disable parallel validation and caching of select nodes when this is enabled.\",\n        eclipseRdf4jShaclExtensions: \"Activates RDF4J's SHACL extensions that provide additional functionality (experimental).\",\n        dashDataShapes: \"Activates DASH Data Shapes extensions that provide additional functionality (experimental).\"\n    },\n    entityIdSize: \"Defines the bit size of internal IDs used to index entities (URIs, blank nodes, literals, and RDF* embedded triples).\" +\n        \"<br>Use 40 bit ID only if you expect more than 2 billion unique RDF values.\",\n    enableContextIndex: \"Builds an additional Context-Predicate-Subject-Object index to boost the \" +\n        \"SPARQL query performance of queries with GRAPH/FROM/FROM NAMED clauses.\",\n    enablePredicateList: \"Enables the mappings from an entity (subject or object) to its predicates; \" +\n        \"enabling it can significantly speed up queries that use wildcard predicate patterns.\",\n    queryTimeout: \"Sets the number of seconds after which the evaluation of a query will be terminated; \" +\n        \"values less than or equal to zero mean no limit.\",\n    throwQueryEvaluationExceptionOnTimeout: \"Repository throws QueryEvaluationException when the duration of a query execution \" +\n        \"exceeds the timeout parameter.\",\n    queryLimitResults: \"Sets the maximum number of results returned from a query after which the evaluation of \" +\n        \"a query will be terminated; values less than or equal to zero mean no limit.\",\n    nonInterpretablePredicates: \"Semicolon-delimited list of predicates (full URIs) that GraphDB will not try to process \" +\n        \"with the registered GraphDB plugins.\",\n    ontop: {\n        driverType: \"Determines the type of SQL database to connect to.\",\n        propertiesFile: \"Describes the JDBC configuration such as hostname and database name to connect to.\",\n        hostName: 'The JDBC hostname to connect to.',\n        port: \"The JDBC port to connect to if different from the default for the chosen JDBC driver.\",\n        portIfRequired: \"The JDBC port to connect to.\",\n        databaseName: 'The database name to connect to.',\n        userName: 'The username to use for the JDBC connection.',\n        password: 'The password to use for the JDBC connection.',\n        driverClass: 'Classname of the chosen JDBC driver. It must be on the classpath (in the lib directory).',\n        driverClassWarning: \"JDBC driver not found in the classpath, please save it in the lib directory and restart GraphDB\",\n        url: 'The JDBC URL that will be used. It is constructed using the supplied hostname, port and database name.',\n        obdaFile: \"Describes the mapping from SQL to RDF in either the OBDA or the R2RML format.\",\n        owlFile: \"Specifies relations between the classes and properties in the cosntructed RDF graph. \" +\n            \"It can be in any supported RDF format.\",\n        constraintFile: \"Specifies override of SQL primary and foreign keys.\",\n        testConn: \"Attempts to establish a connection to the SQL database to test if the supplied configuration is correct.\"\n    },\n    fedx: {\n        repositoryNotExistWarning: 'The repository member has been removed from the local repositories',\n        localReposInstructions: 'Click on a repo to add a local repository as a member',\n        withLogQueries: 'Set whether to log queries',\n        withDebugQueryPlan: 'Whether to print the optimized query execution plan to stdout',\n        enforceMaxQueryTime: 'Max query time in seconds, 0 to disable',\n        withIncludeInferredDefault: 'Set whether to include inferred statements or not',\n        withBoundJoinBlockSize: 'Set the block size for bound joins',\n        withJoinWorkerThreads: 'Set the number of join worker threads for parallelization',\n        withLeftJoinWorkerThreads: 'Set the number of left join worker threads',\n        unionWorkerThreads: 'Set the number of union worker threads for parallelization',\n        withLogQueryPlan: 'Whether to log the query plan',\n        withEnableServiceAsBoundJoin: 'Whether external SERVICE clauses are evaluated using bound join',\n        withSourceSelectionCacheSpec: 'The cache specification for the SourceSelectionMemoryCache',\n        removeMember: 'Remove repository as a FedX member',\n        editRepository: 'Edit repository',\n        setAsWritable: 'Set repository as writable'\n    }\n};\n"],"sourceRoot":""}