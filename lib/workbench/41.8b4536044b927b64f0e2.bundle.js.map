{"version":3,"sources":["webpack:///./src/js/angular/resources/app.js","webpack:///./src/js/lib/nvd3/angular-nvd3.js"],"names":["angular","module","directive","utils","restrict","scope","data","options","api","events","config","link","element","attrs","defaultConfig","extended","visible","disabled","autorefresh","refreshDataOnly","deepWatchData","debounce","configureEvents","dispatch","forEach","value","key","undefined","_config","on","configureWrapper","name","_","deepExtend","enable","text","class","css","width","chart","textAlign","defaultWrapper","wrapElement","html","addClass","removeAttr","prepend","find","after","append","extend","refresh","updateWithOptions","update","clearElement","isDefined","nv","models","type","id","Math","random","toString","substr","indexOf","chartType","configure","updateWithData","classes","removeClass","configureStyles","addGraph","resizeHandler","windowResize","d3","select","remove","attr","height","datum","transition","duration","call","empty","clear","i","graphs","length","splice","tooltip","cleanup","getScope","$watch","newOptions","newData","oldData","newConfig","oldConfig","eventHandler","event","$on","e","factory","func","wait","immediate","timeout","context","this","args","arguments","later","apply","callNow","clearTimeout","setTimeout","dst","me","obj","constructor","Object"],"mappings":"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","file":"41.8b4536044b927b64f0e2.bundle.js","sourcesContent":["import 'angular/core/services';\nimport 'angular/core/directives';\nimport 'angular/resources/controllers';\nimport 'angular/core/services/repositories.service';\nimport 'd3/build/d3';\nimport 'lib/nvd3/angular-nvd3';\n\nconst modules = [\n    'toastr',\n    'ui.bootstrap',\n    'nvd3',\n    'graphdb.framework.jmx.resources.controllers',\n    'graphdb.framework.core.services.repositories',\n    'graphdb.framework.core.directives'\n];\n\nangular.module('graphdb.framework.jmx.resources', modules);\n\n","/**************************************************************************\n * AngularJS-nvD3, v1.0.0-beta; MIT License; 25/02/2015 22:27\n * http://krispo.github.io/angular-nvd3\n **************************************************************************/\n(function(){\n\n    'use strict';\n\n    angular.module('nvd3', [])\n\n        .directive('nvd3', ['utils', function(utils){\n            return {\n                restrict: 'AE',\n                scope: {\n                    data: '=',      //chart data, [required]\n                    options: '=',   //chart options, according to nvd3 core api, [required]\n                    api: '=?',      //directive global api, [optional]\n                    events: '=?',   //global events that directive would subscribe to, [optional]\n                    config: '=?'    //global directive configuration, [optional]\n                },\n                link: function(scope, element, attrs){\n                    var defaultConfig = {\n                        extended: false,\n                        visible: true,\n                        disabled: false,\n                        autorefresh: true,\n                        refreshDataOnly: false,\n                        deepWatchData: true,\n                        debounce: 10 // default 10ms, time silence to prevent refresh while multiple options changes at a time\n                    };\n\n                    //basic directive configuration\n                    scope._config = angular.extend(defaultConfig, scope.config);\n\n                    //directive global api\n                    scope.api = {\n                        // Fully refresh directive\n                        refresh: function(){\n                            scope.api.updateWithOptions(scope.options);\n                        },\n\n                        // Update chart layout (for example if container is resized)\n                        update: function() {\n                            scope.chart.update();\n                        },\n\n                        // Update chart with new options\n                        updateWithOptions: function(options){\n                            // Clearing\n                            scope.api.clearElement();\n\n                            // Exit if options are not yet bound\n                            if (angular.isDefined(options) === false) return;\n\n                            // Exit if chart is hidden\n                            if (!scope._config.visible) return;\n\n                            // Initialize chart with specific type\n                            scope.chart = nv.models[options.chart.type]();\n\n                            // Generate random chart ID\n                            scope.chart.id = Math.random().toString(36).substr(2, 15);\n\n                            angular.forEach(scope.chart, function(value, key){\n                                if ([\n                                    'options',\n                                    '_options',\n                                    '_inherited',\n                                    '_d3options',\n                                    'state',\n                                    'id',\n                                    'resizeHandler'\n                                ].indexOf(key) >= 0);\n\n                                else if (key === 'dispatch') {\n                                    if (options.chart[key] === undefined || options.chart[key] === null) {\n                                        if (scope._config.extended) options.chart[key] = {};\n                                    }\n                                    configureEvents(scope.chart[key], options.chart[key]);\n                                }\n\n                                else if ([\n                                    'lines',\n                                    'lines1',\n                                    'lines2',\n                                    'bars',\n                                    'bars1',\n                                    'bars2',\n                                    'stack1',\n                                    'stack2',\n                                    'stacked',\n                                    'multibar',\n                                    'discretebar',\n                                    'pie',\n                                    'scatter',\n                                    'bullet',\n                                    'sparkline',\n                                    'legend',\n                                    'distX',\n                                    'distY',\n                                    'xAxis',\n                                    'x2Axis',\n                                    'yAxis',\n                                    'yAxis1',\n                                    'yAxis2',\n                                    'y1Axis',\n                                    'y2Axis',\n                                    'y3Axis',\n                                    'y4Axis',\n                                    'interactiveLayer',\n                                    'controls'\n                                ].indexOf(key) >= 0){\n                                    if (options.chart[key] === undefined || options.chart[key] === null) {\n                                        if (scope._config.extended) options.chart[key] = {};\n                                    }\n                                    configure(scope.chart[key], options.chart[key], options.chart.type);\n                                }\n\n                                //TODO: need to fix bug in nvd3\n                                else if ((key === 'xTickFormat' || key === 'yTickFormat') && options.chart.type === 'lineWithFocusChart');\n\n                                else if (options.chart[key] === undefined || options.chart[key] === null){\n                                    if (scope._config.extended) options.chart[key] = value();\n                                }\n\n                                else scope.chart[key](options.chart[key]);\n                            });\n\n                            // Update with data\n                            scope.api.updateWithData(scope.data);\n\n                            // Configure wrappers\n                            if (options['title'] || scope._config.extended) configureWrapper('title');\n                            if (options['subtitle'] || scope._config.extended) configureWrapper('subtitle');\n                            if (options['caption'] || scope._config.extended) configureWrapper('caption');\n\n\n                            // Configure styles\n                            if (options['styles'] || scope._config.extended) configureStyles();\n\n                            nv.addGraph(function() {\n                                // Update the chart when window resizes\n                                scope.chart.resizeHandler = nv.utils.windowResize(function() { scope.chart.update(); });\n                                return scope.chart;\n                            }, options.chart['callback']);\n                        },\n\n                        // Update chart with new data\n                        updateWithData: function (data){\n                            if (data) {\n                                scope.options.chart['transitionDuration'] = +scope.options.chart['transitionDuration'] || 250;\n                                // remove whole svg element with old data\n                                d3.select(element[0]).select('svg').remove();\n\n                                // Select the current element to add <svg> element and to render the chart in\n                                d3.select(element[0]).append('svg')\n                                    .attr('height', scope.options.chart.height)\n                                    .attr('width', scope.options.chart.width  || '100%')\n                                    .datum(data)\n                                    .transition().duration(scope.options.chart['transitionDuration'])\n                                    .call(scope.chart);\n                            }\n                        },\n\n                        // Fully clear directive element\n                        clearElement: function (){\n                            element.find('.title').remove();\n                            element.find('.subtitle').remove();\n                            element.find('.caption').remove();\n                            element.empty();\n                            if (scope.chart) {\n                                // clear window resize event handler\n                                if (scope.chart.resizeHandler) scope.chart.resizeHandler.clear();\n\n                                // remove chart from nv.graph list\n                                for (var i = 0; i < nv.graphs.length; i++)\n                                    if (nv.graphs[i].id === scope.chart.id) {\n                                        nv.graphs.splice(i, 1);\n                                    }\n                            }\n                            scope.chart = null;\n                            nv.tooltip.cleanup();\n                        },\n\n                        // Get full directive scope\n                        getScope: function(){ return scope; }\n                    };\n\n                    // Configure the chart model with the passed options\n                    function configure(chart, options, chartType){\n                        if (chart && options){\n                            angular.forEach(chart, function(value, key){\n                                if (key === 'dispatch') {\n                                    if (options[key] === undefined || options[key] === null) {\n                                        if (scope._config.extended) options[key] = {};\n                                    }\n                                    configureEvents(value, options[key]);\n                                }\n                                else if ([\n                                    'scatter',\n                                    'defined',\n                                    'options',\n                                    'axis',\n                                    'rangeBand',\n                                    'rangeBands',\n                                    '_options',\n                                    '_inherited',\n                                    '_d3options',\n                                    '_calls'\n                                ].indexOf(key) < 0){\n                                    if (options[key] === undefined || options[key] === null){\n                                        if (scope._config.extended) options[key] = value();\n                                    }\n                                    else chart[key](options[key]);\n                                }\n                            });\n                        }\n                    }\n\n                    // Subscribe to the chart events (contained in 'dispatch')\n                    // and pass eventHandler functions in the 'options' parameter\n                    function configureEvents(dispatch, options){\n                        if (dispatch && options){\n                            angular.forEach(dispatch, function(value, key){\n                                if (options[key] === undefined || options[key] === null){\n                                    if (scope._config.extended) options[key] = value.on;\n                                }\n                                else dispatch.on(key + '._', options[key]);\n                            });\n                        }\n                    }\n\n                    // Configure 'title', 'subtitle', 'caption'.\n                    // nvd3 has no sufficient models for it yet.\n                    function configureWrapper(name){\n                        var _ = utils.deepExtend(defaultWrapper(name), scope.options[name] || {});\n\n                        if (scope._config.extended) scope.options[name] = _;\n\n                        var wrapElement = angular.element('<div></div>').html(_['html'] || '')\n                            .addClass(name).addClass(_.class)\n                            .removeAttr('style')\n                            .css(_.css);\n\n                        if (!_['html']) wrapElement.text(_.text);\n\n                        if (_.enable) {\n                            if (name === 'title') element.prepend(wrapElement);\n                            else if (name === 'subtitle') element.find('.title').after(wrapElement);\n                            else if (name === 'caption') element.append(wrapElement);\n                        }\n                    }\n\n                    // Add some styles to the whole directive element\n                    function configureStyles(){\n                        var _ = utils.deepExtend(defaultStyles(), scope.options['styles'] || {});\n\n                        if (scope._config.extended) scope.options['styles'] = _;\n\n                        angular.forEach(_.classes, function(value, key){\n                            value ? element.addClass(key) : element.removeClass(key);\n                        });\n\n                        element.removeAttr('style').css(_.css);\n                    }\n\n                    // Default values for 'title', 'subtitle', 'caption'\n                    function defaultWrapper(_){\n                        switch (_){\n                            case 'title': return {\n                                enable: false,\n                                text: 'Write Your Title',\n                                class: 'h4',\n                                css: {\n                                    width: scope.options.chart.width + 'px',\n                                    textAlign: 'center'\n                                }\n                            };\n                            case 'subtitle': return {\n                                enable: false,\n                                text: 'Write Your Subtitle',\n                                css: {\n                                    width: scope.options.chart.width + 'px',\n                                    textAlign: 'center'\n                                }\n                            };\n                            case 'caption': return {\n                                enable: false,\n                                text: 'Figure 1. Write Your Caption text.',\n                                css: {\n                                    width: scope.options.chart.width + 'px',\n                                    textAlign: 'center'\n                                }\n                            };\n                        }\n                    }\n\n                    // Default values for styles\n                    function defaultStyles(){\n                        return {\n                            classes: {\n                                'with-3d-shadow': true,\n                                'with-transitions': true,\n                                'gallery': false\n                            },\n                            css: {}\n                        };\n                    }\n\n                    /* Event Handling */\n                    // Watching on options changing\n                    scope.$watch('options', utils.debounce(function(newOptions){\n                        if (!scope._config.disabled && scope._config.autorefresh) scope.api.refresh();\n                    }, scope._config.debounce, true), true);\n\n                    // Watching on data changing\n                    scope.$watch('data', function(newData, oldData){\n                        if (newData !== oldData && scope.chart){\n                            if (!scope._config.disabled && scope._config.autorefresh) {\n                                scope._config.refreshDataOnly ? scope.chart.update() : scope.api.refresh(); // if wanted to refresh data only, use chart.update method, otherwise use full refresh.\n                            }\n                        }\n                    }, scope._config.deepWatchData);\n\n                    // Watching on config changing\n                    scope.$watch('config', function(newConfig, oldConfig){\n                        if (newConfig !== oldConfig){\n                            scope._config = angular.extend(defaultConfig, newConfig);\n                            scope.api.refresh();\n                        }\n                    }, true);\n\n                    //subscribe on global events\n                    angular.forEach(scope.events, function(eventHandler, event){\n                        scope.$on(event, function(e){\n                            return eventHandler(e, scope);\n                        });\n                    });\n\n                    // remove completely when directive is destroyed\n                    element.on('$destroy', function () {\n                        scope.api.clearElement();\n                    });\n                }\n            };\n        }])\n\n        .factory('utils', function(){\n            return {\n                debounce: function(func, wait, immediate) {\n                    var timeout;\n                    return function() {\n                        var context = this, args = arguments;\n                        var later = function() {\n                            timeout = null;\n                            if (!immediate) func.apply(context, args);\n                        };\n                        var callNow = immediate && !timeout;\n                        clearTimeout(timeout);\n                        timeout = setTimeout(later, wait);\n                        if (callNow) func.apply(context, args);\n                    };\n                },\n                deepExtend: function(dst){\n                    var me = this;\n                    angular.forEach(arguments, function(obj) {\n                        if (obj !== dst) {\n                            angular.forEach(obj, function(value, key) {\n                                if (dst[key] && dst[key].constructor && dst[key].constructor === Object) {\n                                    me.deepExtend(dst[key], value);\n                                } else {\n                                    dst[key] = value;\n                                }\n                            });\n                        }\n                    });\n                    return dst;\n                }\n            };\n        });\n})();"],"sourceRoot":""}