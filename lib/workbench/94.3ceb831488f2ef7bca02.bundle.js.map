{"version":3,"sources":["webpack:///./src/js/angular/settings/controllers.js"],"names":["ActiveLocationSettingsCtrl","$scope","toastr","$modalInstance","LicenseRestService","supportsStatistics","settings","statistics","getSettings","loader","getStatistics","then","response","data","status","msg","getError","error","setSettings","toggleStatistics","close","success","submitForm","cancel","dismiss","LicenseCtrl","$rootScope","checkLicenseHardcoded","res","isLicenseHardcoded","getLicenseInfo","license","message","valid","RegisterLicenseCtrl","$location","$modal","$window","$jwtAuth","$on","isAdmin","path","sendLicenseToValidateAndActivate","textAreaSel","$","licenseCode","sendLicenseToValidate","validatedLicense","licensee","val","open","templateUrl","controller","resolve","result","decodedLicense","atob","replace","registerLicense","history","back","confirmWantedNewLicenseDetails","$watch","currentFile","file","extractFromLicenseFile","getBackToPreviousPage","ValidateLicenseModalCtrl","ok","LoaderSamplesCtrl","setLoader","angular","module","$inject"],"mappings":"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","file":"94.3ceb831488f2ef7bca02.bundle.js","sourcesContent":["import 'angular/core/services';\nimport 'angular/core/services/jwt-auth.service';\n\nangular\n    .module('graphdb.framework.settings.controllers', [\n        'ngCookies',\n        'ui.bootstrap',\n        'graphdb.framework.core.services.jwtauth',\n        'toastr'\n    ])\n    .controller('ActiveLocationSettingsCtrl', ActiveLocationSettingsCtrl)\n    .controller('ValidateLicenseModalCtrl', ValidateLicenseModalCtrl)\n    .controller('LicenseCtrl', LicenseCtrl)\n    .controller('RegisterLicenseCtrl', RegisterLicenseCtrl)\n    .controller('LoaderSamplesCtrl', LoaderSamplesCtrl);\n\nActiveLocationSettingsCtrl.$inject = ['$scope', 'toastr', '$modalInstance', 'LicenseRestService'];\n\nfunction ActiveLocationSettingsCtrl($scope, toastr, $modalInstance, LicenseRestService) {\n    $scope.supportsStatistics = true;\n    $scope.settings = {statistics: false};\n    $scope.getSettings = getSettings;\n\n    function getSettings() {\n        $scope.loader = true;\n        LicenseRestService.getStatistics().then(function (response) {\n            $scope.settings.statistics = response.data === 'true';\n            $scope.supportsStatistics = true;\n        }, function (response) {\n            if (response.status === 404) {\n                $scope.supportsStatistics = false;\n            } else {\n                const msg = getError(response.data);\n                toastr.error(msg, 'Error getting settings');\n            }\n        });\n    }\n\n    $scope.getSettings();\n\n    $scope.setSettings = function () {\n        $scope.loader = true;\n        LicenseRestService.toggleStatistics($scope.settings.statistics).then(function () {\n            $modalInstance.close();\n            toastr.success('Settings have been saved');\n        }, function (response) {\n            const msg = getError(response.data);\n            toastr.error(msg, 'Error saving settings');\n        });\n    };\n\n    $scope.submitForm = function () {\n        $scope.setSettings();\n    };\n\n    $scope.cancel = function () {\n        $modalInstance.dismiss('cancel');\n    };\n}\n\nLicenseCtrl.$inject = ['$scope', 'LicenseRestService', 'toastr', '$rootScope'];\n\nfunction LicenseCtrl($scope, LicenseRestService, toastr, $rootScope) {\n    $scope.loader = true;\n\n    LicenseRestService.checkLicenseHardcoded()\n        .success(function (res) {\n            $rootScope.isLicenseHardcoded = (res === 'true');\n        })\n        .error(function () {\n            $rootScope.isLicenseHardcoded = false;\n            toastr.error('Error checking license availability');\n        })\n        .then(function () {\n            LicenseRestService.getLicenseInfo()\n                .success(function (res) {\n                    $scope.loader = false;\n                    $scope.license = res;\n                    // check if you have a hardcoded license that is not activated through the workbench and if\n                    // you do disable ability to update license\n                })\n                .error(function () {\n                    // no license but we need to check for 417\n                    $scope.loader = false;\n                    $scope.license = {message: 'No license was set.', valid: false};\n                });\n        });\n}\n\nRegisterLicenseCtrl.$inject = ['$scope', 'LicenseRestService', '$location', '$modal', 'toastr', '$window', '$jwtAuth'];\n\nfunction RegisterLicenseCtrl($scope, LicenseRestService, $location, $modal, toastr, $window, $jwtAuth) {\n    $scope.$on('securityInit', function () {\n        if (!$jwtAuth.isAdmin()) {\n            $location.path('/license');\n        }\n    });\n\n    $scope.sendLicenseToValidateAndActivate = sendLicenseToValidateAndActivate;\n\n    const textAreaSel = $('.license-textarea');\n\n    // watch for uploaded license file\n    $scope.$watch('currentFile', function () {\n        if ($scope.currentFile) {\n            const file = $scope.currentFile;\n            LicenseRestService.extractFromLicenseFile(file)\n                .success(function (licenseCode) {\n                    sendLicenseToValidateAndActivate(licenseCode);\n                }).error(function () {\n                    toastr.error('Could not upload file');\n                });\n        }\n    });\n\n    $scope.getBackToPreviousPage = function () {\n        $window.history.back();\n    };\n\n    // send license code for validation and activation\n    function sendLicenseToValidateAndActivate(licenseCode) {\n        LicenseRestService.sendLicenseToValidate(licenseCode)\n            .success(function (validatedLicense) {\n                if (validatedLicense.licensee !== 'Invalid') {\n                    // write code to textarea\n                    textAreaSel.val(licenseCode);\n                    // pop dialog for license details confirmation\n                    confirmWantedNewLicenseDetails(validatedLicense, licenseCode);\n                } else {\n                    // clear textarea on invalid license\n                    textAreaSel.val('');\n                    // show error\n                    toastr.error(validatedLicense.message);\n                }\n            })\n            .error(function () {\n                toastr.error('Invalid license');\n            });\n    }\n\n\n    // pops a modal dialog which asks you if your expected license details are correct\n    // and sends license to GraphDB upon confirmation\n    function confirmWantedNewLicenseDetails(license, licenseCode) {\n        const modalInstance = $modal.open({\n            templateUrl: 'js/angular/settings/modal/validate-license.html',\n            controller: 'ValidateLicenseModalCtrl',\n            resolve: {\n                license: function () {\n                    return license;\n                }\n            }\n        });\n\n        modalInstance.result.then(function () {\n            registerLicense(licenseCode);\n        });\n    }\n\n    // send license code to GraphDB for activation\n    function registerLicense(licenseCode) {\n        if (!licenseCode) {\n            licenseCode = textAreaSel.val();\n        }\n\n        if (licenseCode) {\n            // replacing whitespace makes this work on Safari too,\n            // whereas other browser happily ignore the whitespace\n            const decodedLicense = atob(licenseCode.replace(/\\s/g, ''));\n            LicenseRestService.registerLicense(decodedLicense)\n                .success(function () {\n                    $window.history.back();\n                }).error(function () {\n                    toastr.error('Error registering GraphDB license');\n                });\n        } else {\n            toastr.error('No license code available in textarea');\n        }\n    }\n}\n\nValidateLicenseModalCtrl.$inject = ['$scope', '$modalInstance', 'license'];\n\nfunction ValidateLicenseModalCtrl($scope, $modalInstance, license) {\n    $scope.ok = ok;\n    $scope.cancel = cancel;\n    $scope.license = license;\n\n    function ok() {\n        $modalInstance.close();\n    }\n\n    function cancel() {\n        $modalInstance.dismiss('cancel');\n    }\n}\n\nLoaderSamplesCtrl.$inject = ['$scope'];\n\nfunction LoaderSamplesCtrl($scope) {\n    $scope.loader = true;\n    $scope.setLoader = function (loader) {\n        $scope.loader = loader;\n    };\n}\n"],"sourceRoot":""}