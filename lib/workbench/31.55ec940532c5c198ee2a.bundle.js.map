{"version":3,"sources":["webpack:///./src/js/angular/utils/uri-utils.js","webpack:///./src/js/angular/utils/notifications.js","webpack:///./src/js/angular/sparql-template/controllers.js"],"names":["iriRegExp","angular","module","factory","isValidIri","iri","undefined","match","validateRdfUri","value","hasAngleBrackets","indexOf","noAngleBrackets","lastIndexOf","validProtocol","test","validPath","schemaSlashesIdx","substring","length","RegExp","e","Notifications","toastr","showToastMessageWithDelay","message","Promise","r","success","setTimeout","$inject","SparqlTemplatesCtrl","$scope","$repositories","SparqlTemplatesRestService","ModalService","getSparqlTemplates","getActiveRepository","isActiveRepoOntopType","isActiveRepoFedXType","sparqlTemplateIds","data","error","msg","getError","$watch","deleteTemplate","templateID","openSimpleModal","title","warning","result","then","deleteSparqlTemplate","SparqlTemplateCreateCtrl","$location","$window","$timeout","RDF4JRepositoriesRestService","SparqlRestService","UriUtils","hash","search","getNamespaces","setLoader","getRepositoryNamespaces","usedPrefixes","results","bindings","forEach","prefix","namespace","namespaces","repositoryError","finally","loadTab","addKnownPrefixes","noPadding","paddingRight","paddingLeft","currentTabConfig","orientationViewMode","currentQuery","templateExist","newValue","oldValue","path","timer","goBack","history","back","locationChangeListener","$on","event","isPristine","confirm","window","removeEventListener","showBeforeunloadMessage","cancel","preventDefault","confirmExit","returnValue","addEventListener","defaultTabConfig","query","inference","sameAs","isNewTemplate","isRunning","progressMessage","extraMessage","yasrInnerContainer","element","document","getElementById","queryIsRunning","queryStartTime","Date","now","countTimeouted","addClass","removeClass","$$phase","$apply","tabsData","tab","editor","setValue","queryType","resultsCount","offset","allResultsCount","page","pageSize","timeFinished","timeTook","sizeDelta","canWriteActiveRepo","options","readOnly","setQueryFromTabConfig","tabs","copy","setQuery","setDirty","JSON","stringify","getValue","isDefined","saveNewTemplate","createSparqlTemplate","saveTab","getSparqlTemplate","templateContent","saveTemplate","getQueryMode","validateQuery","isInvalidTemplateId","find","templateId","modalMsg","updateSparqlTemplate","$","on","controller"],"mappings":"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","file":"31.55ec940532c5c198ee2a.bundle.js","sourcesContent":["angular\n    .module('graphdb.framework.utils.uriutils', [])\n    .factory('UriUtils', UriUtils);\n\nlet iriRegExp;\ntry {\n    // Real validation but it requires a relatively new browser\n    iriRegExp = new RegExp(\"^[a-z](?:[-a-z0-9\\\\+\\\\.])*:(?:\\\\/\\\\/(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\\\._~\\\\u{A0}-\\\\u{D7FF}\\\\u{F900}-\\\\u{FDCF}\\\\u{FDF0}-\\\\u{FFEF}\\\\u{10000}-\\\\u{1FFFD}\\\\u{20000}-\\\\u{2FFFD}\\\\u{30000}-\\\\u{3FFFD}\\\\u{40000}-\\\\u{4FFFD}\\\\u{50000}-\\\\u{5FFFD}\\\\u{60000}-\\\\u{6FFFD}\\\\u{70000}-\\\\u{7FFFD}\\\\u{80000}-\\\\u{8FFFD}\\\\u{90000}-\\\\u{9FFFD}\\\\u{A0000}-\\\\u{AFFFD}\\\\u{B0000}-\\\\u{BFFFD}\\\\u{C0000}-\\\\u{CFFFD}\\\\u{D0000}-\\\\u{DFFFD}\\\\u{E1000}-\\\\u{EFFFD}!\\\\$&'\\\\(\\\\)\\\\*\\\\+,;=:])*@)?(?:\\\\[(?:(?:(?:[0-9a-f]{1,4}:){6}(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\\\\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3})|::(?:[0-9a-f]{1,4}:){5}(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\\\\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3})|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\\\\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3})|(?:[0-9a-f]{1,4}:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\\\\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3})|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\\\\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3})|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\\\\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3})|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\\\\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3})|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|v[0-9a-f]+[-a-z0-9\\\\._~!\\\\$&'\\\\(\\\\)\\\\*\\\\+,;=:]+)\\\\]|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\\\\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3}|(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\\\._~\\\\u{A0}-\\\\u{D7FF}\\\\u{F900}-\\\\u{FDCF}\\\\u{FDF0}-\\\\u{FFEF}\\\\u{10000}-\\\\u{1FFFD}\\\\u{20000}-\\\\u{2FFFD}\\\\u{30000}-\\\\u{3FFFD}\\\\u{40000}-\\\\u{4FFFD}\\\\u{50000}-\\\\u{5FFFD}\\\\u{60000}-\\\\u{6FFFD}\\\\u{70000}-\\\\u{7FFFD}\\\\u{80000}-\\\\u{8FFFD}\\\\u{90000}-\\\\u{9FFFD}\\\\u{A0000}-\\\\u{AFFFD}\\\\u{B0000}-\\\\u{BFFFD}\\\\u{C0000}-\\\\u{CFFFD}\\\\u{D0000}-\\\\u{DFFFD}\\\\u{E1000}-\\\\u{EFFFD}!\\\\$&'\\\\(\\\\)\\\\*\\\\+,;=@])*)(?::[0-9]*)?(?:\\\\/(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\\\._~\\\\u{A0}-\\\\u{D7FF}\\\\u{F900}-\\\\u{FDCF}\\\\u{FDF0}-\\\\u{FFEF}\\\\u{10000}-\\\\u{1FFFD}\\\\u{20000}-\\\\u{2FFFD}\\\\u{30000}-\\\\u{3FFFD}\\\\u{40000}-\\\\u{4FFFD}\\\\u{50000}-\\\\u{5FFFD}\\\\u{60000}-\\\\u{6FFFD}\\\\u{70000}-\\\\u{7FFFD}\\\\u{80000}-\\\\u{8FFFD}\\\\u{90000}-\\\\u{9FFFD}\\\\u{A0000}-\\\\u{AFFFD}\\\\u{B0000}-\\\\u{BFFFD}\\\\u{C0000}-\\\\u{CFFFD}\\\\u{D0000}-\\\\u{DFFFD}\\\\u{E1000}-\\\\u{EFFFD}!\\\\$&'\\\\(\\\\)\\\\*\\\\+,;=:@]))*)*|\\\\/(?:(?:(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\\\._~\\\\u{A0}-\\\\u{D7FF}\\\\u{F900}-\\\\u{FDCF}\\\\u{FDF0}-\\\\u{FFEF}\\\\u{10000}-\\\\u{1FFFD}\\\\u{20000}-\\\\u{2FFFD}\\\\u{30000}-\\\\u{3FFFD}\\\\u{40000}-\\\\u{4FFFD}\\\\u{50000}-\\\\u{5FFFD}\\\\u{60000}-\\\\u{6FFFD}\\\\u{70000}-\\\\u{7FFFD}\\\\u{80000}-\\\\u{8FFFD}\\\\u{90000}-\\\\u{9FFFD}\\\\u{A0000}-\\\\u{AFFFD}\\\\u{B0000}-\\\\u{BFFFD}\\\\u{C0000}-\\\\u{CFFFD}\\\\u{D0000}-\\\\u{DFFFD}\\\\u{E1000}-\\\\u{EFFFD}!\\\\$&'\\\\(\\\\)\\\\*\\\\+,;=:@]))+)(?:\\\\/(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\\\._~\\\\u{A0}-\\\\u{D7FF}\\\\u{F900}-\\\\u{FDCF}\\\\u{FDF0}-\\\\u{FFEF}\\\\u{10000}-\\\\u{1FFFD}\\\\u{20000}-\\\\u{2FFFD}\\\\u{30000}-\\\\u{3FFFD}\\\\u{40000}-\\\\u{4FFFD}\\\\u{50000}-\\\\u{5FFFD}\\\\u{60000}-\\\\u{6FFFD}\\\\u{70000}-\\\\u{7FFFD}\\\\u{80000}-\\\\u{8FFFD}\\\\u{90000}-\\\\u{9FFFD}\\\\u{A0000}-\\\\u{AFFFD}\\\\u{B0000}-\\\\u{BFFFD}\\\\u{C0000}-\\\\u{CFFFD}\\\\u{D0000}-\\\\u{DFFFD}\\\\u{E1000}-\\\\u{EFFFD}!\\\\$&'\\\\(\\\\)\\\\*\\\\+,;=:@]))*)*)?|(?:(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\\\._~\\\\u{A0}-\\\\u{D7FF}\\\\u{F900}-\\\\u{FDCF}\\\\u{FDF0}-\\\\u{FFEF}\\\\u{10000}-\\\\u{1FFFD}\\\\u{20000}-\\\\u{2FFFD}\\\\u{30000}-\\\\u{3FFFD}\\\\u{40000}-\\\\u{4FFFD}\\\\u{50000}-\\\\u{5FFFD}\\\\u{60000}-\\\\u{6FFFD}\\\\u{70000}-\\\\u{7FFFD}\\\\u{80000}-\\\\u{8FFFD}\\\\u{90000}-\\\\u{9FFFD}\\\\u{A0000}-\\\\u{AFFFD}\\\\u{B0000}-\\\\u{BFFFD}\\\\u{C0000}-\\\\u{CFFFD}\\\\u{D0000}-\\\\u{DFFFD}\\\\u{E1000}-\\\\u{EFFFD}!\\\\$&'\\\\(\\\\)\\\\*\\\\+,;=:@]))+)(?:\\\\/(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\\\._~\\\\u{A0}-\\\\u{D7FF}\\\\u{F900}-\\\\u{FDCF}\\\\u{FDF0}-\\\\u{FFEF}\\\\u{10000}-\\\\u{1FFFD}\\\\u{20000}-\\\\u{2FFFD}\\\\u{30000}-\\\\u{3FFFD}\\\\u{40000}-\\\\u{4FFFD}\\\\u{50000}-\\\\u{5FFFD}\\\\u{60000}-\\\\u{6FFFD}\\\\u{70000}-\\\\u{7FFFD}\\\\u{80000}-\\\\u{8FFFD}\\\\u{90000}-\\\\u{9FFFD}\\\\u{A0000}-\\\\u{AFFFD}\\\\u{B0000}-\\\\u{BFFFD}\\\\u{C0000}-\\\\u{CFFFD}\\\\u{D0000}-\\\\u{DFFFD}\\\\u{E1000}-\\\\u{EFFFD}!\\\\$&'\\\\(\\\\)\\\\*\\\\+,;=:@]))*)*|(?!(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\\\._~\\\\u{A0}-\\\\u{D7FF}\\\\u{F900}-\\\\u{FDCF}\\\\u{FDF0}-\\\\u{FFEF}\\\\u{10000}-\\\\u{1FFFD}\\\\u{20000}-\\\\u{2FFFD}\\\\u{30000}-\\\\u{3FFFD}\\\\u{40000}-\\\\u{4FFFD}\\\\u{50000}-\\\\u{5FFFD}\\\\u{60000}-\\\\u{6FFFD}\\\\u{70000}-\\\\u{7FFFD}\\\\u{80000}-\\\\u{8FFFD}\\\\u{90000}-\\\\u{9FFFD}\\\\u{A0000}-\\\\u{AFFFD}\\\\u{B0000}-\\\\u{BFFFD}\\\\u{C0000}-\\\\u{CFFFD}\\\\u{D0000}-\\\\u{DFFFD}\\\\u{E1000}-\\\\u{EFFFD}!\\\\$&'\\\\(\\\\)\\\\*\\\\+,;=:@])))(?:\\\\?(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\\\._~\\\\u{A0}-\\\\u{D7FF}\\\\u{F900}-\\\\u{FDCF}\\\\u{FDF0}-\\\\u{FFEF}\\\\u{10000}-\\\\u{1FFFD}\\\\u{20000}-\\\\u{2FFFD}\\\\u{30000}-\\\\u{3FFFD}\\\\u{40000}-\\\\u{4FFFD}\\\\u{50000}-\\\\u{5FFFD}\\\\u{60000}-\\\\u{6FFFD}\\\\u{70000}-\\\\u{7FFFD}\\\\u{80000}-\\\\u{8FFFD}\\\\u{90000}-\\\\u{9FFFD}\\\\u{A0000}-\\\\u{AFFFD}\\\\u{B0000}-\\\\u{BFFFD}\\\\u{C0000}-\\\\u{CFFFD}\\\\u{D0000}-\\\\u{DFFFD}\\\\u{E1000}-\\\\u{EFFFD}!\\\\$&'\\\\(\\\\)\\\\*\\\\+,;=:@])|[\\\\u{E000}-\\\\u{F8FF}\\\\u{F0000}-\\\\u{FFFFD}\\\\u{100000}-\\\\u{10FFFD}\\\\/\\\\?])*)?(?:#(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\\\._~\\\\u{A0}-\\\\u{D7FF}\\\\u{F900}-\\\\u{FDCF}\\\\u{FDF0}-\\\\u{FFEF}\\\\u{10000}-\\\\u{1FFFD}\\\\u{20000}-\\\\u{2FFFD}\\\\u{30000}-\\\\u{3FFFD}\\\\u{40000}-\\\\u{4FFFD}\\\\u{50000}-\\\\u{5FFFD}\\\\u{60000}-\\\\u{6FFFD}\\\\u{70000}-\\\\u{7FFFD}\\\\u{80000}-\\\\u{8FFFD}\\\\u{90000}-\\\\u{9FFFD}\\\\u{A0000}-\\\\u{AFFFD}\\\\u{B0000}-\\\\u{BFFFD}\\\\u{C0000}-\\\\u{CFFFD}\\\\u{D0000}-\\\\u{DFFFD}\\\\u{E1000}-\\\\u{EFFFD}!\\\\$&'\\\\(\\\\)\\\\*\\\\+,;=:@])|[\\\\/\\\\?])*)?$\", \"ui\");\n} catch (e) {\n    // Fallback to simple validation, works in all browsers\n    iriRegExp = new RegExp(\"^[a-z](?:[-a-z0-9\\\\+\\\\.])*:\", \"i\");\n}\n\nfunction UriUtils() {\n    function validateRdfUri(value) {\n        const hasAngleBrackets = value.indexOf(\"<\") >= 0 && value.indexOf(\">\") >= 0;\n        const noAngleBrackets = value.indexOf(\"<\") === -1 && value.lastIndexOf(\">\") === -1;\n        const validProtocol = /^<?(http|urn).*>?/.test(value) && (hasAngleBrackets || noAngleBrackets);\n        let validPath = false;\n        if (validProtocol) {\n            if (value.indexOf(\"http\") >= 0) {\n                const schemaSlashesIdx = value.indexOf('//');\n                validPath = schemaSlashesIdx > 4\n                    && value.substring(schemaSlashesIdx + 2).length > 0;\n            } else if (value.indexOf(\"urn\") >= 0) {\n                validPath = value.substring(4).length > 0;\n            }\n        }\n        return validProtocol && validPath;\n    }\n\n    function isValidIri(iri) {\n        return iri !== undefined && !!iri.match(iriRegExp);\n    }\n\n    return {\n        isValidIri: isValidIri,\n        validateRdfUri: validateRdfUri\n    };\n}\n","angular\n    .module('graphdb.framework.utils.notifications', [])\n    .factory('Notifications', Notifications);\n\nNotifications.$inject = ['toastr'];\n\nfunction Notifications(toastr) {\n    return {\n        showToastMessageWithDelay\n    };\n\n    /**\n     *  This method will show message with tiny delay and only after completion\n     *  of latter redirection to \"graphs-visualizations\" page will happen.\n     * @param {string} message The message to be displayed.\n     * @return {Promise<any>}\n     */\n    function showToastMessageWithDelay(message) {\n        return new Promise((r) => {\n            toastr.success(message);\n            setTimeout(r, 200);\n        });\n    }\n}\n","import 'angular/core/services';\nimport 'angular/core/services/repositories.service';\nimport 'angular/rest/monitoring.rest.service';\nimport 'angular/utils/notifications';\nimport 'angular/utils/uri-utils';\n\nconst modules = [\n    'ui.bootstrap',\n    'graphdb.framework.core.services.repositories',\n    'graphdb.framework.rest.monitoring.service',\n    'toastr'\n];\n\nangular.module('graphdb.framework.sparql-template.controllers', modules, [\n    'graphdb.framework.utils.notifications'\n])\n    .controller('SparqlTemplatesCtrl', SparqlTemplatesCtrl)\n    .controller('SparqlTemplateCreateCtrl', SparqlTemplateCreateCtrl);\n\nSparqlTemplatesCtrl.$inject = ['$scope', '$repositories', 'SparqlTemplatesRestService', 'toastr', 'ModalService'];\n\nfunction SparqlTemplatesCtrl($scope, $repositories, SparqlTemplatesRestService, toastr, ModalService) {\n\n    $scope.getSparqlTemplates = function () {\n        // Only do this if there is an active repo that isn't an Ontop repo.\n        // Ontop repos doesn't support update operations.\n        if ($repositories.getActiveRepository()\n                && !$repositories.isActiveRepoOntopType()\n                    && !$repositories.isActiveRepoFedXType()) {\n            SparqlTemplatesRestService.getSparqlTemplates().success(function (data) {\n                $scope.sparqlTemplateIds = data;\n            }).error(function (data) {\n                const msg = getError(data);\n                toastr.error(msg, 'Could not get SPARQL templates');\n            });\n        } else {\n            $scope.sparqlTemplateIds = [];\n        }\n    };\n\n    $scope.$watch(function () {\n        return $repositories.getActiveRepository();\n    }, function () {\n        $scope.getSparqlTemplates();\n    });\n\n    $scope.deleteTemplate = function (templateID) {\n        ModalService.openSimpleModal({\n            title: 'Warning',\n            message: 'Are you sure you want to delete the SPARQL template ' + '\\'' + templateID + '\\'?',\n            warning: true\n        }).result\n            .then(function () {\n                SparqlTemplatesRestService.deleteSparqlTemplate(templateID)\n                    .success(function () {\n                        toastr.success(templateID, 'Deleted successfully SPARQL template');\n                        $scope.getSparqlTemplates();\n                    }).error(function (e) {\n                    toastr.error(getError(e), `Could not delete ${templateID} template`);\n                });\n            });\n    };\n}\n\nSparqlTemplateCreateCtrl.$inject = ['$scope', '$location', 'toastr', '$repositories', '$window', '$timeout', 'SparqlTemplatesRestService', 'RDF4JRepositoriesRestService', 'SparqlRestService', 'UriUtils', 'ModalService'];\n\nfunction SparqlTemplateCreateCtrl($scope, $location, toastr, $repositories, $window, $timeout, SparqlTemplatesRestService, RDF4JRepositoriesRestService, SparqlRestService, UriUtils, ModalService) {\n\n    const hash = $location.hash() || '';\n    $scope.templateID = ($location.search().templateID || '') + (hash ? (`#${hash}`) : '');\n    $scope.title = ($scope.templateID ? 'Edit' : 'Create') + ' SPARQL Template';\n    $scope.getNamespaces = getNamespaces;\n    $scope.setLoader = setLoader;\n    $scope.addKnownPrefixes = addKnownPrefixes;\n    $scope.noPadding = {paddingRight: 0, paddingLeft: 0};\n    $scope.currentTabConfig = {};\n    // This property is obligatory in order to show YASQUE and YASR properly\n    $scope.orientationViewMode = true;\n    $scope.currentQuery = {};\n    let templateExist = false;\n\n\n    $scope.$watch(function () {\n        return $repositories.getActiveRepository();\n    }, function (newValue, oldValue) {\n        if (newValue !== oldValue) {\n            $location.path('/sparql-templates');\n        }\n    });\n\n    let timer = null;\n    $scope.goBack = function () {\n        timer = $timeout(function () {\n            $window.history.back();\n        }, 1000);\n    };\n\n    const locationChangeListener = $scope.$on('$locationChangeStart', function (event) {\n        confirmExit(event);\n    });\n\n    window.addEventListener('beforeunload', showBeforeunloadMessage);\n\n    function showBeforeunloadMessage(event) {\n        if (!$scope.currentQuery.isPristine) {\n            event.returnValue = true;\n        }\n    }\n\n    function confirmExit(event) {\n        if (!$scope.currentQuery.isPristine) {\n            if (!confirm('You have unsaved changes. Are you sure that you want to exit?')) {\n                event.preventDefault();\n            } else {\n                window.removeEventListener('beforeunload', showBeforeunloadMessage);\n                locationChangeListener();\n                $timeout.cancel(timer);\n            }\n        }\n    }\n\n    $scope.$on('$destroy', function (event) {\n        window.removeEventListener('beforeunload', showBeforeunloadMessage);\n        locationChangeListener();\n        $timeout.cancel(timer);\n    });\n\n    const defaultTabConfig = {\n        templateID: '',\n        query: 'PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\\n' +\n            'PREFIX ex: <http://example.com#>\\n' +\n            'DELETE {\\n' +\n            '  ?subject ex:myPredicate ?oldValue .\\n' +\n            '} INSERT {\\n' +\n            '  ?subject ex:myPredicate ?newValue .\\n' +\n            '} WHERE {\\n' +\n            '  ?id rdf:type ex:MyType .\\n' +\n            '  ?subject ex:isRelatedTo ?id .\\n' +\n            '}\\n',\n        inference: true,\n        sameAs: true,\n        isNewTemplate: true,\n        isPristine: true\n    };\n\n    $scope.saveTab = function () {\n        // Should have this empty function in this view\n    };\n\n    // Called when user clicks on a sample query\n    $scope.setQuery = function (query) {\n        // Hack for YASQE bug\n        window.editor.setValue(query ? query : ' ');\n    };\n\n    if ($scope.templateID) {\n        getSparqlTemplate($scope.templateID);\n    } else {\n        setQueryFromTabConfig();\n    }\n\n    // FIXME: this is copy-pasted in graphs-config.controller.js and query-editor.controller.js. Find a way to avoid duplications\n    function getNamespaces() {\n        // Signals the namespaces are to be fetched => loader will be shown\n        setLoader(true, 'Refreshing namespaces', 'Normally this is a fast operation but it may take longer if a bigger repository needs to be initialised first.');\n        RDF4JRepositoriesRestService.getRepositoryNamespaces()\n            .success(function (data) {\n                const usedPrefixes = {};\n                data.results.bindings.forEach(function (e) {\n                    usedPrefixes[e.prefix.value] = e.namespace.value;\n                });\n                $scope.namespaces = usedPrefixes;\n            })\n            .error(function (data) {\n                $scope.repositoryError = getError(data);\n            })\n            .finally(function () {\n                // Signals namespaces were fetched => loader will be hidden\n                setLoader(false);\n                loadTab();\n            });\n    }\n\n    function setLoader(isRunning, progressMessage, extraMessage) {\n        const yasrInnerContainer = angular.element(document.getElementById('yasr-inner'));\n        $scope.queryIsRunning = isRunning;\n        if (isRunning) {\n            $scope.queryStartTime = Date.now();\n            $scope.countTimeouted = false;\n            $scope.progressMessage = progressMessage;\n            $scope.extraMessage = extraMessage;\n            yasrInnerContainer.addClass('hide');\n        } else {\n            $scope.progressMessage = '';\n            $scope.extraMessage = '';\n            yasrInnerContainer.removeClass('hide');\n        }\n\n        // We might call this from angular or outside angular so take care of applying the scope.\n        if ($scope.$$phase === null) {\n            $scope.$apply();\n        }\n    }\n\n    function loadTab() {\n        $scope.tabsData = [$scope.currentQuery];\n\n        const tab = $scope.currentQuery;\n\n        if (!$scope.currentQuery.query) {\n            // hack for YASQE bug\n            window.editor.setValue(' ');\n        } else {\n            window.editor.setValue($scope.currentQuery.query);\n        }\n\n        $timeout(function () {\n            $scope.currentTabConfig = {};\n            $scope.currentTabConfig.queryType = tab.queryType;\n            $scope.currentTabConfig.resultsCount = tab.resultsCount;\n\n            $scope.currentTabConfig.offset = tab.offset;\n            $scope.currentTabConfig.allResultsCount = tab.allResultsCount;\n            $scope.currentTabConfig.page = tab.page;\n            $scope.currentTabConfig.pageSize = tab.pageSize;\n\n            $scope.currentTabConfig.timeFinished = tab.timeFinished;\n            $scope.currentTabConfig.timeTook = tab.timeTook;\n            $scope.currentTabConfig.sizeDelta = tab.sizeDelta;\n            $scope.$apply();\n        }, 0);\n\n        if (!$scope.canWriteActiveRepo()) {\n            window.editor.options.readOnly = true;\n        }\n    }\n\n    function getSparqlTemplate(templateID) {\n        SparqlTemplatesRestService.getSparqlTemplate(templateID).success(function (templateContent) {\n            defaultTabConfig.query = templateContent;\n            defaultTabConfig.templateID = templateID;\n\n            defaultTabConfig.isNewTemplate = !templateID;\n\n            setQueryFromTabConfig();\n        }).error(function (data) {\n            const msg = getError(data);\n            toastr.error(msg, `Could not get ${$scope.currentQuery.templateID} template`);\n            $scope.repositoryError = msg;\n        });\n    }\n\n    function setQueryFromTabConfig() {\n        $scope.tabsData = $scope.tabs = [defaultTabConfig];\n        $scope.currentQuery = angular.copy(defaultTabConfig);\n\n        if (window.editor) {\n            $scope.setQuery($scope.currentQuery.query);\n            loadTab();\n        }\n\n        $scope.$watch(function () {\n            return $scope.currentQuery.query;\n        }, function (newValue, oldValue) {\n            if (newValue !== oldValue) {\n                $scope.setDirty();\n            }\n        });\n    }\n\n    $scope.saveTemplate = function () {\n        if (!validateQuery()) {\n            return;\n        }\n\n        if (!$scope.currentQuery.templateID) {\n            toastr.error('SPARQL template IRI is required');\n            return;\n        } else {\n            validateTemplateID();\n            if ($scope.isInvalidTemplateId) {\n                return;\n            }\n        }\n\n        if ($scope.currentQuery.isNewTemplate) {\n            checkIfTemplateExists()\n                .then(() => {\n                    if (templateExist) {\n                        const modalMsg = `<div>SPARQL Template <strong>${$scope.currentQuery.templateID}</strong> already exists.</div><br>\n                                        <div><span class=\"icon-2x icon-warning\" style=\"color: #d54a33\"/> Do you want to override the template query?</div>`;\n                        ModalService.openSimpleModal({\n                            title: 'Confirm save',\n                            message: modalMsg,\n                            warning: true\n                        }).result\n                            .then(function () {\n                                saveNewTemplate();\n                            });\n                    } else {\n                        saveNewTemplate();\n                    }\n                });\n        } else {\n            if (!$scope.currentQuery.isPristine) {\n                SparqlTemplatesRestService.updateSparqlTemplate($scope.currentQuery).success(function () {\n                    $scope.currentQuery.isPristine = true;\n                    $scope.currentQuery.isNewTemplate = false;\n                    toastr.success($scope.currentQuery.templateID, 'Updated SPARQL template');\n                    $scope.goBack();\n                }).error(function (data) {\n                    const msg = getError(data);\n                    toastr.error(msg, `Could not save ${$scope.currentQuery.templateID} template`);\n                });\n            } else {\n                // No changes to template query, go back to\n                $scope.goBack();\n            }\n        }\n    };\n\n\n    // Add known prefixes\n    function addKnownPrefixes() {\n        SparqlRestService.addKnownPrefixes(JSON.stringify(window.editor.getValue()))\n            .success(function (data) {\n                if (angular.isDefined(window.editor) && angular.isDefined(data) && data !== window.editor.getValue()) {\n                    window.editor.setValue(data);\n                }\n            })\n            .error(function (data) {\n                const msg = getError(data);\n                toastr.error(msg, 'Error! Could not add known prefixes');\n                return true;\n            });\n    }\n\n    $('textarea').on('paste', function () {\n        $timeout(function () {\n            addKnownPrefixes();\n        }, 0);\n    });\n\n    $scope.setDirty = function () {\n        $scope.currentQuery.isPristine = false;\n    };\n\n    function hasValidQuery() {\n        return window.editor && window.editor.getQueryMode() === 'update';\n    }\n\n    function validateQuery() {\n        if (!hasValidQuery()) {\n            toastr.error('The template query must be an UPDATE query', 'Invalid query');\n            return false;\n        }\n\n        return true;\n    }\n\n    function validateTemplateID() {\n        $scope.isInvalidTemplateId = !UriUtils.isValidIri($scope.currentQuery.templateID);\n    }\n\n    function saveNewTemplate() {\n        SparqlTemplatesRestService.createSparqlTemplate($scope.currentQuery).success(function () {\n            $scope.currentQuery.isPristine = true;\n            $scope.currentQuery.isNewTemplate = false;\n            toastr.success($scope.currentQuery.templateID, 'Saved SPARQL template');\n            $scope.goBack();\n        }).error(function (data) {\n            const msg = getError(data);\n            toastr.error(msg, `Could not save ${$scope.currentQuery.templateID} template`);\n        });\n    }\n\n    function checkIfTemplateExists() {\n        return SparqlTemplatesRestService\n            .getSparqlTemplates()\n                .success(function (data) {\n                    templateExist = data.find((templateId) => templateId === $scope.currentQuery.templateID);\n        }).error(function (data) {\n            const msg = getError(data);\n            toastr.error(msg, 'Could not get SPARQL templates');\n        });\n    }\n}\n"],"sourceRoot":""}